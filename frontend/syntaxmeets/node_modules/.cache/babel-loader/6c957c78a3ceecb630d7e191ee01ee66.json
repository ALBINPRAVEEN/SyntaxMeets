{"ast":null,"code":"ace.define(\"ace/mode/perl6_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var Perl6HighlightRules = function () {\n    var keywords = \"my|our|class|role|grammar|is|does|sub|method|submethod|try|\" + \"default|when|if|elsif|else|unless|with|orwith|without|for|given|proceed|\" + \"succeed|loop|while|until|repeat|module|use|need|import|require|unit|\" + \"constant|enum|multi|return|has|token|rule|make|made|proto|state|augment|\" + \"but|anon|supersede|let|subset|gather|returns|return-rw|temp|\" + \"BEGIN|CHECK|INIT|END|CLOSE|ENTER|LEAVE|KEEP|UNDO|PRE|POST|FIRST|NEXT|LAST|CATCH|CONTROL|QUIT|DOC\";\n    var types = \"Any|Array|Associative|AST|atomicint|Attribute|Backtrace|Backtrace::Frame|\" + \"Bag|Baggy|BagHash|Blob|Block|Bool|Buf|Callable|CallFrame|Cancellation|\" + \"Capture|Channel|Code|compiler|Complex|ComplexStr|Cool|CurrentThreadScheduler|\" + \"Cursor|Date|Dateish|DateTime|Distro|Duration|Encoding|Exception|Failure|\" + \"FatRat|Grammar|Hash|HyperWhatever|Instant|Int|IntStr|IO|IO::ArgFiles|\" + \"IO::CatHandle|IO::Handle|IO::Notification|IO::Path|IO::Path::Cygwin|\" + \"IO::Path::QNX|IO::Path::Unix|IO::Path::Win32|IO::Pipe|IO::Socket|\" + \"IO::Socket::Async|IO::Socket::INET|IO::Spec|IO::Spec::Cygwin|IO::Spec::QNX|\" + \"IO::Spec::Unix|IO::Spec::Win32|IO::Special|Iterable|Iterator|Junction|Kernel|\" + \"Label|List|Lock|Lock::Async|Macro|Map|Match|Metamodel::AttributeContainer|\" + \"Metamodel::C3MRO|Metamodel::ClassHOW|Metamodel::EnumHOW|Metamodel::Finalization|\" + \"Metamodel::MethodContainer|Metamodel::MROBasedMethodDispatch|Metamodel::MultipleInheritance|\" + \"Metamodel::Naming|Metamodel::Primitives|Metamodel::PrivateMethodContainer|\" + \"Metamodel::RoleContainer|Metamodel::Trusting|Method|Mix|MixHash|Mixy|Mu|\" + \"NFC|NFD|NFKC|NFKD|Nil|Num|Numeric|NumStr|ObjAt|Order|Pair|Parameter|Perl|\" + \"Pod::Block|Pod::Block::Code|Pod::Block::Comment|Pod::Block::Declarator|\" + \"Pod::Block::Named|Pod::Block::Para|Pod::Block::Table|Pod::Heading|Pod::Item|\" + \"Positional|PositionalBindFailover|Proc|Proc::Async|Promise|Proxy|PseudoStash|\" + \"QuantHash|Range|Rat|Rational|RatStr|Real|Regex|Routine|Scalar|Scheduler|\" + \"Semaphore|Seq|Set|SetHash|Setty|Signature|Slip|Stash|Str|StrDistance|Stringy|\" + \"Sub|Submethod|Supplier|Supplier::Preserving|Supply|Systemic|Tap|Telemetry|\" + \"Telemetry::Instrument::Thread|Telemetry::Instrument::Usage|Telemetry::Period|\" + \"Telemetry::Sampler|Thread|ThreadPoolScheduler|UInt|Uni|utf8|Variable|Version|\" + \"VM|Whatever|WhateverCode|WrapHandle|int|uint|num|str|\" + \"int8|int16|int32|int64|uint8|uint16|uint32|uint64|long|longlong|num32|num64|size_t|bool|CArray|Pointer|\" + \"Backtrace|Backtrace::Frame|Exception|Failure|X::AdHoc|X::Anon::Augment|X::Anon::Multi|\" + \"X::Assignment::RO|X::Attribute::NoPackage|X::Attribute::Package|X::Attribute::Undeclared|\" + \"X::Augment::NoSuchType|X::Bind|X::Bind::NativeType|X::Bind::Slice|X::Caller::NotDynamic|\" + \"X::Channel::ReceiveOnClosed|X::Channel::SendOnClosed|X::Comp|X::Composition::NotComposable|\" + \"X::Constructor::Positional|X::ControlFlow|X::ControlFlow::Return|X::DateTime::TimezoneClash|\" + \"X::Declaration::Scope|X::Declaration::Scope::Multi|X::Does::TypeObject|X::Eval::NoSuchLang|\" + \"X::Export::NameClash|X::IO|X::IO::Chdir|X::IO::Chmod|X::IO::Copy|X::IO::Cwd|X::IO::Dir|\" + \"X::IO::DoesNotExist|X::IO::Link|X::IO::Mkdir|X::IO::Move|X::IO::Rename|X::IO::Rmdir|X::IO::Symlink|\" + \"X::IO::Unlink|X::Inheritance::NotComposed|X::Inheritance::Unsupported|X::Method::InvalidQualifier|\" + \"X::Method::NotFound|X::Method::Private::Permission|X::Method::Private::Unqualified|\" + \"X::Mixin::NotComposable|X::NYI|X::NoDispatcher|X::Numeric::Real|X::OS|X::Obsolete|X::OutOfRange|\" + \"X::Package::Stubbed|X::Parameter::Default|X::Parameter::MultipleTypeConstraints|\" + \"X::Parameter::Placeholder|X::Parameter::Twigil|X::Parameter::WrongOrder|X::Phaser::Multiple|\" + \"X::Phaser::PrePost|X::Placeholder::Block|X::Placeholder::Mainline|X::Pod|X::Proc::Async|\" + \"X::Proc::Async::AlreadyStarted|X::Proc::Async::CharsOrBytes|X::Proc::Async::MustBeStarted|\" + \"X::Proc::Async::OpenForWriting|X::Proc::Async::TapBeforeSpawn|X::Proc::Unsuccessful|\" + \"X::Promise::CauseOnlyValidOnBroken|X::Promise::Vowed|X::Redeclaration|X::Role::Initialization|\" + \"X::Seq::Consumed|X::Sequence::Deduction|X::Signature::NameClash|X::Signature::Placeholder|\" + \"X::Str::Numeric|X::StubCode|X::Syntax|X::Syntax::Augment::WithoutMonkeyTyping|\" + \"X::Syntax::Comment::Embedded|X::Syntax::Confused|X::Syntax::InfixInTermPosition|\" + \"X::Syntax::Malformed|X::Syntax::Missing|X::Syntax::NegatedPair|X::Syntax::NoSelf|\" + \"X::Syntax::Number::RadixOutOfRange|X::Syntax::P5|X::Syntax::Regex::Adverb|\" + \"X::Syntax::Regex::SolitaryQuantifier|X::Syntax::Reserved|X::Syntax::Self::WithoutObject|\" + \"X::Syntax::Signature::InvocantMarker|X::Syntax::Term::MissingInitializer|X::Syntax::UnlessElse|\" + \"X::Syntax::Variable::Match|X::Syntax::Variable::Numeric|X::Syntax::Variable::Twigil|X::Temporal|\" + \"X::Temporal::InvalidFormat|X::TypeCheck|X::TypeCheck::Assignment|X::TypeCheck::Binding|\" + \"X::TypeCheck::Return|X::TypeCheck::Splice|X::Undeclared\";\n    var builtinFunctions = \"abs|abs2rel|absolute|accept|ACCEPTS|accessed|acos|acosec|acosech|acosh|\" + \"acotan|acotanh|acquire|act|action|actions|add|add_attribute|add_enum_value|\" + \"add_fallback|add_method|add_parent|add_private_method|add_role|add_trustee|\" + \"adverb|after|all|allocate|allof|allowed|alternative-names|annotations|antipair|\" + \"antipairs|any|anyof|app_lifetime|append|arch|archname|args|arity|asec|asech|\" + \"asin|asinh|ASSIGN-KEY|ASSIGN-POS|assuming|ast|at|atan|atan2|atanh|AT-KEY|\" + \"atomic-assign|atomic-dec-fetch|atomic-fetch|atomic-fetch-add|atomic-fetch-dec|\" + \"atomic-fetch-inc|atomic-fetch-sub|atomic-inc-fetch|AT-POS|attributes|auth|await|\" + \"backtrace|Bag|BagHash|base|basename|base-repeating|batch|BIND-KEY|BIND-POS|\" + \"bind-stderr|bind-stdin|bind-stdout|bind-udp|bits|bless|block|bool-only|\" + \"bounds|break|Bridge|broken|BUILD|build-date|bytes|cache|callframe|calling-package|\" + \"CALL-ME|callsame|callwith|can|cancel|candidates|cando|canonpath|caps|caption|\" + \"Capture|cas|catdir|categorize|categorize-list|catfile|catpath|cause|ceiling|\" + \"cglobal|changed|Channel|chars|chdir|child|child-name|child-typename|chmod|chomp|\" + \"chop|chr|chrs|chunks|cis|classify|classify-list|cleanup|clone|close|closed|\" + \"close-stdin|code|codes|collate|column|comb|combinations|command|comment|\" + \"compiler|Complex|compose|compose_type|composer|condition|config|configure_destroy|\" + \"configure_type_checking|conj|connect|constraints|construct|contains|contents|copy|\" + \"cos|cosec|cosech|cosh|cotan|cotanh|count|count-only|cpu-cores|cpu-usage|CREATE|\" + \"create_type|cross|cue|curdir|curupdir|d|Date|DateTime|day|daycount|day-of-month|\" + \"day-of-week|day-of-year|days-in-month|declaration|decode|decoder|deepmap|\" + \"defined|DEFINITE|delayed|DELETE-KEY|DELETE-POS|denominator|desc|DESTROY|destroyers|\" + \"devnull|did-you-mean|die|dir|dirname|dir-sep|DISTROnames|do|done|duckmap|dynamic|\" + \"e|eager|earlier|elems|emit|enclosing|encode|encoder|encoding|end|ends-with|enum_from_value|\" + \"enum_value_list|enum_values|enums|eof|EVAL|EVALFILE|exception|excludes-max|excludes-min|\" + \"EXISTS-KEY|EXISTS-POS|exit|exitcode|exp|expected|explicitly-manage|expmod|extension|f|\" + \"fail|fc|feature|file|filename|find_method|find_method_qualified|finish|first|flat|flatmap|\" + \"flip|floor|flush|fmt|format|formatter|freeze|from|from-list|from-loop|from-posix|full|\" + \"full-barrier|get|get_value|getc|gist|got|grab|grabpairs|grep|handle|handled|handles|\" + \"hardware|has_accessor|head|headers|hh-mm-ss|hidden|hides|hour|how|hyper|id|illegal|\" + \"im|in|indent|index|indices|indir|infinite|infix|install_method_cache|\" + \"Instant|instead|int-bounds|interval|in-timezone|invalid-str|invert|invocant|IO|\" + \"IO::Notification.watch-path|is_trusted|is_type|isa|is-absolute|is-hidden|is-initial-thread|\" + \"is-int|is-lazy|is-leap-year|isNaN|is-prime|is-relative|is-routine|is-setting|is-win|item|\" + \"iterator|join|keep|kept|KERNELnames|key|keyof|keys|kill|kv|kxxv|l|lang|last|lastcall|later|\" + \"lazy|lc|leading|level|line|lines|link|listen|live|local|lock|log|log10|lookup|lsb|\" + \"MAIN|match|max|maxpairs|merge|message|method_table|methods|migrate|min|minmax|\" + \"minpairs|minute|misplaced|Mix|MixHash|mkdir|mode|modified|month|move|mro|msb|multiness|\" + \"name|named|named_names|narrow|nativecast|native-descriptor|nativesizeof|new|new_type|\" + \"new-from-daycount|new-from-pairs|next|nextcallee|next-handle|nextsame|nextwith|NFC|NFD|\" + \"NFKC|NFKD|nl-in|nl-out|nodemap|none|norm|not|note|now|nude|numerator|Numeric|of|\" + \"offset|offset-in-hours|offset-in-minutes|old|on-close|one|on-switch|open|opened|\" + \"operation|optional|ord|ords|orig|os-error|osname|out-buffer|pack|package|package-kind|\" + \"package-name|packages|pair|pairs|pairup|parameter|params|parent|parent-name|parents|parse|\" + \"parse-base|parsefile|parse-names|parts|path|path-sep|payload|peer-host|peer-port|periods|\" + \"perl|permutations|phaser|pick|pickpairs|pid|placeholder|plus|polar|poll|polymod|pop|pos|\" + \"positional|posix|postfix|postmatch|precomp-ext|precomp-target|pred|prefix|prematch|prepend|\" + \"print|printf|print-nl|print-to|private|private_method_table|proc|produce|Promise|prompt|\" + \"protect|pull-one|push|push-all|push-at-least|push-exactly|push-until-lazy|put|\" + \"qualifier-type|quit|r|race|radix|rand|range|raw|re|read|readchars|readonly|\" + \"ready|Real|reallocate|reals|reason|rebless|receive|recv|redispatcher|redo|reduce|\" + \"rel2abs|relative|release|rename|repeated|replacement|report|reserved|resolve|\" + \"restore|result|resume|rethrow|reverse|right|rindex|rmdir|roles_to_compose|\" + \"rolish|roll|rootdir|roots|rotate|rotor|round|roundrobin|routine-type|run|rwx|s|\" + \"samecase|samemark|samewith|say|schedule-on|scheduler|scope|sec|sech|second|seek|\" + \"self|send|Set|set_hidden|set_name|set_package|set_rw|set_value|SetHash|\" + \"set-instruments|setup_finalization|shape|share|shell|shift|sibling|sigil|\" + \"sign|signal|signals|signature|sin|sinh|sink|sink-all|skip|skip-at-least|\" + \"skip-at-least-pull-one|skip-one|sleep|sleep-timer|sleep-until|Slip|slurp|\" + \"slurp-rest|slurpy|snap|snapper|so|socket-host|socket-port|sort|source|\" + \"source-package|spawn|SPEC|splice|split|splitdir|splitpath|sprintf|spurt|\" + \"sqrt|squish|srand|stable|start|started|starts-with|status|stderr|stdout|\" + \"sub_signature|subbuf|subbuf-rw|subname|subparse|subst|subst-mutate|\" + \"substr|substr-eq|substr-rw|succ|sum|Supply|symlink|t|tail|take|take-rw|\" + \"tan|tanh|tap|target|target-name|tc|tclc|tell|then|throttle|throw|timezone|\" + \"tmpdir|to|today|toggle|to-posix|total|trailing|trans|tree|trim|trim-leading|\" + \"trim-trailing|truncate|truncated-to|trusts|try_acquire|trying|twigil|type|\" + \"type_captures|typename|uc|udp|uncaught_handler|unimatch|uniname|uninames|\" + \"uniparse|uniprop|uniprops|unique|unival|univals|unlink|unlock|unpack|unpolar|\" + \"unshift|unwrap|updir|USAGE|utc|val|value|values|VAR|variable|verbose-config|\" + \"version|VMnames|volume|vow|w|wait|warn|watch|watch-path|week|weekday-of-month|\" + \"week-number|week-year|WHAT|WHERE|WHEREFORE|WHICH|WHO|whole-second|WHY|\" + \"wordcase|words|workaround|wrap|write|write-to|yada|year|yield|yyyy-mm-dd|\" + \"z|zip|zip-latest|\" + \"plan|done-testing|bail-out|todo|skip|skip-rest|diag|subtest|pass|flunk|ok|\" + \"nok|cmp-ok|is-deeply|isnt|is-approx|like|unlike|use-ok|isa-ok|does-ok|\" + \"can-ok|dies-ok|lives-ok|eval-dies-ok|eval-lives-ok|throws-like|fails-like|\" + \"rw|required|native|repr|export|symbol\";\n    var constants_ascii = \"pi|Inf|tau|time\";\n    var ops_txt = \"eq|ne|gt|lt|le|ge|div|gcd|lcm|leg|cmp|ff|fff|\" + \"x|before|after|Z|X|and|or|andthen|notandthen|orelse|xor\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": keywords,\n      \"storage.type\": types,\n      \"constant.language\": constants_ascii,\n      \"support.function\": builtinFunctions,\n      \"keyword.operator\": ops_txt\n    }, \"identifier\");\n    var moduleName = \"[a-zA-Z_][a-zA-Z_0-9:-]*\\\\b\";\n    var hex = {\n      token: \"constant.numeric\",\n      regex: \"0x[0-9a-fA-F]+\\\\b\"\n    };\n    var num_rat = {\n      token: \"constant.numeric\",\n      regex: \"[+-.]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n    };\n    var num_with_ = {\n      token: \"constant.numeric\",\n      regex: \"(?:\\\\d+_?\\\\d+)+\\\\b\"\n    };\n    var complex_numbers = {\n      token: \"constant.numeric\",\n      regex: \"\\\\+?\\\\d+i\\\\b\"\n    };\n    var booleans = {\n      token: \"constant.language.boolean\",\n      regex: \"(?:True|False)\\\\b\"\n    };\n    var versions = {\n      token: \"constant.other\",\n      regex: \"v[0-9](?:\\\\.[a-zA-Z0-9*])*\\\\b\"\n    };\n    var lang_keywords = {\n      token: keywordMapper,\n      regex: \"[a-zA-Z][\\\\:a-zA-Z0-9_-]*\\\\b\"\n    };\n    var variables = {\n      token: \"variable.language\",\n      regex: \"[$@%&][?*!.]?[a-zA-Z0-9_-]+\\\\b\"\n    };\n    var vars_special = {\n      token: \"variable.language\",\n      regex: \"\\\\$[/|!]?|@\\\\$/\"\n    };\n    var ops_char = {\n      token: \"keyword.operator\",\n      regex: \"=|<|>|\\\\+|\\\\*|-|/|~|%|\\\\?|!|\\\\^|\\\\.|\\\\:|\\\\,|\" + \"»|«|\\\\||\\\\&|⚛|∘\"\n    };\n    var constants_unicode = {\n      token: \"constant.language\",\n      regex: \"𝑒|π|τ|∞\"\n    };\n    var qstrings = {\n      token: \"string.quoted.single\",\n      regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n    };\n    var word_quoting = {\n      token: \"string.quoted.single\",\n      regex: \"[<](?:[a-zA-Z0-9 ])*[>]\"\n    };\n    var regexp = {\n      token: \"string.regexp\",\n      regex: \"[m|rx]?[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n    };\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.block\",\n        // Embedded Comments - Parentheses\n        regex: \"#[`|=]\\\\(.*\\\\)\"\n      }, {\n        token: \"comment.block\",\n        // Embedded Comments - Brackets\n        regex: \"#[`|=]\\\\[.*\\\\]\"\n      }, {\n        token: \"comment.doc\",\n        // Multiline Comments\n        regex: \"^=(?:begin)\\\\b\",\n        next: \"block_comment\"\n      }, {\n        token: \"string.unquoted\",\n        // q Heredocs\n        regex: \"q[x|w]?\\\\:to/END/;\",\n        next: \"qheredoc\"\n      }, {\n        token: \"string.unquoted\",\n        // qq Heredocs\n        regex: \"qq[x|w]?\\\\:to/END/;\",\n        next: \"qqheredoc\"\n      }, regexp, qstrings, {\n        token: \"string.quoted.double\",\n        // Double Quoted String\n        regex: '\"',\n        next: \"qqstring\"\n      }, word_quoting, {\n        token: [\"keyword\", \"text\", \"variable.module\"],\n        // use - Module Names, Pragmas, etc.\n        regex: \"(use)(\\\\s+)((?:\" + moduleName + \"\\\\.?)*)\"\n      }, hex, num_rat, num_with_, complex_numbers, booleans, versions, lang_keywords, variables, vars_special, ops_char, constants_unicode, {\n        token: \"comment\",\n        // Sigle Line Comments\n        regex: \"#.*$\"\n      }, {\n        token: \"lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"qqstring\": [{\n        token: \"constant.language.escape\",\n        regex: '\\\\\\\\(?:[nrtef\\\\\\\\\"$]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2})'\n      }, variables, vars_special, {\n        token: \"lparen\",\n        regex: \"{\",\n        next: \"qqinterpolation\"\n      }, {\n        token: \"string.quoted.double\",\n        regex: '\"',\n        next: \"start\"\n      }, {\n        defaultToken: \"string.quoted.double\"\n      }],\n      \"qqinterpolation\": [hex, num_rat, num_with_, complex_numbers, booleans, versions, lang_keywords, variables, vars_special, ops_char, constants_unicode, qstrings, regexp, {\n        token: \"rparen\",\n        regex: \"}\",\n        next: \"qqstring\"\n      }],\n      \"block_comment\": [{\n        token: \"comment.doc\",\n        regex: \"^=end +[a-zA-Z_0-9]*\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment.doc\"\n      }],\n      \"qheredoc\": [{\n        token: \"string.unquoted\",\n        regex: \"END$\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string.unquoted\"\n      }],\n      \"qqheredoc\": [variables, vars_special, {\n        token: \"lparen\",\n        regex: \"{\",\n        next: \"qqheredocinterpolation\"\n      }, {\n        token: \"string.unquoted\",\n        regex: \"END$\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string.unquoted\"\n      }],\n      \"qqheredocinterpolation\": [hex, num_rat, num_with_, complex_numbers, booleans, versions, lang_keywords, variables, vars_special, ops_char, constants_unicode, qstrings, regexp, {\n        token: \"rparen\",\n        regex: \"}\",\n        next: \"qqheredoc\"\n      }]\n    };\n  };\n\n  oop.inherits(Perl6HighlightRules, TextHighlightRules);\n  exports.Perl6HighlightRules = Perl6HighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingBraceOutdent = function () {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/perl6\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/perl6_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var Perl6HighlightRules = require(\"./perl6_highlight_rules\").Perl6HighlightRules;\n\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = Perl6HighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new CStyleFoldMode({\n      start: \"^=(begin)\\\\b\",\n      end: \"^=(end)\\\\b\"\n    });\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.blockComment = [{\n      start: \"=begin\",\n      end: \"=end\",\n      lineStartOnly: true\n    }, {\n      start: \"=item\",\n      end: \"=end\",\n      lineStartOnly: true\n    }];\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/perl6\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/perl6\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/node_modules/ace-builds/src-noconflict/mode-perl6.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","Perl6HighlightRules","keywords","types","builtinFunctions","constants_ascii","ops_txt","keywordMapper","createKeywordMapper","moduleName","hex","token","regex","num_rat","num_with_","complex_numbers","booleans","versions","lang_keywords","variables","vars_special","ops_char","constants_unicode","qstrings","word_quoting","regexp","$rules","next","defaultToken","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","CStyleFoldMode","HighlightRules","$outdent","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","lineStartOnly","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","type","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/perl6_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar Perl6HighlightRules = function() {\r\n\r\n    var keywords = (\r\n        \"my|our|class|role|grammar|is|does|sub|method|submethod|try|\" +\r\n        \"default|when|if|elsif|else|unless|with|orwith|without|for|given|proceed|\" +\r\n        \"succeed|loop|while|until|repeat|module|use|need|import|require|unit|\" +\r\n        \"constant|enum|multi|return|has|token|rule|make|made|proto|state|augment|\" +\r\n        \"but|anon|supersede|let|subset|gather|returns|return-rw|temp|\" +\r\n        \"BEGIN|CHECK|INIT|END|CLOSE|ENTER|LEAVE|KEEP|UNDO|PRE|POST|FIRST|NEXT|LAST|CATCH|CONTROL|QUIT|DOC\"\r\n    );\r\n\r\n    var types = (\r\n        \"Any|Array|Associative|AST|atomicint|Attribute|Backtrace|Backtrace::Frame|\" +\r\n        \"Bag|Baggy|BagHash|Blob|Block|Bool|Buf|Callable|CallFrame|Cancellation|\" +\r\n        \"Capture|Channel|Code|compiler|Complex|ComplexStr|Cool|CurrentThreadScheduler|\" +\r\n        \"Cursor|Date|Dateish|DateTime|Distro|Duration|Encoding|Exception|Failure|\"+\r\n        \"FatRat|Grammar|Hash|HyperWhatever|Instant|Int|IntStr|IO|IO::ArgFiles|\"+\r\n        \"IO::CatHandle|IO::Handle|IO::Notification|IO::Path|IO::Path::Cygwin|\"+\r\n        \"IO::Path::QNX|IO::Path::Unix|IO::Path::Win32|IO::Pipe|IO::Socket|\"+\r\n        \"IO::Socket::Async|IO::Socket::INET|IO::Spec|IO::Spec::Cygwin|IO::Spec::QNX|\"+\r\n        \"IO::Spec::Unix|IO::Spec::Win32|IO::Special|Iterable|Iterator|Junction|Kernel|\"+\r\n        \"Label|List|Lock|Lock::Async|Macro|Map|Match|Metamodel::AttributeContainer|\"+\r\n        \"Metamodel::C3MRO|Metamodel::ClassHOW|Metamodel::EnumHOW|Metamodel::Finalization|\"+\r\n        \"Metamodel::MethodContainer|Metamodel::MROBasedMethodDispatch|Metamodel::MultipleInheritance|\"+\r\n        \"Metamodel::Naming|Metamodel::Primitives|Metamodel::PrivateMethodContainer|\"+\r\n        \"Metamodel::RoleContainer|Metamodel::Trusting|Method|Mix|MixHash|Mixy|Mu|\"+\r\n        \"NFC|NFD|NFKC|NFKD|Nil|Num|Numeric|NumStr|ObjAt|Order|Pair|Parameter|Perl|\"+\r\n        \"Pod::Block|Pod::Block::Code|Pod::Block::Comment|Pod::Block::Declarator|\"+\r\n        \"Pod::Block::Named|Pod::Block::Para|Pod::Block::Table|Pod::Heading|Pod::Item|\"+\r\n        \"Positional|PositionalBindFailover|Proc|Proc::Async|Promise|Proxy|PseudoStash|\"+\r\n        \"QuantHash|Range|Rat|Rational|RatStr|Real|Regex|Routine|Scalar|Scheduler|\"+\r\n        \"Semaphore|Seq|Set|SetHash|Setty|Signature|Slip|Stash|Str|StrDistance|Stringy|\"+\r\n        \"Sub|Submethod|Supplier|Supplier::Preserving|Supply|Systemic|Tap|Telemetry|\"+\r\n        \"Telemetry::Instrument::Thread|Telemetry::Instrument::Usage|Telemetry::Period|\"+\r\n        \"Telemetry::Sampler|Thread|ThreadPoolScheduler|UInt|Uni|utf8|Variable|Version|\"+\r\n        \"VM|Whatever|WhateverCode|WrapHandle|int|uint|num|str|\"+\r\n        \"int8|int16|int32|int64|uint8|uint16|uint32|uint64|long|longlong|num32|num64|size_t|bool|CArray|Pointer|\"+\r\n\t\t\"Backtrace|Backtrace::Frame|Exception|Failure|X::AdHoc|X::Anon::Augment|X::Anon::Multi|\"+\r\n\t\t\"X::Assignment::RO|X::Attribute::NoPackage|X::Attribute::Package|X::Attribute::Undeclared|\"+\r\n\t\t\"X::Augment::NoSuchType|X::Bind|X::Bind::NativeType|X::Bind::Slice|X::Caller::NotDynamic|\"+\r\n\t\t\"X::Channel::ReceiveOnClosed|X::Channel::SendOnClosed|X::Comp|X::Composition::NotComposable|\"+\r\n\t\t\"X::Constructor::Positional|X::ControlFlow|X::ControlFlow::Return|X::DateTime::TimezoneClash|\"+\r\n\t\t\"X::Declaration::Scope|X::Declaration::Scope::Multi|X::Does::TypeObject|X::Eval::NoSuchLang|\"+\r\n\t\t\"X::Export::NameClash|X::IO|X::IO::Chdir|X::IO::Chmod|X::IO::Copy|X::IO::Cwd|X::IO::Dir|\"+\r\n\t\t\"X::IO::DoesNotExist|X::IO::Link|X::IO::Mkdir|X::IO::Move|X::IO::Rename|X::IO::Rmdir|X::IO::Symlink|\"+\r\n\t\t\"X::IO::Unlink|X::Inheritance::NotComposed|X::Inheritance::Unsupported|X::Method::InvalidQualifier|\"+\r\n\t\t\"X::Method::NotFound|X::Method::Private::Permission|X::Method::Private::Unqualified|\"+\r\n\t\t\"X::Mixin::NotComposable|X::NYI|X::NoDispatcher|X::Numeric::Real|X::OS|X::Obsolete|X::OutOfRange|\"+\r\n\t\t\"X::Package::Stubbed|X::Parameter::Default|X::Parameter::MultipleTypeConstraints|\"+\r\n\t\t\"X::Parameter::Placeholder|X::Parameter::Twigil|X::Parameter::WrongOrder|X::Phaser::Multiple|\"+\r\n\t\t\"X::Phaser::PrePost|X::Placeholder::Block|X::Placeholder::Mainline|X::Pod|X::Proc::Async|\"+\r\n\t\t\"X::Proc::Async::AlreadyStarted|X::Proc::Async::CharsOrBytes|X::Proc::Async::MustBeStarted|\"+\r\n\t\t\"X::Proc::Async::OpenForWriting|X::Proc::Async::TapBeforeSpawn|X::Proc::Unsuccessful|\"+\r\n\t\t\"X::Promise::CauseOnlyValidOnBroken|X::Promise::Vowed|X::Redeclaration|X::Role::Initialization|\"+\r\n\t\t\"X::Seq::Consumed|X::Sequence::Deduction|X::Signature::NameClash|X::Signature::Placeholder|\"+\r\n\t\t\"X::Str::Numeric|X::StubCode|X::Syntax|X::Syntax::Augment::WithoutMonkeyTyping|\"+\r\n\t\t\"X::Syntax::Comment::Embedded|X::Syntax::Confused|X::Syntax::InfixInTermPosition|\"+\r\n\t\t\"X::Syntax::Malformed|X::Syntax::Missing|X::Syntax::NegatedPair|X::Syntax::NoSelf|\"+\r\n\t\t\"X::Syntax::Number::RadixOutOfRange|X::Syntax::P5|X::Syntax::Regex::Adverb|\"+\r\n\t\t\"X::Syntax::Regex::SolitaryQuantifier|X::Syntax::Reserved|X::Syntax::Self::WithoutObject|\"+\r\n\t\t\"X::Syntax::Signature::InvocantMarker|X::Syntax::Term::MissingInitializer|X::Syntax::UnlessElse|\"+\r\n\t\t\"X::Syntax::Variable::Match|X::Syntax::Variable::Numeric|X::Syntax::Variable::Twigil|X::Temporal|\"+\r\n\t\t\"X::Temporal::InvalidFormat|X::TypeCheck|X::TypeCheck::Assignment|X::TypeCheck::Binding|\"+\r\n\t\t\"X::TypeCheck::Return|X::TypeCheck::Splice|X::Undeclared\"\r\n\t\t);\r\n\r\n    var builtinFunctions = (\r\n        \"abs|abs2rel|absolute|accept|ACCEPTS|accessed|acos|acosec|acosech|acosh|\"+\r\n        \"acotan|acotanh|acquire|act|action|actions|add|add_attribute|add_enum_value|\"+\r\n        \"add_fallback|add_method|add_parent|add_private_method|add_role|add_trustee|\"+\r\n        \"adverb|after|all|allocate|allof|allowed|alternative-names|annotations|antipair|\"+\r\n        \"antipairs|any|anyof|app_lifetime|append|arch|archname|args|arity|asec|asech|\"+\r\n        \"asin|asinh|ASSIGN-KEY|ASSIGN-POS|assuming|ast|at|atan|atan2|atanh|AT-KEY|\"+\r\n        \"atomic-assign|atomic-dec-fetch|atomic-fetch|atomic-fetch-add|atomic-fetch-dec|\"+\r\n        \"atomic-fetch-inc|atomic-fetch-sub|atomic-inc-fetch|AT-POS|attributes|auth|await|\"+\r\n        \"backtrace|Bag|BagHash|base|basename|base-repeating|batch|BIND-KEY|BIND-POS|\"+\r\n        \"bind-stderr|bind-stdin|bind-stdout|bind-udp|bits|bless|block|bool-only|\"+\r\n        \"bounds|break|Bridge|broken|BUILD|build-date|bytes|cache|callframe|calling-package|\"+\r\n        \"CALL-ME|callsame|callwith|can|cancel|candidates|cando|canonpath|caps|caption|\"+\r\n        \"Capture|cas|catdir|categorize|categorize-list|catfile|catpath|cause|ceiling|\"+\r\n        \"cglobal|changed|Channel|chars|chdir|child|child-name|child-typename|chmod|chomp|\"+\r\n        \"chop|chr|chrs|chunks|cis|classify|classify-list|cleanup|clone|close|closed|\"+\r\n        \"close-stdin|code|codes|collate|column|comb|combinations|command|comment|\"+\r\n        \"compiler|Complex|compose|compose_type|composer|condition|config|configure_destroy|\"+\r\n        \"configure_type_checking|conj|connect|constraints|construct|contains|contents|copy|\"+\r\n        \"cos|cosec|cosech|cosh|cotan|cotanh|count|count-only|cpu-cores|cpu-usage|CREATE|\"+\r\n        \"create_type|cross|cue|curdir|curupdir|d|Date|DateTime|day|daycount|day-of-month|\"+\r\n        \"day-of-week|day-of-year|days-in-month|declaration|decode|decoder|deepmap|\"+\r\n        \"defined|DEFINITE|delayed|DELETE-KEY|DELETE-POS|denominator|desc|DESTROY|destroyers|\"+\r\n        \"devnull|did-you-mean|die|dir|dirname|dir-sep|DISTROnames|do|done|duckmap|dynamic|\"+\r\n        \"e|eager|earlier|elems|emit|enclosing|encode|encoder|encoding|end|ends-with|enum_from_value|\"+\r\n        \"enum_value_list|enum_values|enums|eof|EVAL|EVALFILE|exception|excludes-max|excludes-min|\"+\r\n        \"EXISTS-KEY|EXISTS-POS|exit|exitcode|exp|expected|explicitly-manage|expmod|extension|f|\"+\r\n        \"fail|fc|feature|file|filename|find_method|find_method_qualified|finish|first|flat|flatmap|\"+\r\n        \"flip|floor|flush|fmt|format|formatter|freeze|from|from-list|from-loop|from-posix|full|\"+\r\n        \"full-barrier|get|get_value|getc|gist|got|grab|grabpairs|grep|handle|handled|handles|\"+\r\n        \"hardware|has_accessor|head|headers|hh-mm-ss|hidden|hides|hour|how|hyper|id|illegal|\"+\r\n        \"im|in|indent|index|indices|indir|infinite|infix|install_method_cache|\"+\r\n        \"Instant|instead|int-bounds|interval|in-timezone|invalid-str|invert|invocant|IO|\"+\r\n        \"IO::Notification.watch-path|is_trusted|is_type|isa|is-absolute|is-hidden|is-initial-thread|\"+\r\n        \"is-int|is-lazy|is-leap-year|isNaN|is-prime|is-relative|is-routine|is-setting|is-win|item|\"+\r\n        \"iterator|join|keep|kept|KERNELnames|key|keyof|keys|kill|kv|kxxv|l|lang|last|lastcall|later|\"+\r\n        \"lazy|lc|leading|level|line|lines|link|listen|live|local|lock|log|log10|lookup|lsb|\"+\r\n        \"MAIN|match|max|maxpairs|merge|message|method_table|methods|migrate|min|minmax|\"+\r\n        \"minpairs|minute|misplaced|Mix|MixHash|mkdir|mode|modified|month|move|mro|msb|multiness|\"+\r\n        \"name|named|named_names|narrow|nativecast|native-descriptor|nativesizeof|new|new_type|\"+\r\n        \"new-from-daycount|new-from-pairs|next|nextcallee|next-handle|nextsame|nextwith|NFC|NFD|\"+\r\n        \"NFKC|NFKD|nl-in|nl-out|nodemap|none|norm|not|note|now|nude|numerator|Numeric|of|\"+\r\n        \"offset|offset-in-hours|offset-in-minutes|old|on-close|one|on-switch|open|opened|\"+\r\n        \"operation|optional|ord|ords|orig|os-error|osname|out-buffer|pack|package|package-kind|\"+\r\n        \"package-name|packages|pair|pairs|pairup|parameter|params|parent|parent-name|parents|parse|\"+\r\n        \"parse-base|parsefile|parse-names|parts|path|path-sep|payload|peer-host|peer-port|periods|\"+\r\n        \"perl|permutations|phaser|pick|pickpairs|pid|placeholder|plus|polar|poll|polymod|pop|pos|\"+\r\n        \"positional|posix|postfix|postmatch|precomp-ext|precomp-target|pred|prefix|prematch|prepend|\"+\r\n        \"print|printf|print-nl|print-to|private|private_method_table|proc|produce|Promise|prompt|\"+\r\n        \"protect|pull-one|push|push-all|push-at-least|push-exactly|push-until-lazy|put|\"+\r\n        \"qualifier-type|quit|r|race|radix|rand|range|raw|re|read|readchars|readonly|\"+\r\n        \"ready|Real|reallocate|reals|reason|rebless|receive|recv|redispatcher|redo|reduce|\"+\r\n        \"rel2abs|relative|release|rename|repeated|replacement|report|reserved|resolve|\"+\r\n        \"restore|result|resume|rethrow|reverse|right|rindex|rmdir|roles_to_compose|\"+\r\n        \"rolish|roll|rootdir|roots|rotate|rotor|round|roundrobin|routine-type|run|rwx|s|\"+\r\n        \"samecase|samemark|samewith|say|schedule-on|scheduler|scope|sec|sech|second|seek|\"+\r\n        \"self|send|Set|set_hidden|set_name|set_package|set_rw|set_value|SetHash|\"+\r\n        \"set-instruments|setup_finalization|shape|share|shell|shift|sibling|sigil|\"+\r\n        \"sign|signal|signals|signature|sin|sinh|sink|sink-all|skip|skip-at-least|\"+\r\n        \"skip-at-least-pull-one|skip-one|sleep|sleep-timer|sleep-until|Slip|slurp|\"+\r\n        \"slurp-rest|slurpy|snap|snapper|so|socket-host|socket-port|sort|source|\"+\r\n        \"source-package|spawn|SPEC|splice|split|splitdir|splitpath|sprintf|spurt|\"+\r\n        \"sqrt|squish|srand|stable|start|started|starts-with|status|stderr|stdout|\"+\r\n        \"sub_signature|subbuf|subbuf-rw|subname|subparse|subst|subst-mutate|\"+\r\n        \"substr|substr-eq|substr-rw|succ|sum|Supply|symlink|t|tail|take|take-rw|\"+\r\n        \"tan|tanh|tap|target|target-name|tc|tclc|tell|then|throttle|throw|timezone|\"+\r\n        \"tmpdir|to|today|toggle|to-posix|total|trailing|trans|tree|trim|trim-leading|\"+\r\n        \"trim-trailing|truncate|truncated-to|trusts|try_acquire|trying|twigil|type|\"+\r\n        \"type_captures|typename|uc|udp|uncaught_handler|unimatch|uniname|uninames|\"+\r\n        \"uniparse|uniprop|uniprops|unique|unival|univals|unlink|unlock|unpack|unpolar|\"+\r\n        \"unshift|unwrap|updir|USAGE|utc|val|value|values|VAR|variable|verbose-config|\"+\r\n        \"version|VMnames|volume|vow|w|wait|warn|watch|watch-path|week|weekday-of-month|\"+\r\n        \"week-number|week-year|WHAT|WHERE|WHEREFORE|WHICH|WHO|whole-second|WHY|\"+\r\n        \"wordcase|words|workaround|wrap|write|write-to|yada|year|yield|yyyy-mm-dd|\"+\r\n        \"z|zip|zip-latest|\"+\r\n        \"plan|done-testing|bail-out|todo|skip|skip-rest|diag|subtest|pass|flunk|ok|\"+\r\n        \"nok|cmp-ok|is-deeply|isnt|is-approx|like|unlike|use-ok|isa-ok|does-ok|\"+\r\n        \"can-ok|dies-ok|lives-ok|eval-dies-ok|eval-lives-ok|throws-like|fails-like|\"+\r\n\t\t\"rw|required|native|repr|export|symbol\"\r\n\t);\r\n\tvar constants_ascii = (\"pi|Inf|tau|time\");\r\n\t\r\n\tvar ops_txt = (\"eq|ne|gt|lt|le|ge|div|gcd|lcm|leg|cmp|ff|fff|\"+\r\n\t\t\"x|before|after|Z|X|and|or|andthen|notandthen|orelse|xor\"\r\n\t);\r\n\r\n\tvar keywordMapper = this.createKeywordMapper({\r\n\t\t\"keyword\": keywords,\r\n\t\t\"storage.type\" : types,\r\n\t\t\"constant.language\": constants_ascii,\r\n\t\t\"support.function\": builtinFunctions,\r\n\t\t\"keyword.operator\": ops_txt\r\n\t}, \"identifier\");\r\n\t\r\n\tvar moduleName = \"[a-zA-Z_][a-zA-Z_0-9:-]*\\\\b\";\r\n\tvar hex = {\ttoken : \"constant.numeric\", regex : \"0x[0-9a-fA-F]+\\\\b\" };\r\n\tvar num_rat = { token : \"constant.numeric\", regex : \"[+-.]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\" };\r\n\tvar num_with_ = { token : \"constant.numeric\", regex : \"(?:\\\\d+_?\\\\d+)+\\\\b\" };\r\n\tvar complex_numbers = { token : \"constant.numeric\", regex : \"\\\\+?\\\\d+i\\\\b\" };\r\n\tvar booleans = { token : \"constant.language.boolean\", regex : \"(?:True|False)\\\\b\" };\r\n\tvar versions = { token : \"constant.other\", regex : \"v[0-9](?:\\\\.[a-zA-Z0-9*])*\\\\b\" };\r\n\tvar lang_keywords = { token : keywordMapper, regex : \"[a-zA-Z][\\\\:a-zA-Z0-9_-]*\\\\b\" };\r\n\tvar variables = { token : \"variable.language\", regex : \"[$@%&][?*!.]?[a-zA-Z0-9_-]+\\\\b\" };\r\n\tvar vars_special = { token: \"variable.language\", regex : \"\\\\$[/|!]?|@\\\\$/\" };\r\n\tvar ops_char = { token : \"keyword.operator\", regex : \"=|<|>|\\\\+|\\\\*|-|/|~|%|\\\\?|!|\\\\^|\\\\.|\\\\:|\\\\,|\"+\r\n\t\"»|«|\\\\||\\\\&|⚛|∘\" };\r\n\tvar constants_unicode = { token : \"constant.language\", regex : \"𝑒|π|τ|∞\" };\r\n\tvar qstrings = { token : \"string.quoted.single\", regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\" };\r\n\tvar word_quoting = { token : \"string.quoted.single\", regex : \"[<](?:[a-zA-Z0-9 ])*[>]\"};\r\n\tvar regexp = {\r\n\t\t\t\ttoken : \"string.regexp\",\r\n\t\t\t\tregex : \"[m|rx]?[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\" };\r\n\t\r\n\t\r\n\tthis.$rules = {\r\n\t\t\"start\" : [\r\n\t\t\t{\r\n\t\t\t\ttoken : \"comment.block\", // Embedded Comments - Parentheses\r\n\t\t\t\tregex : \"#[`|=]\\\\(.*\\\\)\"\r\n\t\t\t}, {\r\n\t\t\t\ttoken : \"comment.block\", // Embedded Comments - Brackets\r\n\t\t\t\tregex : \"#[`|=]\\\\[.*\\\\]\"\r\n\t\t\t}, {\r\n\t\t\t\ttoken : \"comment.doc\", // Multiline Comments\r\n\t\t\t\tregex : \"^=(?:begin)\\\\b\",\r\n\t\t\t\tnext : \"block_comment\"\r\n\t\t\t}, {\r\n\t\t\t\ttoken : \"string.unquoted\", // q Heredocs\r\n\t\t\t\tregex : \"q[x|w]?\\\\:to/END/;\",\r\n\t\t\t\tnext : \"qheredoc\"\r\n\t\t\t}, {\r\n\t\t\t\ttoken : \"string.unquoted\", // qq Heredocs\r\n\t\t\t\tregex : \"qq[x|w]?\\\\:to/END/;\",\r\n\t\t\t\tnext : \"qqheredoc\"\r\n\t\t\t},\r\n\t\t\tregexp,\r\n\t\t\tqstrings\r\n\t\t\t, {\r\n\t\t\t\ttoken : \"string.quoted.double\", // Double Quoted String\r\n\t\t\t\tregex : '\"',\r\n\t\t\t\tnext : \"qqstring\"\r\n\t\t\t},\r\n\t\t\tword_quoting\r\n\t\t\t, {\r\n\t\t\t\ttoken: [\"keyword\", \"text\", \"variable.module\"], // use - Module Names, Pragmas, etc.\r\n\t\t\t\tregex: \"(use)(\\\\s+)((?:\"+moduleName+\"\\\\.?)*)\"\r\n\t\t\t},\r\n\t\t\thex,\r\n\t\t\tnum_rat,\r\n\t\t\tnum_with_,\r\n\t\t\tcomplex_numbers,\r\n\t\t\tbooleans,\r\n\t\t\tversions,\r\n\t\t\tlang_keywords,\r\n\t\t\tvariables,\r\n\t\t\tvars_special,\r\n\t\t\tops_char,\r\n\t\t\tconstants_unicode\r\n\t\t\t, {\r\n\t\t\t\ttoken : \"comment\", // Sigle Line Comments\r\n\t\t\t\tregex : \"#.*$\"\r\n\t\t\t}, {\r\n\t\t\t\ttoken : \"lparen\",\r\n\t\t\t\tregex : \"[[({]\"\r\n\t\t\t}, {\r\n\t\t\t\ttoken : \"rparen\",\r\n\t\t\t\tregex : \"[\\\\])}]\"\r\n\t\t\t}, {\r\n\t\t\t\ttoken : \"text\",\r\n\t\t\t\tregex : \"\\\\s+\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"qqstring\" : [\r\n\t\t\t{\r\n\t\t\t\ttoken : \"constant.language.escape\",\r\n\t\t\t\tregex : '\\\\\\\\(?:[nrtef\\\\\\\\\"$]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2})'\r\n\t\t\t}, \r\n\t\t\tvariables,\r\n\t\t\tvars_special\r\n\t\t\t, {\r\n\t\t\t\ttoken : \"lparen\",\r\n\t\t\t\tregex : \"{\",\r\n\t\t\t\tnext : \"qqinterpolation\"\r\n\t\t\t}, {\r\n\t\t\t\ttoken : \"string.quoted.double\", \r\n\t\t\t\tregex : '\"', \r\n\t\t\t\tnext : \"start\"\r\n\t\t\t}, {\r\n\t\t\t\tdefaultToken : \"string.quoted.double\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"qqinterpolation\" : [\r\n\t\t\thex,\r\n\t\t\tnum_rat,\r\n\t\t\tnum_with_,\r\n\t\t\tcomplex_numbers,\r\n\t\t\tbooleans,\r\n\t\t\tversions,\r\n\t\t\tlang_keywords,\r\n\t\t\tvariables,\r\n\t\t\tvars_special,\r\n\t\t\tops_char,\r\n\t\t\tconstants_unicode,\r\n\t\t\tqstrings,\r\n\t\t\tregexp,\r\n\t\t\t\r\n\t\t\t{\r\n\t\t\t\ttoken: \"rparen\",\r\n\t\t\t\tregex: \"}\",\r\n\t\t\t\tnext : \"qqstring\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"block_comment\": [\r\n\t\t\t{\r\n\t\t\t\ttoken: \"comment.doc\",\r\n\t\t\t\tregex: \"^=end +[a-zA-Z_0-9]*\",\r\n\t\t\t\tnext: \"start\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tdefaultToken: \"comment.doc\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"qheredoc\": [\r\n\t\t\t{\r\n\t\t\t\ttoken: \"string.unquoted\",\r\n\t\t\t\tregex: \"END$\",\r\n\t\t\t\tnext: \"start\"\r\n\t\t\t}, {\r\n\t\t\t\tdefaultToken: \"string.unquoted\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"qqheredoc\": [\r\n\t\t\tvariables,\r\n\t\t\tvars_special,\r\n\t\t\t{\r\n\t\t\t\ttoken : \"lparen\",\r\n\t\t\t\tregex : \"{\",\r\n\t\t\t\tnext : \"qqheredocinterpolation\"\r\n\t\t\t}, {\r\n\t\t\t\ttoken: \"string.unquoted\",\r\n\t\t\t\tregex: \"END$\",\r\n\t\t\t\tnext: \"start\"\r\n\t\t\t}, {\r\n\t\t\t\tdefaultToken: \"string.unquoted\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"qqheredocinterpolation\" : [\r\n\t\t\thex,\r\n\t\t\tnum_rat,\r\n\t\t\tnum_with_,\r\n\t\t\tcomplex_numbers,\r\n\t\t\tbooleans,\r\n\t\t\tversions,\r\n\t\t\tlang_keywords,\r\n\t\t\tvariables,\r\n\t\t\tvars_special,\r\n\t\t\tops_char,\r\n\t\t\tconstants_unicode,\r\n\t\t\tqstrings,\r\n\t\t\tregexp,\r\n\t\t\t{\r\n\t\t\t\ttoken: \"rparen\",\r\n\t\t\t\tregex: \"}\",\r\n\t\t\t\tnext : \"qqheredoc\"\r\n\t\t\t}\r\n\t\t]\r\n\t};\r\n};\r\n\r\noop.inherits(Perl6HighlightRules, TextHighlightRules);\r\n\r\nexports.Perl6HighlightRules = Perl6HighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar Range = require(\"../range\").Range;\r\n\r\nvar MatchingBraceOutdent = function() {};\r\n\r\n(function() {\r\n\r\n    this.checkOutdent = function(line, input) {\r\n        if (! /^\\s+$/.test(line))\r\n            return false;\r\n\r\n        return /^\\s*\\}/.test(input);\r\n    };\r\n\r\n    this.autoOutdent = function(doc, row) {\r\n        var line = doc.getLine(row);\r\n        var match = line.match(/^(\\s*\\})/);\r\n\r\n        if (!match) return 0;\r\n\r\n        var column = match[1].length;\r\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\r\n\r\n        if (!openBracePos || openBracePos.row == row) return 0;\r\n\r\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\r\n        doc.replace(new Range(row, 0, row, column-1), indent);\r\n    };\r\n\r\n    this.$getIndent = function(line) {\r\n        return line.match(/^\\s*/)[0];\r\n    };\r\n\r\n}).call(MatchingBraceOutdent.prototype);\r\n\r\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\r\n});\r\n\r\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar Range = require(\"../../range\").Range;\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\n\r\nvar FoldMode = exports.FoldMode = function(commentRegex) {\r\n    if (commentRegex) {\r\n        this.foldingStartMarker = new RegExp(\r\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\r\n        );\r\n        this.foldingStopMarker = new RegExp(\r\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\r\n        );\r\n    }\r\n};\r\noop.inherits(FoldMode, BaseFoldMode);\r\n\r\n(function() {\r\n    \r\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\r\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\r\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\r\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\r\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\r\n    this._getFoldWidgetBase = this.getFoldWidget;\r\n    this.getFoldWidget = function(session, foldStyle, row) {\r\n        var line = session.getLine(row);\r\n    \r\n        if (this.singleLineBlockCommentRe.test(line)) {\r\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\r\n                return \"\";\r\n        }\r\n    \r\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\r\n    \r\n        if (!fw && this.startRegionRe.test(line))\r\n            return \"start\"; // lineCommentRegionStart\r\n    \r\n        return fw;\r\n    };\r\n\r\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\r\n        var line = session.getLine(row);\r\n        \r\n        if (this.startRegionRe.test(line))\r\n            return this.getCommentRegionBlock(session, line, row);\r\n        \r\n        var match = line.match(this.foldingStartMarker);\r\n        if (match) {\r\n            var i = match.index;\r\n\r\n            if (match[1])\r\n                return this.openingBracketBlock(session, match[1], row, i);\r\n                \r\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\r\n            \r\n            if (range && !range.isMultiLine()) {\r\n                if (forceMultiline) {\r\n                    range = this.getSectionRange(session, row);\r\n                } else if (foldStyle != \"all\")\r\n                    range = null;\r\n            }\r\n            \r\n            return range;\r\n        }\r\n\r\n        if (foldStyle === \"markbegin\")\r\n            return;\r\n\r\n        var match = line.match(this.foldingStopMarker);\r\n        if (match) {\r\n            var i = match.index + match[0].length;\r\n\r\n            if (match[1])\r\n                return this.closingBracketBlock(session, match[1], row, i);\r\n\r\n            return session.getCommentFoldRange(row, i, -1);\r\n        }\r\n    };\r\n    \r\n    this.getSectionRange = function(session, row) {\r\n        var line = session.getLine(row);\r\n        var startIndent = line.search(/\\S/);\r\n        var startRow = row;\r\n        var startColumn = line.length;\r\n        row = row + 1;\r\n        var endRow = row;\r\n        var maxRow = session.getLength();\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var indent = line.search(/\\S/);\r\n            if (indent === -1)\r\n                continue;\r\n            if  (startIndent > indent)\r\n                break;\r\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\r\n            \r\n            if (subRange) {\r\n                if (subRange.start.row <= startRow) {\r\n                    break;\r\n                } else if (subRange.isMultiLine()) {\r\n                    row = subRange.end.row;\r\n                } else if (startIndent == indent) {\r\n                    break;\r\n                }\r\n            }\r\n            endRow = row;\r\n        }\r\n        \r\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\r\n    };\r\n    this.getCommentRegionBlock = function(session, line, row) {\r\n        var startColumn = line.search(/\\s*$/);\r\n        var maxRow = session.getLength();\r\n        var startRow = row;\r\n        \r\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\r\n        var depth = 1;\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var m = re.exec(line);\r\n            if (!m) continue;\r\n            if (m[1]) depth--;\r\n            else depth++;\r\n\r\n            if (!depth) break;\r\n        }\r\n\r\n        var endRow = row;\r\n        if (endRow > startRow) {\r\n            return new Range(startRow, startColumn, endRow, line.length);\r\n        }\r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n\r\nace.define(\"ace/mode/perl6\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/perl6_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/cstyle\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar Perl6HighlightRules = require(\"./perl6_highlight_rules\").Perl6HighlightRules;\r\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\r\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = Perl6HighlightRules;\r\n\r\n    this.$outdent = new MatchingBraceOutdent();\r\n    this.foldingRules = new CStyleFoldMode({start: \"^=(begin)\\\\b\", end: \"^=(end)\\\\b\"});\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n\r\n    this.lineCommentStart = \"#\";\r\n    this.blockComment = [\r\n        {start: \"=begin\", end: \"=end\", lineStartOnly: true},\r\n        {start: \"=item\", end: \"=end\", lineStartOnly: true}\r\n    ];\r\n\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n\r\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\r\n        var tokens = tokenizedLine.tokens;\r\n\r\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\r\n            return indent;\r\n        }\r\n\r\n        if (state == \"start\") {\r\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\r\n            if (match) {\r\n                indent += tab;\r\n            }\r\n        }\r\n\r\n        return indent;\r\n    };\r\n\r\n    this.checkOutdent = function(state, line, input) {\r\n        return this.$outdent.checkOutdent(line, input);\r\n    };\r\n\r\n    this.autoOutdent = function(state, doc, row) {\r\n        this.$outdent.autoOutdent(doc, row);\r\n    };\r\n\r\n    this.$id = \"ace/mode/perl6\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});                (function() {\r\n                    ace.require([\"ace/mode/perl6\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "]},"metadata":{},"sourceType":"script"}