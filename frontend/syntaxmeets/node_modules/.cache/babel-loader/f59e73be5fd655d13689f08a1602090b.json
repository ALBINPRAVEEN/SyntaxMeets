{"ast":null,"code":"ace.define(\"ace/mode/applescript_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var AppleScriptHighlightRules = function () {\n    var keywords = \"about|above|after|against|and|around|as|at|back|before|beginning|\" + \"behind|below|beneath|beside|between|but|by|considering|\" + \"contain|contains|continue|copy|div|does|eighth|else|end|equal|\" + \"equals|error|every|exit|fifth|first|for|fourth|from|front|\" + \"get|given|global|if|ignoring|in|into|is|it|its|last|local|me|\" + \"middle|mod|my|ninth|not|of|on|onto|or|over|prop|property|put|ref|\" + \"reference|repeat|returning|script|second|set|seventh|since|\" + \"sixth|some|tell|tenth|that|the|then|third|through|thru|\" + \"timeout|times|to|transaction|try|until|where|while|whose|with|without\";\n    var builtinConstants = \"AppleScript|false|linefeed|return|pi|quote|result|space|tab|true\";\n    var builtinFunctions = \"activate|beep|count|delay|launch|log|offset|read|round|run|say|\" + \"summarize|write\";\n    var builtinTypes = \"alias|application|boolean|class|constant|date|file|integer|list|\" + \"number|real|record|string|text|character|characters|contents|day|\" + \"frontmost|id|item|length|month|name|paragraph|paragraphs|rest|\" + \"reverse|running|time|version|weekday|word|words|year\";\n    var keywordMapper = this.createKeywordMapper({\n      \"support.function\": builtinFunctions,\n      \"constant.language\": builtinConstants,\n      \"support.type\": builtinTypes,\n      \"keyword\": keywords\n    }, \"identifier\");\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"--.*$\"\n      }, {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\(\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"string\",\n        // \" string\n        regex: '\".*?\"'\n      }, {\n        token: \"support.type\",\n        regex: '\\\\b(POSIX file|POSIX path|(date|time) string|quoted form)\\\\b'\n      }, {\n        token: \"support.function\",\n        regex: '\\\\b(clipboard info|the clipboard|info for|list (disks|folder)|' + 'mount volume|path to|(close|open for) access|(get|set) eof|' + 'current date|do shell script|get volume settings|random number|' + 'set volume|system attribute|system info|time to GMT|' + '(load|run|store) script|scripting components|' + 'ASCII (character|number)|localized string|' + 'choose (application|color|file|file name|' + 'folder|from list|remote application|URL)|' + 'display (alert|dialog))\\\\b|^\\\\s*return\\\\b'\n      }, {\n        token: \"constant.language\",\n        regex: '\\\\b(text item delimiters|current application|missing value)\\\\b'\n      }, {\n        token: \"keyword\",\n        regex: '\\\\b(apart from|aside from|instead of|out of|greater than|' + \"isn't|(doesn't|does not) (equal|come before|come after|contain)|\" + '(greater|less) than( or equal)?|(starts?|ends|begins?) with|' + 'contained by|comes (before|after)|a (ref|reference))\\\\b'\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z][a-zA-Z0-9_]*\\\\b\"\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\)\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(AppleScriptHighlightRules, TextHighlightRules);\n  exports.AppleScriptHighlightRules = AppleScriptHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/applescript\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/applescript_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var AppleScriptHighlightRules = require(\"./applescript_highlight_rules\").AppleScriptHighlightRules;\n\n  var FoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = AppleScriptHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = {\n      start: \"(*\",\n      end: \"*)\"\n    };\n    this.$id = \"ace/mode/applescript\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/applescript\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/node_modules/ace-builds/src-noconflict/mode-applescript.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","AppleScriptHighlightRules","keywords","builtinConstants","builtinFunctions","builtinTypes","keywordMapper","createKeywordMapper","$rules","token","regex","next","defaultToken","normalizeRules","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/applescript_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar AppleScriptHighlightRules = function() {\r\n    var keywords = (\r\n        \"about|above|after|against|and|around|as|at|back|before|beginning|\" +\r\n        \"behind|below|beneath|beside|between|but|by|considering|\" +\r\n        \"contain|contains|continue|copy|div|does|eighth|else|end|equal|\" +\r\n        \"equals|error|every|exit|fifth|first|for|fourth|from|front|\" +\r\n        \"get|given|global|if|ignoring|in|into|is|it|its|last|local|me|\" +\r\n        \"middle|mod|my|ninth|not|of|on|onto|or|over|prop|property|put|ref|\" +\r\n        \"reference|repeat|returning|script|second|set|seventh|since|\" +\r\n        \"sixth|some|tell|tenth|that|the|then|third|through|thru|\" +\r\n        \"timeout|times|to|transaction|try|until|where|while|whose|with|without\"\r\n    );\r\n\r\n    var builtinConstants = (\r\n        \"AppleScript|false|linefeed|return|pi|quote|result|space|tab|true\"\r\n    );\r\n\r\n    var builtinFunctions = (\r\n        \"activate|beep|count|delay|launch|log|offset|read|round|run|say|\" +\r\n        \"summarize|write\"\r\n    );\r\n\r\n    var builtinTypes = (\r\n        \"alias|application|boolean|class|constant|date|file|integer|list|\" +\r\n        \"number|real|record|string|text|character|characters|contents|day|\" +\r\n        \"frontmost|id|item|length|month|name|paragraph|paragraphs|rest|\" +\r\n        \"reverse|running|time|version|weekday|word|words|year\"\r\n    );\r\n\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"support.function\": builtinFunctions,\r\n        \"constant.language\": builtinConstants,\r\n        \"support.type\": builtinTypes,\r\n        \"keyword\": keywords\r\n    }, \"identifier\");\r\n\r\n    this.$rules = {\r\n        \"start\": [\r\n            {\r\n                token: \"comment\",\r\n                regex: \"--.*$\"\r\n            },\r\n            {\r\n                token : \"comment\", // multi line comment\r\n                regex : \"\\\\(\\\\*\",\r\n                next : \"comment\"\r\n            },\r\n            {\r\n                token: \"string\",           // \" string\r\n                regex: '\".*?\"'\r\n            },\r\n            {\r\n                token: \"support.type\",\r\n                regex: '\\\\b(POSIX file|POSIX path|(date|time) string|quoted form)\\\\b'\r\n            },\r\n            {\r\n                token: \"support.function\",\r\n                regex: '\\\\b(clipboard info|the clipboard|info for|list (disks|folder)|' +\r\n          'mount volume|path to|(close|open for) access|(get|set) eof|' +\r\n          'current date|do shell script|get volume settings|random number|' +\r\n          'set volume|system attribute|system info|time to GMT|' +\r\n          '(load|run|store) script|scripting components|' +\r\n          'ASCII (character|number)|localized string|' +\r\n          'choose (application|color|file|file name|' +\r\n          'folder|from list|remote application|URL)|' +\r\n          'display (alert|dialog))\\\\b|^\\\\s*return\\\\b'\r\n            },\r\n            {\r\n                token: \"constant.language\",\r\n                regex: '\\\\b(text item delimiters|current application|missing value)\\\\b'\r\n            },\r\n            {\r\n                token: \"keyword\",\r\n                regex: '\\\\b(apart from|aside from|instead of|out of|greater than|' +\r\n          \"isn't|(doesn't|does not) (equal|come before|come after|contain)|\" +\r\n          '(greater|less) than( or equal)?|(starts?|ends|begins?) with|' +\r\n          'contained by|comes (before|after)|a (ref|reference))\\\\b'\r\n            },\r\n            {\r\n                token: keywordMapper,\r\n                regex: \"[a-zA-Z][a-zA-Z0-9_]*\\\\b\"\r\n            }\r\n        ],\r\n        \"comment\": [\r\n            {\r\n                token: \"comment\", // closing comment\r\n                regex: \"\\\\*\\\\)\",\r\n                next: \"start\"\r\n            }, {\r\n                defaultToken: \"comment\"\r\n            }\r\n        ]\r\n    };\r\n\r\n    this.normalizeRules();\r\n};\r\n\r\noop.inherits(AppleScriptHighlightRules, TextHighlightRules);\r\n\r\nexports.AppleScriptHighlightRules = AppleScriptHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar Range = require(\"../../range\").Range;\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\n\r\nvar FoldMode = exports.FoldMode = function(commentRegex) {\r\n    if (commentRegex) {\r\n        this.foldingStartMarker = new RegExp(\r\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\r\n        );\r\n        this.foldingStopMarker = new RegExp(\r\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\r\n        );\r\n    }\r\n};\r\noop.inherits(FoldMode, BaseFoldMode);\r\n\r\n(function() {\r\n    \r\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\r\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\r\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\r\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\r\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\r\n    this._getFoldWidgetBase = this.getFoldWidget;\r\n    this.getFoldWidget = function(session, foldStyle, row) {\r\n        var line = session.getLine(row);\r\n    \r\n        if (this.singleLineBlockCommentRe.test(line)) {\r\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\r\n                return \"\";\r\n        }\r\n    \r\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\r\n    \r\n        if (!fw && this.startRegionRe.test(line))\r\n            return \"start\"; // lineCommentRegionStart\r\n    \r\n        return fw;\r\n    };\r\n\r\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\r\n        var line = session.getLine(row);\r\n        \r\n        if (this.startRegionRe.test(line))\r\n            return this.getCommentRegionBlock(session, line, row);\r\n        \r\n        var match = line.match(this.foldingStartMarker);\r\n        if (match) {\r\n            var i = match.index;\r\n\r\n            if (match[1])\r\n                return this.openingBracketBlock(session, match[1], row, i);\r\n                \r\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\r\n            \r\n            if (range && !range.isMultiLine()) {\r\n                if (forceMultiline) {\r\n                    range = this.getSectionRange(session, row);\r\n                } else if (foldStyle != \"all\")\r\n                    range = null;\r\n            }\r\n            \r\n            return range;\r\n        }\r\n\r\n        if (foldStyle === \"markbegin\")\r\n            return;\r\n\r\n        var match = line.match(this.foldingStopMarker);\r\n        if (match) {\r\n            var i = match.index + match[0].length;\r\n\r\n            if (match[1])\r\n                return this.closingBracketBlock(session, match[1], row, i);\r\n\r\n            return session.getCommentFoldRange(row, i, -1);\r\n        }\r\n    };\r\n    \r\n    this.getSectionRange = function(session, row) {\r\n        var line = session.getLine(row);\r\n        var startIndent = line.search(/\\S/);\r\n        var startRow = row;\r\n        var startColumn = line.length;\r\n        row = row + 1;\r\n        var endRow = row;\r\n        var maxRow = session.getLength();\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var indent = line.search(/\\S/);\r\n            if (indent === -1)\r\n                continue;\r\n            if  (startIndent > indent)\r\n                break;\r\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\r\n            \r\n            if (subRange) {\r\n                if (subRange.start.row <= startRow) {\r\n                    break;\r\n                } else if (subRange.isMultiLine()) {\r\n                    row = subRange.end.row;\r\n                } else if (startIndent == indent) {\r\n                    break;\r\n                }\r\n            }\r\n            endRow = row;\r\n        }\r\n        \r\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\r\n    };\r\n    this.getCommentRegionBlock = function(session, line, row) {\r\n        var startColumn = line.search(/\\s*$/);\r\n        var maxRow = session.getLength();\r\n        var startRow = row;\r\n        \r\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\r\n        var depth = 1;\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var m = re.exec(line);\r\n            if (!m) continue;\r\n            if (m[1]) depth--;\r\n            else depth++;\r\n\r\n            if (!depth) break;\r\n        }\r\n\r\n        var endRow = row;\r\n        if (endRow > startRow) {\r\n            return new Range(startRow, startColumn, endRow, line.length);\r\n        }\r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n\r\nace.define(\"ace/mode/applescript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/applescript_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar AppleScriptHighlightRules = require(\"./applescript_highlight_rules\").AppleScriptHighlightRules;\r\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = AppleScriptHighlightRules;\r\n    this.foldingRules = new FoldMode();\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n    this.lineCommentStart = \"--\";\r\n    this.blockComment = {start: \"(*\", end: \"*)\"};\r\n    this.$id = \"ace/mode/applescript\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});                (function() {\r\n                    ace.require([\"ace/mode/applescript\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "]},"metadata":{},"sourceType":"script"}