{"ast":null,"code":"ace.define(\"ace/mode/diff_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DiffHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        regex: \"^(?:\\\\*{15}|={67}|-{3}|\\\\+{3})$\",\n        token: \"punctuation.definition.separator.diff\",\n        \"name\": \"keyword\"\n      }, {\n        //diff.range.unified\n        regex: \"^(@@)(\\\\s*.+?\\\\s*)(@@)(.*)$\",\n        token: [\"constant\", \"constant.numeric\", \"constant\", \"comment.doc.tag\"]\n      }, {\n        //diff.range.normal\n        regex: \"^(\\\\d+)([,\\\\d]+)(a|d|c)(\\\\d+)([,\\\\d]+)(.*)$\",\n        token: [\"constant.numeric\", \"punctuation.definition.range.diff\", \"constant.function\", \"constant.numeric\", \"punctuation.definition.range.diff\", \"invalid\"],\n        \"name\": \"meta.\"\n      }, {\n        regex: \"^(\\\\-{3}|\\\\+{3}|\\\\*{3})( .+)$\",\n        token: [\"constant.numeric\", \"meta.tag\"]\n      }, {\n        // added\n        regex: \"^([!+>])(.*?)(\\\\s*)$\",\n        token: [\"support.constant\", \"text\", \"invalid\"]\n      }, {\n        // removed\n        regex: \"^([<\\\\-])(.*?)(\\\\s*)$\",\n        token: [\"support.function\", \"string\", \"invalid\"]\n      }, {\n        regex: \"^(diff)(\\\\s+--\\\\w+)?(.+?)( .+)?$\",\n        token: [\"variable\", \"variable\", \"keyword\", \"variable\"]\n      }, {\n        regex: \"^Index.+$\",\n        token: \"variable\"\n      }, {\n        regex: \"^\\\\s+$\",\n        token: \"text\"\n      }, {\n        regex: \"\\\\s*$\",\n        token: \"invalid\"\n      }, {\n        defaultToken: \"invisible\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DiffHighlightRules, TextHighlightRules);\n  exports.DiffHighlightRules = DiffHighlightRules;\n});\nace.define(\"ace/mode/folding/diff\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var Range = require(\"../../range\").Range;\n\n  var FoldMode = exports.FoldMode = function (levels, flag) {\n    this.regExpList = levels;\n    this.flag = flag;\n    this.foldingStartMarker = RegExp(\"^(\" + levels.join(\"|\") + \")\", this.flag);\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var start = {\n        row: row,\n        column: line.length\n      };\n      var regList = this.regExpList;\n\n      for (var i = 1; i <= regList.length; i++) {\n        var re = RegExp(\"^(\" + regList.slice(0, i).join(\"|\") + \")\", this.flag);\n        if (re.test(line)) break;\n      }\n\n      for (var l = session.getLength(); ++row < l;) {\n        line = session.getLine(row);\n        if (re.test(line)) break;\n      }\n\n      if (row == start.row + 1) return;\n      return new Range(start.row, start.column, row - 1, line.length);\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/diff\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/diff_highlight_rules\", \"ace/mode/folding/diff\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var HighlightRules = require(\"./diff_highlight_rules\").DiffHighlightRules;\n\n  var FoldMode = require(\"./folding/diff\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = HighlightRules;\n    this.foldingRules = new FoldMode([\"diff\", \"@@|\\\\*{5}\"], \"i\");\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.$id = \"ace/mode/diff\";\n    this.snippetFileId = \"ace/snippets/diff\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/diff\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/node_modules/ace-builds/src-noconflict/mode-diff.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","DiffHighlightRules","$rules","regex","token","defaultToken","caseInsensitive","inherits","BaseFoldMode","FoldMode","Range","levels","flag","regExpList","foldingStartMarker","RegExp","join","getFoldWidgetRange","session","foldStyle","row","line","getLine","start","column","length","regList","i","re","slice","test","l","getLength","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$id","snippetFileId","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/diff_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar DiffHighlightRules = function() {\r\n\r\n    this.$rules = {\r\n        \"start\" : [{\r\n                regex: \"^(?:\\\\*{15}|={67}|-{3}|\\\\+{3})$\",\r\n                token: \"punctuation.definition.separator.diff\",\r\n                \"name\": \"keyword\"\r\n            }, { //diff.range.unified\r\n                regex: \"^(@@)(\\\\s*.+?\\\\s*)(@@)(.*)$\",\r\n                token: [\r\n                    \"constant\",\r\n                    \"constant.numeric\",\r\n                    \"constant\",\r\n                    \"comment.doc.tag\"\r\n                ]\r\n            }, { //diff.range.normal\r\n                regex: \"^(\\\\d+)([,\\\\d]+)(a|d|c)(\\\\d+)([,\\\\d]+)(.*)$\",\r\n                token: [\r\n                    \"constant.numeric\",\r\n                    \"punctuation.definition.range.diff\",\r\n                    \"constant.function\",\r\n                    \"constant.numeric\",\r\n                    \"punctuation.definition.range.diff\",\r\n                    \"invalid\"\r\n                ],\r\n                \"name\": \"meta.\"\r\n            }, {\r\n                regex: \"^(\\\\-{3}|\\\\+{3}|\\\\*{3})( .+)$\",\r\n                token: [\r\n                    \"constant.numeric\",\r\n                    \"meta.tag\"\r\n                ]\r\n            }, { // added\r\n                regex: \"^([!+>])(.*?)(\\\\s*)$\",\r\n                token: [\r\n                    \"support.constant\",\r\n                    \"text\",\r\n                    \"invalid\"\r\n                ]\r\n            }, { // removed\r\n                regex: \"^([<\\\\-])(.*?)(\\\\s*)$\",\r\n                token: [\r\n                    \"support.function\",\r\n                    \"string\",\r\n                    \"invalid\"\r\n                ]\r\n            }, {\r\n                regex: \"^(diff)(\\\\s+--\\\\w+)?(.+?)( .+)?$\",\r\n                token: [\"variable\", \"variable\", \"keyword\", \"variable\"]\r\n            }, {\r\n                regex: \"^Index.+$\",\r\n                token: \"variable\"\r\n            }, {\r\n                regex: \"^\\\\s+$\",\r\n                token: \"text\"\r\n            }, {\r\n                regex: \"\\\\s*$\",\r\n                token: \"invalid\"\r\n            }, {\r\n                defaultToken: \"invisible\",\r\n                caseInsensitive: true\r\n            }\r\n        ]\r\n    };\r\n};\r\n\r\noop.inherits(DiffHighlightRules, TextHighlightRules);\r\n\r\nexports.DiffHighlightRules = DiffHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/folding/diff\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\nvar Range = require(\"../../range\").Range;\r\n\r\nvar FoldMode = exports.FoldMode = function(levels, flag) {\r\n\tthis.regExpList = levels;\r\n\tthis.flag = flag;\r\n\tthis.foldingStartMarker = RegExp(\"^(\" + levels.join(\"|\") + \")\", this.flag);\r\n};\r\noop.inherits(FoldMode, BaseFoldMode);\r\n\r\n(function() {\r\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\r\n        var line = session.getLine(row);\r\n        var start = {row: row, column: line.length};\r\n\r\n        var regList = this.regExpList;\r\n        for (var i = 1; i <= regList.length; i++) {\r\n            var re = RegExp(\"^(\" + regList.slice(0, i).join(\"|\") + \")\", this.flag);\r\n            if (re.test(line))\r\n                break;\r\n        }\r\n\r\n        for (var l = session.getLength(); ++row < l; ) {\r\n            line = session.getLine(row);\r\n            if (re.test(line))\r\n                break;\r\n        }\r\n        if (row == start.row + 1)\r\n            return;\r\n        return new Range(start.row, start.column, row - 1, line.length);\r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n\r\nace.define(\"ace/mode/diff\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/diff_highlight_rules\",\"ace/mode/folding/diff\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar HighlightRules = require(\"./diff_highlight_rules\").DiffHighlightRules;\r\nvar FoldMode = require(\"./folding/diff\").FoldMode;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = HighlightRules;\r\n    this.foldingRules = new FoldMode([\"diff\", \"@@|\\\\*{5}\"], \"i\");\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n\r\n    this.$id = \"ace/mode/diff\";\r\n    this.snippetFileId = \"ace/snippets/diff\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n\r\n});                (function() {\r\n                    ace.require([\"ace/mode/diff\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "]},"metadata":{},"sourceType":"script"}