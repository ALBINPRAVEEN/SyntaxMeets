{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\Project\\\\React\\\\SyntaxMeets\\\\frontend\\\\syntaxmeets\\\\src\\\\components\\\\Editor.js\";\nimport React, { Component } from \"react\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-min-noconflict/ext-searchbox\";\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-jsx\";\nimport { FormControlLabel, FormControl, InputLabel, MenuItem, Select, AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport Switch from \"@material-ui/core/Switch\";\nimport ReactResizeDetector from \"react-resize-detector\";\nconst languages = [\"c_cpp\", \"java\", \"python\", \"javascript\", \"html\", \"xml\", \"ruby\", \"css\", \"sass\", \"typescript\", \"kotlin\", \"swift\", \"markdown\", \"mysql\", \"json\", \"golang\", \"csharp\", \"sql\", \"sqlserver\"];\nconst themes = [\"monokai\", \"github\", \"tomorrow\", \"tomorrow_night\", \"kuroir\", \"twilight\", \"xcode\", \"textmate\", \"solarized_dark\", \"solarized_light\", \"terminal\"]; //extracting all the languages recquired\n\nlanguages.forEach(lang => {\n  require(`ace-builds/src-noconflict/mode-${lang}`);\n\n  require(`ace-builds/src-noconflict/snippets/${lang}`);\n}); //extracting themes\n\nthemes.forEach(theme => require(`ace-builds/src-noconflict/theme-${theme}`)); //default value to be displayed on code editor\n\nconst defaultValue = `#include <bits/stdc++.h>\n#define lli long long int\n#define endl \"\\\\n\"\n#define MAX 1000005\n#define MOD 1000000007\nusing namespace std;\n\n\nint main()\n{\n\tint t;\n\tcin>>t;\n\t\n\twhile(t--)\n\t{\n\t    //your code\n\t  \n\t}\n\treturn 0;\n}`;\n\nclass Editor extends Component {\n  onChange(newValue) {\n    console.log(\"change\", newValue);\n    this.setState({\n      value: newValue\n    });\n  }\n\n  onSelectionChange(newValue, event) {\n    console.log(\"select-change\", newValue);\n    console.log(\"select-change-event\", event);\n  }\n\n  onCursorChange(newValue, event) {\n    console.log(\"cursor-change\", newValue);\n    console.log(\"cursor-change-event\", event);\n  }\n\n  onValidate(annotations) {\n    console.log(\"onValidate\", annotations);\n  }\n\n  setPlaceholder(e) {\n    this.setState({\n      placeholder: e.target.value\n    });\n  }\n\n  setTheme(e) {\n    this.setState({\n      theme: e.target.value\n    });\n  }\n\n  setMode(e) {\n    this.setState({\n      mode: e.target.value\n    });\n  }\n\n  setBoolean(name, value) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  setFontSize(e) {\n    this.setState({\n      fontSize: parseInt(e.target.value, 10)\n    });\n  }\n\n  onResize(w, h) {\n    this.setState({\n      editorHeight: h,\n      editorWidth: w\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: defaultValue,\n      placeholder: \"Placeholder Text\",\n      theme: \"tomorrow_night\",\n      mode: \"c_cpp\",\n      enableBasicAutocompletion: false,\n      enableLiveAutocompletion: false,\n      fontSize: 16,\n      showGutter: true,\n      showPrintMargin: true,\n      highlightActiveLine: true,\n      enableSnippets: false,\n      showLineNumbers: true,\n      editorHeight: 400,\n      editorWidth: \"auto\"\n    };\n    this.onResize = this.onResize.bind(this);\n    this.setPlaceholder = this.setPlaceholder.bind(this);\n    this.setTheme = this.setTheme.bind(this);\n    this.setMode = this.setMode.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.setFontSize = this.setFontSize.bind(this);\n    this.setBoolean = this.setBoolean.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"static\",\n      style: {\n        backgroundColor: \"#393b44\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      style: {\n        fontFamily: \"poppins\",\n        color: \"#f1f3f8\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, \"CodeEditor \\xA0\\xA0\\xA0\\xA0\"), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        width: \"120px\",\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"mode-label\",\n      style: {\n        fontFamily: \"poppins\",\n        color: \"#ffffff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, \"Language\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"mode\",\n      labelId: \"mode-label\",\n      id: \"select-mode\",\n      value: this.state.mode,\n      onChange: this.setMode,\n      style: {\n        fontFamily: \"poppins\",\n        color: \"#ffffff\",\n        fontSize: \"0.8rem\",\n        height: \"35px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, languages.map(lang => /*#__PURE__*/React.createElement(MenuItem, {\n      value: lang,\n      key: lang,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 19\n      }\n    }, lang.toUpperCase())))), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        width: \"120px\",\n        marginTop: \"10px\",\n        marginLeft: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"theme-label\",\n      style: {\n        fontFamily: \"poppins\",\n        color: \"#ffffff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }\n    }, \"Theme\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"Theme\",\n      labelId: \"theme-label\",\n      id: \"select-theme\",\n      onChange: this.setTheme,\n      value: this.state.theme,\n      style: {\n        fontFamily: \"poppins\",\n        color: \"#ffffff\",\n        fontSize: \"0.8rem\",\n        height: \"35px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }, themes.map(lang => /*#__PURE__*/React.createElement(MenuItem, {\n      key: lang,\n      value: lang,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 19\n      }\n    }, lang)))), /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        width: \"120px\",\n        marginTop: \"10px\",\n        marginLeft: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"font-label\",\n      style: {\n        fontFamily: \"poppins\",\n        color: \"#ffffff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 15\n      }\n    }, \"Font Size\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"Theme\",\n      labelId: \"font-label\",\n      id: \"select-font\",\n      onChange: this.setFontSize,\n      value: this.state.fontSize,\n      style: {\n        fontFamily: \"poppins\",\n        color: \"#ffffff\",\n        fontSize: \"0.8rem\",\n        height: \"35px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }\n    }, [14, 16, 18, 20, 24, 28, 32, 40].map(lang => /*#__PURE__*/React.createElement(MenuItem, {\n      key: lang,\n      value: lang,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 19\n      }\n    }, lang)))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      startIcon: /*#__PURE__*/React.createElement(ShareIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 26\n        }\n      }),\n      style: {\n        fontFamily: \"poppins\",\n        marginLeft: \"auto\",\n        fontWeight: \"600\",\n        color: \"#f1f3f8\",\n        backgroundColor: \"#99A3CD\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }\n    }, \"Share\"))), /*#__PURE__*/React.createElement(ReactResizeDetector, {\n      handleWidth: true,\n      handleHeight: true,\n      onResize: this.onResize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AceEditor, {\n      placeholder: this.state.placeholder,\n      mode: this.state.mode,\n      theme: this.state.theme,\n      name: \"blah2\",\n      height: 550,\n      width: this.state.editorWidth,\n      onLoad: this.onLoad,\n      onChange: this.onChange,\n      onSelectionChange: this.onSelectionChange,\n      onCursorChange: this.onCursorChange,\n      onValidate: this.onValidate,\n      value: this.state.value,\n      fontSize: this.state.fontSize,\n      showPrintMargin: this.state.showPrintMargin,\n      showGutter: this.state.showGutter,\n      highlightActiveLine: this.state.highlightActiveLine,\n      setOptions: {\n        useWorker: false,\n        enableBasicAutocompletion: this.state.enableBasicAutocompletion,\n        enableLiveAutocompletion: this.state.enableLiveAutocompletion,\n        enableSnippets: this.state.enableSnippets,\n        showLineNumbers: this.state.showLineNumbers,\n        tabSize: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AppBar, {\n      position: \"static\",\n      style: {\n        backgroundColor: \"#393b44\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }\n    }, \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        size: \"small\",\n        checked: this.state.enableBasicAutocompletion,\n        onChange: e => this.setBoolean(\"enableBasicAutocompletion\", e.target.checked),\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }\n      }),\n      label: \"Enable Basic Autocomplete\\xA0\\xA0\\xA0\\xA0\\xA0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        size: \"small\",\n        checked: this.state.showGutter,\n        onChange: e => this.setBoolean(\"showGutter\", e.target.checked),\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 17\n        }\n      }),\n      label: \"Show Gutter\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        size: \"small\",\n        checked: this.state.showPrintMargin,\n        onChange: e => this.setBoolean(\"showPrintMargin\", e.target.checked),\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 17\n        }\n      }),\n      label: \"Show Print Margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      size: \"small\",\n      checked: this.state.highlightActiveLine,\n      onChange: e => this.setBoolean(\"highlightActiveLine\", e.target.checked),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 19\n      }\n    }), \"Highlight Active Line\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      size: \"small\",\n      checked: this.state.enableSnippets,\n      onChange: e => this.setBoolean(\"enableSnippets\", e.target.checked),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 19\n      }\n    }), \"Enable Snippets\\xA0\\xA0\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      size: \"small\",\n      checked: this.state.showLineNumbers,\n      onChange: e => this.setBoolean(\"showLineNumbers\", e.target.checked),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 19\n      }\n    }), \"Show Line Numbers\"))))));\n  }\n\n}\n\nexport default Editor;","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/src/components/Editor.js"],"names":["React","Component","AceEditor","FormControlLabel","FormControl","InputLabel","MenuItem","Select","AppBar","Toolbar","Typography","Button","ShareIcon","Switch","ReactResizeDetector","languages","themes","forEach","lang","require","theme","defaultValue","Editor","onChange","newValue","console","log","setState","value","onSelectionChange","event","onCursorChange","onValidate","annotations","setPlaceholder","e","placeholder","target","setTheme","setMode","mode","setBoolean","name","setFontSize","fontSize","parseInt","onResize","w","h","editorHeight","editorWidth","constructor","props","state","enableBasicAutocompletion","enableLiveAutocompletion","showGutter","showPrintMargin","highlightActiveLine","enableSnippets","showLineNumbers","bind","render","backgroundColor","fontFamily","color","width","marginTop","height","map","toUpperCase","marginLeft","fontWeight","onLoad","useWorker","tabSize","checked"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-min-noconflict/ext-searchbox\";\r\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/mode-jsx\";\r\nimport {\r\n  FormControlLabel,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport ReactResizeDetector from \"react-resize-detector\";\r\n\r\nconst languages = [\r\n  \"c_cpp\",\r\n  \"java\",\r\n  \"python\",\r\n  \"javascript\",\r\n  \"html\",\r\n  \"xml\",\r\n  \"ruby\",\r\n  \"css\",\r\n  \"sass\",\r\n  \"typescript\",\r\n  \"kotlin\",\r\n  \"swift\",\r\n  \"markdown\",\r\n  \"mysql\",\r\n  \"json\",\r\n  \"golang\",\r\n  \"csharp\",\r\n  \"sql\",\r\n  \"sqlserver\",\r\n];\r\n\r\nconst themes = [\r\n  \"monokai\",\r\n  \"github\",\r\n  \"tomorrow\",\r\n  \"tomorrow_night\",\r\n  \"kuroir\",\r\n  \"twilight\",\r\n  \"xcode\",\r\n  \"textmate\",\r\n  \"solarized_dark\",\r\n  \"solarized_light\",\r\n  \"terminal\",\r\n];\r\n\r\n//extracting all the languages recquired\r\nlanguages.forEach((lang) => {\r\n  require(`ace-builds/src-noconflict/mode-${lang}`);\r\n  require(`ace-builds/src-noconflict/snippets/${lang}`);\r\n});\r\n//extracting themes\r\nthemes.forEach((theme) => require(`ace-builds/src-noconflict/theme-${theme}`));\r\n\r\n//default value to be displayed on code editor\r\nconst defaultValue = `#include <bits/stdc++.h>\r\n#define lli long long int\r\n#define endl \"\\\\n\"\r\n#define MAX 1000005\r\n#define MOD 1000000007\r\nusing namespace std;\r\n\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tcin>>t;\r\n\t\r\n\twhile(t--)\r\n\t{\r\n\t    //your code\r\n\t  \r\n\t}\r\n\treturn 0;\r\n}`;\r\n\r\nclass Editor extends Component {\r\n  onChange(newValue) {\r\n    console.log(\"change\", newValue);\r\n    this.setState({\r\n      value: newValue,\r\n    });\r\n  }\r\n\r\n  onSelectionChange(newValue, event) {\r\n    console.log(\"select-change\", newValue);\r\n    console.log(\"select-change-event\", event);\r\n  }\r\n\r\n  onCursorChange(newValue, event) {\r\n    console.log(\"cursor-change\", newValue);\r\n    console.log(\"cursor-change-event\", event);\r\n  }\r\n\r\n  onValidate(annotations) {\r\n    console.log(\"onValidate\", annotations);\r\n  }\r\n\r\n  setPlaceholder(e) {\r\n    this.setState({\r\n      placeholder: e.target.value,\r\n    });\r\n  }\r\n  setTheme(e) {\r\n    this.setState({\r\n      theme: e.target.value,\r\n    });\r\n  }\r\n  setMode(e) {\r\n    this.setState({\r\n      mode: e.target.value,\r\n    });\r\n  }\r\n  setBoolean(name, value) {\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n  setFontSize(e) {\r\n    this.setState({\r\n      fontSize: parseInt(e.target.value, 10),\r\n    });\r\n  }\r\n\r\n  onResize(w, h) {\r\n    this.setState({\r\n      editorHeight: h,\r\n      editorWidth: w,\r\n    });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: defaultValue,\r\n      placeholder: \"Placeholder Text\",\r\n      theme: \"tomorrow_night\",\r\n      mode: \"c_cpp\",\r\n      enableBasicAutocompletion: false,\r\n      enableLiveAutocompletion: false,\r\n      fontSize: 16,\r\n      showGutter: true,\r\n      showPrintMargin: true,\r\n      highlightActiveLine: true,\r\n      enableSnippets: false,\r\n      showLineNumbers: true,\r\n      editorHeight: 400,\r\n      editorWidth: \"auto\",\r\n    };\r\n\r\n    this.onResize = this.onResize.bind(this);\r\n    this.setPlaceholder = this.setPlaceholder.bind(this);\r\n    this.setTheme = this.setTheme.bind(this);\r\n    this.setMode = this.setMode.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.setFontSize = this.setFontSize.bind(this);\r\n    this.setBoolean = this.setBoolean.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"columns\">\r\n        <AppBar position=\"static\" style={{ backgroundColor: \"#393b44\" }}>\r\n          <Toolbar>\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{ fontFamily: \"poppins\", color: \"#f1f3f8\" }}\r\n            >\r\n              CodeEditor &nbsp;&nbsp;&nbsp;&nbsp;\r\n            </Typography>\r\n\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              style={{\r\n                width: \"120px\",\r\n                marginTop: \"10px\",\r\n              }}\r\n            >\r\n              <InputLabel\r\n                id=\"mode-label\"\r\n                style={{ fontFamily: \"poppins\", color: \"#ffffff\" }}\r\n              >\r\n                Language\r\n              </InputLabel>\r\n              <Select\r\n                name=\"mode\"\r\n                labelId=\"mode-label\"\r\n                id=\"select-mode\"\r\n                value={this.state.mode}\r\n                onChange={this.setMode}\r\n                style={{\r\n                  fontFamily: \"poppins\",\r\n                  color: \"#ffffff\",\r\n                  fontSize: \"0.8rem\",\r\n                  height: \"35px\",\r\n                }}\r\n              >\r\n                {languages.map((lang) => (\r\n                  <MenuItem value={lang} key={lang}>\r\n                    {lang.toUpperCase()}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              style={{\r\n                width: \"120px\",\r\n                marginTop: \"10px\",\r\n                marginLeft: \"5px\",\r\n              }}\r\n            >\r\n              <InputLabel\r\n                id=\"theme-label\"\r\n                style={{ fontFamily: \"poppins\", color: \"#ffffff\" }}\r\n              >\r\n                Theme\r\n              </InputLabel>\r\n              <Select\r\n                name=\"Theme\"\r\n                labelId=\"theme-label\"\r\n                id=\"select-theme\"\r\n                onChange={this.setTheme}\r\n                value={this.state.theme}\r\n                style={{\r\n                  fontFamily: \"poppins\",\r\n                  color: \"#ffffff\",\r\n                  fontSize: \"0.8rem\",\r\n                  height: \"35px\",\r\n                }}\r\n              >\r\n                {themes.map((lang) => (\r\n                  <MenuItem key={lang} value={lang}>\r\n                    {lang}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              style={{\r\n                width: \"120px\",\r\n                marginTop: \"10px\",\r\n                marginLeft: \"5px\",\r\n              }}\r\n            >\r\n              <InputLabel\r\n                id=\"font-label\"\r\n                style={{ fontFamily: \"poppins\", color: \"#ffffff\" }}\r\n              >\r\n                Font Size\r\n              </InputLabel>\r\n              <Select\r\n                name=\"Theme\"\r\n                labelId=\"font-label\"\r\n                id=\"select-font\"\r\n                onChange={this.setFontSize}\r\n                value={this.state.fontSize}\r\n                style={{\r\n                  fontFamily: \"poppins\",\r\n                  color: \"#ffffff\",\r\n                  fontSize: \"0.8rem\",\r\n                  height: \"35px\",\r\n                }}\r\n              >\r\n                {[14, 16, 18, 20, 24, 28, 32, 40].map((lang) => (\r\n                  <MenuItem key={lang} value={lang}>\r\n                    {lang}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<ShareIcon />}\r\n              style={{\r\n                fontFamily: \"poppins\",\r\n                marginLeft: \"auto\",\r\n                fontWeight: \"600\",\r\n                color: \"#f1f3f8\",\r\n                backgroundColor: \"#99A3CD\",\r\n              }}\r\n            >\r\n              Share\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <ReactResizeDetector handleWidth handleHeight onResize={this.onResize} />\r\n        <AceEditor\r\n          placeholder={this.state.placeholder}\r\n          mode={this.state.mode}\r\n          theme={this.state.theme}\r\n          name=\"blah2\"\r\n          height={550}\r\n          width={this.state.editorWidth}\r\n          onLoad={this.onLoad}\r\n          onChange={this.onChange}\r\n          onSelectionChange={this.onSelectionChange}\r\n          onCursorChange={this.onCursorChange}\r\n          onValidate={this.onValidate}\r\n          value={this.state.value}\r\n          fontSize={this.state.fontSize}\r\n          showPrintMargin={this.state.showPrintMargin}\r\n          showGutter={this.state.showGutter}\r\n          highlightActiveLine={this.state.highlightActiveLine}\r\n          setOptions={{\r\n            useWorker: false,\r\n            enableBasicAutocompletion: this.state.enableBasicAutocompletion,\r\n            enableLiveAutocompletion: this.state.enableLiveAutocompletion,\r\n            enableSnippets: this.state.enableSnippets,\r\n            showLineNumbers: this.state.showLineNumbers,\r\n            tabSize: 2,\r\n          }}\r\n        />\r\n        <AppBar position=\"static\" style={{ backgroundColor: \"#393b44\" }}>\r\n          <Toolbar>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  size=\"small\"\r\n                  checked={this.state.enableBasicAutocompletion}\r\n                  onChange={(e) =>\r\n                    this.setBoolean(\r\n                      \"enableBasicAutocompletion\",\r\n                      e.target.checked\r\n                    )\r\n                  }\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Enable Basic Autocomplete&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\r\n              \r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  size=\"small\"\r\n                  checked={this.state.showGutter}\r\n                  onChange={(e) =>\r\n                    this.setBoolean(\"showGutter\", e.target.checked)\r\n                  }\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Show Gutter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  size=\"small\"\r\n                  checked={this.state.showPrintMargin}\r\n                  onChange={(e) =>\r\n                    this.setBoolean(\"showPrintMargin\", e.target.checked)\r\n                  }\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Show Print Margin\"\r\n            />\r\n          </Toolbar>\r\n          <Toolbar>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <label className=\"checkbox\">\r\n                  <Switch\r\n                    size=\"small\"\r\n                    checked={this.state.highlightActiveLine}\r\n                    onChange={(e) =>\r\n                      this.setBoolean(\"highlightActiveLine\", e.target.checked)\r\n                    }\r\n                    color=\"primary\"\r\n                  />\r\n                  Highlight Active Line&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                </label>\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <label className=\"checkbox\">\r\n                  <Switch\r\n                    size=\"small\"\r\n                    checked={this.state.enableSnippets}\r\n                    onChange={(e) =>\r\n                      this.setBoolean(\"enableSnippets\", e.target.checked)\r\n                    }\r\n                    color=\"primary\"\r\n                  />\r\n                  Enable Snippets&nbsp;&nbsp;\r\n                </label>\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <label className=\"checkbox\">\r\n                  <Switch\r\n                    size=\"small\"\r\n                    checked={this.state.showLineNumbers}\r\n                    onChange={(e) =>\r\n                      this.setBoolean(\"showLineNumbers\", e.target.checked)\r\n                    }\r\n                    color=\"primary\"\r\n                  />\r\n                  Show Line Numbers\r\n                </label>\r\n              </p>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n"]},"metadata":{},"sourceType":"module"}