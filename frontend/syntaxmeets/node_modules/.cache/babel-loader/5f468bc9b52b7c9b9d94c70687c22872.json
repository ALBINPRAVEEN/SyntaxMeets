{"ast":null,"code":"ace.define(\"ace/mode/scheme_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var SchemeHighlightRules = function () {\n    var keywordControl = \"case|do|let|loop|if|else|when\";\n    var keywordOperator = \"eq?|eqv?|equal?|and|or|not|null?\";\n    var constantLanguage = \"#t|#f\";\n    var supportFunctions = \"cons|car|cdr|cond|lambda|lambda*|syntax-rules|format|set!|quote|eval|append|list|list?|member?|load\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword.control\": keywordControl,\n      \"keyword.operator\": keywordOperator,\n      \"constant.language\": constantLanguage,\n      \"support.function\": supportFunctions\n    }, \"identifier\", true);\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \";.*$\"\n      }, {\n        \"token\": [\"storage.type.function-type.scheme\", \"text\", \"entity.name.function.scheme\"],\n        \"regex\": \"(?:\\\\b(?:(define|define-syntax|define-macro))\\\\b)(\\\\s+)((?:\\\\w|\\\\-|\\\\!|\\\\?)*)\"\n      }, {\n        \"token\": \"punctuation.definition.constant.character.scheme\",\n        \"regex\": \"#:\\\\S+\"\n      }, {\n        \"token\": [\"punctuation.definition.variable.scheme\", \"variable.other.global.scheme\", \"punctuation.definition.variable.scheme\"],\n        \"regex\": \"(\\\\*)(\\\\S*)(\\\\*)\"\n      }, {\n        \"token\": \"constant.numeric\",\n        // hex\n        \"regex\": \"#[xXoObB][0-9a-fA-F]+\"\n      }, {\n        \"token\": \"constant.numeric\",\n        // float\n        \"regex\": \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\"\n      }, {\n        \"token\": keywordMapper,\n        \"regex\": \"[a-zA-Z_#][a-zA-Z0-9_\\\\-\\\\?\\\\!\\\\*]*\"\n      }, {\n        \"token\": \"string\",\n        \"regex\": '\"(?=.)',\n        \"next\": \"qqstring\"\n      }],\n      \"qqstring\": [{\n        \"token\": \"constant.character.escape.scheme\",\n        \"regex\": \"\\\\\\\\.\"\n      }, {\n        \"token\": \"string\",\n        \"regex\": '[^\"\\\\\\\\]+',\n        \"merge\": true\n      }, {\n        \"token\": \"string\",\n        \"regex\": \"\\\\\\\\$\",\n        \"next\": \"qqstring\",\n        \"merge\": true\n      }, {\n        \"token\": \"string\",\n        \"regex\": '\"|$',\n        \"next\": \"start\",\n        \"merge\": true\n      }]\n    };\n  };\n\n  oop.inherits(SchemeHighlightRules, TextHighlightRules);\n  exports.SchemeHighlightRules = SchemeHighlightRules;\n});\nace.define(\"ace/mode/matching_parens_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingParensOutdent = function () {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\)/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\))/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      var match = line.match(/^(\\s+)/);\n\n      if (match) {\n        return match[1];\n      }\n\n      return \"\";\n    };\n  }).call(MatchingParensOutdent.prototype);\n  exports.MatchingParensOutdent = MatchingParensOutdent;\n});\nace.define(\"ace/mode/scheme\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/scheme_highlight_rules\", \"ace/mode/matching_parens_outdent\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var SchemeHighlightRules = require(\"./scheme_highlight_rules\").SchemeHighlightRules;\n\n  var MatchingParensOutdent = require(\"./matching_parens_outdent\").MatchingParensOutdent;\n\n  var Mode = function () {\n    this.HighlightRules = SchemeHighlightRules;\n    this.$outdent = new MatchingParensOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \";\";\n    this.minorIndentFunctions = [\"define\", \"lambda\", \"define-macro\", \"define-syntax\", \"syntax-rules\", \"define-record-type\", \"define-structure\"];\n\n    this.$toIndent = function (str) {\n      return str.split('').map(function (ch) {\n        if (/\\s/.exec(ch)) {\n          return ch;\n        } else {\n          return ' ';\n        }\n      }).join('');\n    };\n\n    this.$calculateIndent = function (line, tab) {\n      var baseIndent = this.$getIndent(line);\n      var delta = 0;\n      var isParen, ch;\n\n      for (var i = line.length - 1; i >= 0; i--) {\n        ch = line[i];\n\n        if (ch === '(') {\n          delta--;\n          isParen = true;\n        } else if (ch === '(' || ch === '[' || ch === '{') {\n          delta--;\n          isParen = false;\n        } else if (ch === ')' || ch === ']' || ch === '}') {\n          delta++;\n        }\n\n        if (delta < 0) {\n          break;\n        }\n      }\n\n      if (delta < 0 && isParen) {\n        i += 1;\n        var iBefore = i;\n        var fn = '';\n\n        while (true) {\n          ch = line[i];\n\n          if (ch === ' ' || ch === '\\t') {\n            if (this.minorIndentFunctions.indexOf(fn) !== -1) {\n              return this.$toIndent(line.substring(0, iBefore - 1) + tab);\n            } else {\n              return this.$toIndent(line.substring(0, i + 1));\n            }\n          } else if (ch === undefined) {\n            return this.$toIndent(line.substring(0, iBefore - 1) + tab);\n          }\n\n          fn += line[i];\n          i++;\n        }\n      } else if (delta < 0 && !isParen) {\n        return this.$toIndent(line.substring(0, i + 1));\n      } else if (delta > 0) {\n        baseIndent = baseIndent.substring(0, baseIndent.length - tab.length);\n        return baseIndent;\n      } else {\n        return baseIndent;\n      }\n    };\n\n    this.getNextLineIndent = function (state, line, tab) {\n      return this.$calculateIndent(line, tab);\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/scheme\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/scheme\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/node_modules/ace-builds/src-noconflict/mode-scheme.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","SchemeHighlightRules","keywordControl","keywordOperator","constantLanguage","supportFunctions","keywordMapper","createKeywordMapper","$rules","token","regex","inherits","Range","MatchingParensOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","TextMode","Mode","HighlightRules","$outdent","$behaviour","$defaultBehaviour","lineCommentStart","minorIndentFunctions","$toIndent","str","split","map","ch","exec","join","$calculateIndent","tab","baseIndent","delta","isParen","i","iBefore","fn","indexOf","substring","undefined","getNextLineIndent","state","$id","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/scheme_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar SchemeHighlightRules = function() {\r\n    var keywordControl = \"case|do|let|loop|if|else|when\";\r\n    var keywordOperator = \"eq?|eqv?|equal?|and|or|not|null?\";\r\n    var constantLanguage = \"#t|#f\";\r\n    var supportFunctions = \"cons|car|cdr|cond|lambda|lambda*|syntax-rules|format|set!|quote|eval|append|list|list?|member?|load\";\r\n\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"keyword.control\": keywordControl,\r\n        \"keyword.operator\": keywordOperator,\r\n        \"constant.language\": constantLanguage,\r\n        \"support.function\": supportFunctions\r\n    }, \"identifier\", true);\r\n\r\n    this.$rules = \r\n        {\r\n    \"start\": [\r\n        {\r\n            token : \"comment\",\r\n            regex : \";.*$\"\r\n        },\r\n        {\r\n            \"token\": [\"storage.type.function-type.scheme\", \"text\", \"entity.name.function.scheme\"],\r\n            \"regex\": \"(?:\\\\b(?:(define|define-syntax|define-macro))\\\\b)(\\\\s+)((?:\\\\w|\\\\-|\\\\!|\\\\?)*)\"\r\n        },\r\n        {\r\n            \"token\": \"punctuation.definition.constant.character.scheme\",\r\n            \"regex\": \"#:\\\\S+\"\r\n        },\r\n        {\r\n            \"token\": [\"punctuation.definition.variable.scheme\", \"variable.other.global.scheme\", \"punctuation.definition.variable.scheme\"],\r\n            \"regex\": \"(\\\\*)(\\\\S*)(\\\\*)\"\r\n        },\r\n        {\r\n            \"token\" : \"constant.numeric\", // hex\r\n            \"regex\" : \"#[xXoObB][0-9a-fA-F]+\"\r\n        }, \r\n        {\r\n            \"token\" : \"constant.numeric\", // float\r\n            \"regex\" : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\"\r\n        },\r\n        {\r\n                \"token\" : keywordMapper,\r\n                \"regex\" : \"[a-zA-Z_#][a-zA-Z0-9_\\\\-\\\\?\\\\!\\\\*]*\"\r\n        },\r\n        {\r\n            \"token\" : \"string\",\r\n            \"regex\" : '\"(?=.)',\r\n            \"next\"  : \"qqstring\"\r\n        }\r\n    ],\r\n    \"qqstring\": [\r\n        {\r\n            \"token\": \"constant.character.escape.scheme\",\r\n            \"regex\": \"\\\\\\\\.\"\r\n        },\r\n        {\r\n            \"token\" : \"string\",\r\n            \"regex\" : '[^\"\\\\\\\\]+',\r\n            \"merge\" : true\r\n        }, {\r\n            \"token\" : \"string\",\r\n            \"regex\" : \"\\\\\\\\$\",\r\n            \"next\"  : \"qqstring\",\r\n            \"merge\" : true\r\n        }, {\r\n            \"token\" : \"string\",\r\n            \"regex\" : '\"|$',\r\n            \"next\"  : \"start\",\r\n            \"merge\" : true\r\n        }\r\n    ]\r\n};\r\n\r\n};\r\n\r\noop.inherits(SchemeHighlightRules, TextHighlightRules);\r\n\r\nexports.SchemeHighlightRules = SchemeHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/matching_parens_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar Range = require(\"../range\").Range;\r\n\r\nvar MatchingParensOutdent = function() {};\r\n\r\n(function() {\r\n\r\n    this.checkOutdent = function(line, input) {\r\n        if (! /^\\s+$/.test(line))\r\n            return false;\r\n\r\n        return /^\\s*\\)/.test(input);\r\n    };\r\n\r\n    this.autoOutdent = function(doc, row) {\r\n        var line = doc.getLine(row);\r\n        var match = line.match(/^(\\s*\\))/);\r\n\r\n        if (!match) return 0;\r\n\r\n        var column = match[1].length;\r\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\r\n\r\n        if (!openBracePos || openBracePos.row == row) return 0;\r\n\r\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\r\n        doc.replace(new Range(row, 0, row, column-1), indent);\r\n    };\r\n\r\n    this.$getIndent = function(line) {\r\n        var match = line.match(/^(\\s+)/);\r\n        if (match) {\r\n            return match[1];\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n}).call(MatchingParensOutdent.prototype);\r\n\r\nexports.MatchingParensOutdent = MatchingParensOutdent;\r\n});\r\n\r\nace.define(\"ace/mode/scheme\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/scheme_highlight_rules\",\"ace/mode/matching_parens_outdent\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar SchemeHighlightRules = require(\"./scheme_highlight_rules\").SchemeHighlightRules;\r\nvar MatchingParensOutdent = require(\"./matching_parens_outdent\").MatchingParensOutdent;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = SchemeHighlightRules;\r\n\tthis.$outdent = new MatchingParensOutdent();\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n       \r\n    this.lineCommentStart = \";\";\r\n    this.minorIndentFunctions = [\"define\", \"lambda\", \"define-macro\", \"define-syntax\", \"syntax-rules\", \"define-record-type\", \"define-structure\"];\r\n\r\n    this.$toIndent = function(str) {\r\n        return str.split('').map(function(ch) {\r\n            if (/\\s/.exec(ch)) {\r\n                return ch;\r\n            } else {\r\n                return ' ';\r\n            }\r\n        }).join('');\r\n    };\r\n\r\n    this.$calculateIndent = function(line, tab) {\r\n        var baseIndent = this.$getIndent(line);\r\n        var delta = 0;\r\n        var isParen, ch;\r\n        for (var i = line.length - 1; i >= 0; i--) {\r\n            ch = line[i];\r\n            if (ch === '(') {\r\n                delta--;\r\n                isParen = true;\r\n            } else if (ch === '(' || ch === '[' || ch === '{') {\r\n                delta--;\r\n                isParen = false;\r\n            } else if (ch === ')' || ch === ']' || ch === '}') {\r\n                delta++;\r\n            }\r\n            if (delta < 0) {\r\n                break;\r\n            }\r\n        }\r\n        if (delta < 0 && isParen) {\r\n            i += 1;\r\n            var iBefore = i;\r\n            var fn = '';\r\n            while (true) {\r\n                ch = line[i];\r\n                if (ch === ' ' || ch === '\\t') {\r\n                    if(this.minorIndentFunctions.indexOf(fn) !== -1) {\r\n                        return this.$toIndent(line.substring(0, iBefore - 1) + tab);\r\n                    } else {\r\n                        return this.$toIndent(line.substring(0, i + 1));\r\n                    }\r\n                } else if (ch === undefined) {\r\n                    return this.$toIndent(line.substring(0, iBefore - 1) + tab);\r\n                }\r\n                fn += line[i];\r\n                i++;\r\n            }\r\n        } else if(delta < 0 && !isParen) {\r\n            return this.$toIndent(line.substring(0, i+1));\r\n        } else if(delta > 0) {\r\n            baseIndent = baseIndent.substring(0, baseIndent.length - tab.length);\r\n            return baseIndent;\r\n        } else {\r\n            return baseIndent;\r\n        }\r\n    };\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        return this.$calculateIndent(line, tab);\r\n    };\r\n\r\n    this.checkOutdent = function(state, line, input) {\r\n        return this.$outdent.checkOutdent(line, input);\r\n    };\r\n\r\n    this.autoOutdent = function(state, doc, row) {\r\n        this.$outdent.autoOutdent(doc, row);\r\n    };\r\n    \r\n    this.$id = \"ace/mode/scheme\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});                (function() {\r\n                    ace.require([\"ace/mode/scheme\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "]},"metadata":{},"sourceType":"script"}