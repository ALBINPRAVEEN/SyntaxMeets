{"ast":null,"code":"ace.define(\"ace/mode/tex_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var lang = require(\"../lib/lang\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var TexHighlightRules = function (textClass) {\n    if (!textClass) textClass = \"text\";\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"%.*$\"\n      }, {\n        token: textClass,\n        // non-command\n        regex: \"\\\\\\\\[$&%#\\\\{\\\\}]\"\n      }, {\n        token: \"keyword\",\n        // command\n        regex: \"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\",\n        next: \"nospell\"\n      }, {\n        token: \"keyword\",\n        // command\n        regex: \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: textClass,\n        regex: \"\\\\s+\"\n      }],\n      \"nospell\": [{\n        token: \"comment\",\n        regex: \"%.*$\",\n        next: \"start\"\n      }, {\n        token: \"nospell.\" + textClass,\n        // non-command\n        regex: \"\\\\\\\\[$&%#\\\\{\\\\}]\"\n      }, {\n        token: \"keyword\",\n        // command\n        regex: \"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\"\n      }, {\n        token: \"keyword\",\n        // command\n        regex: \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\",\n        next: \"start\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"[\\\\])]\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"}\",\n        next: \"start\"\n      }, {\n        token: \"nospell.\" + textClass,\n        regex: \"\\\\s+\"\n      }, {\n        token: \"nospell.\" + textClass,\n        regex: \"\\\\w+\"\n      }]\n    };\n  };\n\n  oop.inherits(TexHighlightRules, TextHighlightRules);\n  exports.TexHighlightRules = TexHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingBraceOutdent = function () {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/tex\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/text_highlight_rules\", \"ace/mode/tex_highlight_rules\", \"ace/mode/matching_brace_outdent\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var TexHighlightRules = require(\"./tex_highlight_rules\").TexHighlightRules;\n\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n  var Mode = function (suppressHighlighting) {\n    if (suppressHighlighting) this.HighlightRules = TextHighlightRules;else this.HighlightRules = TexHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"%\";\n\n    this.getNextLineIndent = function (state, line, tab) {\n      return this.$getIndent(line);\n    };\n\n    this.allowAutoInsert = function () {\n      return false;\n    };\n\n    this.$id = \"ace/mode/tex\";\n    this.snippetFileId = \"ace/snippets/tex\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/tex\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/node_modules/ace-builds/src-noconflict/mode-tex.js"],"names":["ace","define","require","exports","module","oop","lang","TextHighlightRules","TexHighlightRules","textClass","$rules","token","regex","next","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","TextMode","Mode","suppressHighlighting","HighlightRules","$outdent","$behaviour","$defaultBehaviour","lineCommentStart","getNextLineIndent","state","tab","allowAutoInsert","$id","snippetFileId","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/tex_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar lang = require(\"../lib/lang\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar TexHighlightRules = function(textClass) {\r\n\r\n    if (!textClass)\r\n        textClass = \"text\";\r\n\r\n    this.$rules = {\r\n        \"start\" : [\r\n            {\r\n                token : \"comment\",\r\n                regex : \"%.*$\"\r\n            }, {\r\n                token : textClass, // non-command\r\n                regex : \"\\\\\\\\[$&%#\\\\{\\\\}]\"\r\n            }, {\r\n                token : \"keyword\", // command\r\n                regex : \"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\",\r\n               next : \"nospell\"\r\n            }, {\r\n                token : \"keyword\", // command\r\n                regex : \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\"\r\n            }, {\r\n               token : \"paren.keyword.operator\",\r\n                regex : \"[[({]\"\r\n            }, {\r\n               token : \"paren.keyword.operator\",\r\n                regex : \"[\\\\])}]\"\r\n            }, {\r\n                token : textClass,\r\n                regex : \"\\\\s+\"\r\n            }\r\n        ],\r\n        \"nospell\" : [\r\n           {\r\n               token : \"comment\",\r\n               regex : \"%.*$\",\r\n               next : \"start\"\r\n           }, {\r\n               token : \"nospell.\" + textClass, // non-command\r\n               regex : \"\\\\\\\\[$&%#\\\\{\\\\}]\"\r\n           }, {\r\n               token : \"keyword\", // command\r\n               regex : \"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\"\r\n           }, {\r\n               token : \"keyword\", // command\r\n               regex : \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\",\r\n               next : \"start\"\r\n           }, {\r\n               token : \"paren.keyword.operator\",\r\n               regex : \"[[({]\"\r\n           }, {\r\n               token : \"paren.keyword.operator\",\r\n               regex : \"[\\\\])]\"\r\n           }, {\r\n               token : \"paren.keyword.operator\",\r\n               regex : \"}\",\r\n               next : \"start\"\r\n           }, {\r\n               token : \"nospell.\" + textClass,\r\n               regex : \"\\\\s+\"\r\n           }, {\r\n               token : \"nospell.\" + textClass,\r\n               regex : \"\\\\w+\"\r\n           }\r\n        ]\r\n    };\r\n};\r\n\r\noop.inherits(TexHighlightRules, TextHighlightRules);\r\n\r\nexports.TexHighlightRules = TexHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar Range = require(\"../range\").Range;\r\n\r\nvar MatchingBraceOutdent = function() {};\r\n\r\n(function() {\r\n\r\n    this.checkOutdent = function(line, input) {\r\n        if (! /^\\s+$/.test(line))\r\n            return false;\r\n\r\n        return /^\\s*\\}/.test(input);\r\n    };\r\n\r\n    this.autoOutdent = function(doc, row) {\r\n        var line = doc.getLine(row);\r\n        var match = line.match(/^(\\s*\\})/);\r\n\r\n        if (!match) return 0;\r\n\r\n        var column = match[1].length;\r\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\r\n\r\n        if (!openBracePos || openBracePos.row == row) return 0;\r\n\r\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\r\n        doc.replace(new Range(row, 0, row, column-1), indent);\r\n    };\r\n\r\n    this.$getIndent = function(line) {\r\n        return line.match(/^\\s*/)[0];\r\n    };\r\n\r\n}).call(MatchingBraceOutdent.prototype);\r\n\r\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\r\n});\r\n\r\nace.define(\"ace/mode/tex\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/text_highlight_rules\",\"ace/mode/tex_highlight_rules\",\"ace/mode/matching_brace_outdent\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\nvar TexHighlightRules = require(\"./tex_highlight_rules\").TexHighlightRules;\r\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\r\n\r\nvar Mode = function(suppressHighlighting) {\r\n    if (suppressHighlighting)\r\n        this.HighlightRules = TextHighlightRules;\r\n    else\r\n        this.HighlightRules = TexHighlightRules;\r\n    this.$outdent = new MatchingBraceOutdent();\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n   this.lineCommentStart = \"%\";\r\n   this.getNextLineIndent = function(state, line, tab) {\r\n      return this.$getIndent(line);\r\n   };\r\n\r\n   this.allowAutoInsert = function() {\r\n      return false;\r\n   };\r\n    this.$id = \"ace/mode/tex\";\r\n    this.snippetFileId = \"ace/snippets/tex\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});                (function() {\r\n                    ace.require([\"ace/mode/tex\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "]},"metadata":{},"sourceType":"script"}