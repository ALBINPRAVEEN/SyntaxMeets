{"ast":null,"code":"ace.define(\"ace/mode/praat_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var PraatHighlightRules = function () {\n    var keywords = \"if|then|else|elsif|elif|endif|fi|\" + \"endfor|endproc|\" + // related keywords specified below\n    \"while|endwhile|\" + \"repeat|until|\" + \"select|plus|minus|\" + \"assert|asserterror\";\n    var predefinedVariables = \"macintosh|windows|unix|\" + \"praatVersion|praatVersion\\\\$\" + \"pi|undefined|\" + \"newline\\\\$|tab\\\\$|\" + \"shellDirectory\\\\$|homeDirectory\\\\$|preferencesDirectory\\\\$|\" + \"temporaryDirectory\\\\$|defaultDirectory\\\\$\";\n    var directives = \"clearinfo|endSendPraat\";\n    var functions = \"writeInfo|writeInfoLine|appendInfo|appendInfoLine|info\\\\$|\" + \"writeFile|writeFileLine|appendFile|appendFileLine|\" + \"abs|round|floor|ceiling|min|max|imin|imax|\" + \"sqrt|sin|cos|tan|arcsin|arccos|arctan|arctan2|sinc|sincpi|\" + \"exp|ln|lnBeta|lnGamma|log10|log2|\" + \"sinh|cosh|tanh|arcsinh|arccosh|arctanh|\" + \"sigmoid|invSigmoid|erf|erfc|\" + \"random(?:Uniform|Integer|Gauss|Poisson|Binomial)|\" + \"gaussP|gaussQ|invGaussQ|incompleteGammaP|incompleteBeta|\" + \"chiSquareP|chiSquareQ|invChiSquareQ|studentP|studentQ|invStudentQ|\" + \"fisherP|fisherQ|invFisherQ|\" + \"binomialP|binomialQ|invBinomialP|invBinomialQ|\" + \"hertzToBark|barkToHerz|\" + \"hertzToMel|melToHertz|\" + \"hertzToSemitones|semitonesToHerz|\" + \"erb|hertzToErb|erbToHertz|\" + \"phonToDifferenceLimens|differenceLimensToPhon|\" + \"soundPressureToPhon|\" + \"beta|beta2|besselI|besselK|\" + \"numberOfColumns|numberOfRows|\" + \"selected|selected\\\\$|numberOfSelected|variableExists|\" + \"index|rindex|startsWith|endsWith|\" + \"index_regex|rindex_regex|replace_regex\\\\$|\" + \"length|extractWord\\\\$|extractLine\\\\$|extractNumber|\" + \"left\\\\$|right\\\\$|mid\\\\$|replace\\\\$|\" + \"date\\\\$|fixed\\\\$|percent\\\\$|\" + \"zero#|linear#|randomUniform#|randomInteger#|randomGauss#|\" + \"beginPause|endPause|\" + \"demoShow|demoWindowTitle|demoInput|demoWaitForInput|\" + \"demoClicked|demoClickedIn|demoX|demoY|\" + \"demoKeyPressed|demoKey\\\\$|\" + \"demoExtraControlKeyPressed|demoShiftKeyPressed|\" + \"demoCommandKeyPressed|demoOptionKeyPressed|\" + \"environment\\\\$|chooseReadFile\\\\$|\" + \"chooseDirectory\\\\$|createDirectory|fileReadable|deleteFile|\" + \"selectObject|removeObject|plusObject|minusObject|\" + \"runScript|exitScript|\" + \"beginSendPraat|endSendPraat|\" + \"objectsAreIdentical\";\n    var objectTypes = \"Activation|AffineTransform|AmplitudeTier|Art|Artword|Autosegment|\" + \"BarkFilter|CCA|Categories|Cepstrum|Cepstrumc|ChebyshevSeries|\" + \"ClassificationTable|Cochleagram|Collection|Configuration|\" + \"Confusion|ContingencyTable|Corpus|Correlation|Covariance|\" + \"CrossCorrelationTable|CrossCorrelationTables|DTW|Diagonalizer|\" + \"Discriminant|Dissimilarity|Distance|Distributions|DurationTier|\" + \"EEG|ERP|ERPTier|Eigen|Excitation|Excitations|ExperimentMFC|FFNet|\" + \"FeatureWeights|Formant|FormantFilter|FormantGrid|FormantPoint|\" + \"FormantTier|GaussianMixture|HMM|HMM_Observation|\" + \"HMM_ObservationSequence|HMM_State|HMM_StateSequence|Harmonicity|\" + \"ISpline|Index|Intensity|IntensityTier|IntervalTier|KNN|KlattGrid|\" + \"KlattTable|LFCC|LPC|Label|LegendreSeries|LinearRegression|\" + \"LogisticRegression|LongSound|Ltas|MFCC|MSpline|ManPages|\" + \"Manipulation|Matrix|MelFilter|MixingMatrix|Movie|Network|\" + \"OTGrammar|OTHistory|OTMulti|PCA|PairDistribution|ParamCurve|\" + \"Pattern|Permutation|Pitch|PitchTier|PointProcess|Polygon|\" + \"Polynomial|Procrustes|RealPoint|RealTier|ResultsMFC|Roots|SPINET|\" + \"SSCP|SVD|Salience|ScalarProduct|Similarity|SimpleString|\" + \"SortedSetOfString|Sound|Speaker|Spectrogram|Spectrum|SpectrumTier|\" + \"SpeechSynthesizer|SpellingChecker|Strings|StringsIndex|Table|\" + \"TableOfReal|TextGrid|TextInterval|TextPoint|TextTier|Tier|\" + \"Transition|VocalTract|Weight|WordList\";\n    this.$rules = {\n      \"start\": [{\n        token: \"string.interpolated\",\n        regex: /'((?:\\.?[a-z][a-zA-Z0-9_.]*)(?:\\$|#|:[0-9]+)?)'/\n      }, {\n        token: [\"text\", \"text\", \"keyword.operator\", \"text\", \"keyword\"],\n        regex: /(^\\s*)(?:(\\.?[a-z][a-zA-Z0-9_.]*\\$?\\s+)(=)(\\s+))?(stopwatch)/\n      }, {\n        token: [\"text\", \"keyword\", \"text\", \"string\"],\n        regex: /(^\\s*)(print(?:line|tab)?|echo|exit|pause|send(?:praat|socket)|include|execute|system(?:_nocheck)?)(\\s+)(.*)/\n      }, {\n        token: [\"text\", \"keyword\"],\n        regex: \"(^\\\\s*)(\" + directives + \")$\"\n      }, {\n        token: [\"text\", \"keyword.operator\", \"text\"],\n        regex: /(\\s+)((?:\\+|-|\\/|\\*|<|>)=?|==?|!=|%|\\^|\\||and|or|not)(\\s+)/\n      }, {\n        token: [\"text\", \"text\", \"keyword.operator\", \"text\", \"keyword\", \"text\", \"keyword\"],\n        regex: /(^\\s*)(?:(\\.?[a-z][a-zA-Z0-9_.]*\\$?\\s+)(=)(\\s+))?(?:((?:no)?warn|(?:unix_)?nocheck|noprogress)(\\s+))?((?:[A-Z][^.:\"]+)(?:$|(?:\\.{3}|:)))/\n      }, {\n        token: [\"text\", \"keyword\", \"text\", \"keyword\"],\n        regex: /(^\\s*)((?:no(?:warn|check))?)(\\s*)(\\b(?:editor(?::?)|endeditor)\\b)/\n      }, {\n        token: [\"text\", \"keyword\", \"text\", \"keyword\"],\n        regex: /(^\\s*)(?:(demo)?(\\s+))((?:[A-Z][^.:\"]+)(?:$|(?:\\.{3}|:)))/\n      }, {\n        token: [\"text\", \"keyword\", \"text\", \"keyword\"],\n        regex: /^(\\s*)(?:(demo)(\\s+))?(10|12|14|16|24)$/\n      }, {\n        token: [\"text\", \"support.function\", \"text\"],\n        regex: /(\\s*)(do\\$?)(\\s*:\\s*|\\s*\\(\\s*)/\n      }, {\n        token: \"entity.name.type\",\n        regex: \"(\" + objectTypes + \")\"\n      }, {\n        token: \"variable.language\",\n        regex: \"(\" + predefinedVariables + \")\"\n      }, {\n        token: [\"support.function\", \"text\"],\n        regex: \"((?:\" + functions + \")\\\\$?)(\\\\s*(?::|\\\\())\"\n      }, {\n        token: \"keyword\",\n        regex: /(\\bfor\\b)/,\n        next: \"for\"\n      }, {\n        token: \"keyword\",\n        regex: \"(\\\\b(?:\" + keywords + \")\\\\b)\"\n      }, {\n        token: \"string\",\n        regex: /\"[^\"]*\"/\n      }, {\n        token: \"string\",\n        regex: /\"[^\"]*$/,\n        next: \"brokenstring\"\n      }, {\n        token: [\"text\", \"keyword\", \"text\", \"entity.name.section\"],\n        regex: /(^\\s*)(\\bform\\b)(\\s+)(.*)/,\n        next: \"form\"\n      }, {\n        token: \"constant.numeric\",\n        regex: /\\b[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b/\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.function\"],\n        regex: /(procedure)(\\s+)([^:\\s]+)/\n      }, {\n        token: [\"entity.name.function\", \"text\"],\n        regex: /(@\\S+)(:|\\s*\\()/\n      }, {\n        token: [\"text\", \"keyword\", \"text\", \"entity.name.function\"],\n        regex: /(^\\s*)(call)(\\s+)(\\S+)/\n      }, {\n        token: \"comment\",\n        regex: /(^\\s*#|;).*$/\n      }, {\n        token: \"text\",\n        regex: /\\s+/\n      }],\n      \"form\": [{\n        token: [\"keyword\", \"text\", \"constant.numeric\"],\n        regex: /((?:optionmenu|choice)\\s+)(\\S+:\\s+)([0-9]+)/\n      }, {\n        token: [\"keyword\", \"constant.numeric\"],\n        regex: /((?:option|button)\\s+)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b)/\n      }, {\n        token: [\"keyword\", \"string\"],\n        regex: /((?:option|button)\\s+)(.*)/\n      }, {\n        token: [\"keyword\", \"text\", \"string\"],\n        regex: /((?:sentence|text)\\s+)(\\S+\\s*)(.*)/\n      }, {\n        token: [\"keyword\", \"text\", \"string\", \"invalid.illegal\"],\n        regex: /(word\\s+)(\\S+\\s*)(\\S+)?(\\s.*)?/\n      }, {\n        token: [\"keyword\", \"text\", \"constant.language\"],\n        regex: /(boolean\\s+)(\\S+\\s*)(0|1|\"?(?:yes|no)\"?)/\n      }, {\n        token: [\"keyword\", \"text\", \"constant.numeric\"],\n        regex: /((?:real|natural|positive|integer)\\s+)(\\S+\\s*)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b)/\n      }, {\n        token: [\"keyword\", \"string\"],\n        regex: /(comment\\s+)(.*)/\n      }, {\n        token: \"keyword\",\n        regex: 'endform',\n        next: \"start\"\n      }],\n      \"for\": [{\n        token: [\"keyword\", \"text\", \"constant.numeric\", \"text\"],\n        regex: /(from|to)(\\s+)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?)(\\s*)/\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: /(from|to)(\\s+\\S+\\s*)/\n      }, {\n        token: \"text\",\n        regex: /$/,\n        next: \"start\"\n      }],\n      \"brokenstring\": [{\n        token: [\"text\", \"string\"],\n        regex: /(\\s*\\.{3})([^\"]*)/\n      }, {\n        token: \"string\",\n        regex: /\"/,\n        next: \"start\"\n      }]\n    };\n  };\n\n  oop.inherits(PraatHighlightRules, TextHighlightRules);\n  exports.PraatHighlightRules = PraatHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingBraceOutdent = function () {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/praat\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/praat_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var PraatHighlightRules = require(\"./praat_highlight_rules\").PraatHighlightRules;\n\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = PraatHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new CStyleFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/praat\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/praat\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/node_modules/ace-builds/src-noconflict/mode-praat.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","PraatHighlightRules","keywords","predefinedVariables","directives","functions","objectTypes","$rules","token","regex","next","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","CStyleFoldMode","HighlightRules","$outdent","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","type","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/praat_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar PraatHighlightRules = function() {\r\n\r\n    var keywords = (\r\n        \"if|then|else|elsif|elif|endif|fi|\" +\r\n        \"endfor|endproc|\" + // related keywords specified below\r\n        \"while|endwhile|\" +\r\n        \"repeat|until|\" +\r\n        \"select|plus|minus|\" +\r\n        \"assert|asserterror\"\r\n    );\r\n\r\n    var predefinedVariables = (\r\n        \"macintosh|windows|unix|\" +\r\n        \"praatVersion|praatVersion\\\\$\" +\r\n        \"pi|undefined|\" +\r\n        \"newline\\\\$|tab\\\\$|\" +\r\n        \"shellDirectory\\\\$|homeDirectory\\\\$|preferencesDirectory\\\\$|\" +\r\n        \"temporaryDirectory\\\\$|defaultDirectory\\\\$\"\r\n    );\r\n    var directives = (\r\n        \"clearinfo|endSendPraat\"\r\n    );\r\n\r\n    var functions = (\r\n        \"writeInfo|writeInfoLine|appendInfo|appendInfoLine|info\\\\$|\" +\r\n        \"writeFile|writeFileLine|appendFile|appendFileLine|\" +\r\n        \"abs|round|floor|ceiling|min|max|imin|imax|\" +\r\n        \"sqrt|sin|cos|tan|arcsin|arccos|arctan|arctan2|sinc|sincpi|\" +\r\n        \"exp|ln|lnBeta|lnGamma|log10|log2|\" +\r\n        \"sinh|cosh|tanh|arcsinh|arccosh|arctanh|\" +\r\n        \"sigmoid|invSigmoid|erf|erfc|\" +\r\n        \"random(?:Uniform|Integer|Gauss|Poisson|Binomial)|\" +\r\n        \"gaussP|gaussQ|invGaussQ|incompleteGammaP|incompleteBeta|\" +\r\n        \"chiSquareP|chiSquareQ|invChiSquareQ|studentP|studentQ|invStudentQ|\" +\r\n        \"fisherP|fisherQ|invFisherQ|\" +\r\n        \"binomialP|binomialQ|invBinomialP|invBinomialQ|\" +\r\n        \"hertzToBark|barkToHerz|\" +\r\n        \"hertzToMel|melToHertz|\" +\r\n        \"hertzToSemitones|semitonesToHerz|\" +\r\n        \"erb|hertzToErb|erbToHertz|\" +\r\n        \"phonToDifferenceLimens|differenceLimensToPhon|\" +\r\n        \"soundPressureToPhon|\" +\r\n        \"beta|beta2|besselI|besselK|\" +\r\n        \"numberOfColumns|numberOfRows|\" +\r\n        \"selected|selected\\\\$|numberOfSelected|variableExists|\"+\r\n        \"index|rindex|startsWith|endsWith|\"+\r\n        \"index_regex|rindex_regex|replace_regex\\\\$|\"+\r\n        \"length|extractWord\\\\$|extractLine\\\\$|extractNumber|\" +\r\n        \"left\\\\$|right\\\\$|mid\\\\$|replace\\\\$|\" +\r\n        \"date\\\\$|fixed\\\\$|percent\\\\$|\" +\r\n        \"zero#|linear#|randomUniform#|randomInteger#|randomGauss#|\" +\r\n        \"beginPause|endPause|\" +\r\n        \"demoShow|demoWindowTitle|demoInput|demoWaitForInput|\" +\r\n        \"demoClicked|demoClickedIn|demoX|demoY|\" +\r\n        \"demoKeyPressed|demoKey\\\\$|\" +\r\n        \"demoExtraControlKeyPressed|demoShiftKeyPressed|\"+\r\n        \"demoCommandKeyPressed|demoOptionKeyPressed|\" +\r\n        \"environment\\\\$|chooseReadFile\\\\$|\" +\r\n        \"chooseDirectory\\\\$|createDirectory|fileReadable|deleteFile|\" +\r\n        \"selectObject|removeObject|plusObject|minusObject|\" +\r\n        \"runScript|exitScript|\" +\r\n        \"beginSendPraat|endSendPraat|\" +\r\n        \"objectsAreIdentical\"\r\n    );\r\n\r\n    var objectTypes = (\r\n        \"Activation|AffineTransform|AmplitudeTier|Art|Artword|Autosegment|\"  +\r\n        \"BarkFilter|CCA|Categories|Cepstrum|Cepstrumc|ChebyshevSeries|\"      +\r\n        \"ClassificationTable|Cochleagram|Collection|Configuration|\"          +\r\n        \"Confusion|ContingencyTable|Corpus|Correlation|Covariance|\"          +\r\n        \"CrossCorrelationTable|CrossCorrelationTables|DTW|Diagonalizer|\"     +\r\n        \"Discriminant|Dissimilarity|Distance|Distributions|DurationTier|\"    +\r\n        \"EEG|ERP|ERPTier|Eigen|Excitation|Excitations|ExperimentMFC|FFNet|\"  +\r\n        \"FeatureWeights|Formant|FormantFilter|FormantGrid|FormantPoint|\"     +\r\n        \"FormantTier|GaussianMixture|HMM|HMM_Observation|\"                   +\r\n        \"HMM_ObservationSequence|HMM_State|HMM_StateSequence|Harmonicity|\"   +\r\n        \"ISpline|Index|Intensity|IntensityTier|IntervalTier|KNN|KlattGrid|\"  +\r\n        \"KlattTable|LFCC|LPC|Label|LegendreSeries|LinearRegression|\"         +\r\n        \"LogisticRegression|LongSound|Ltas|MFCC|MSpline|ManPages|\"           +\r\n        \"Manipulation|Matrix|MelFilter|MixingMatrix|Movie|Network|\"          +\r\n        \"OTGrammar|OTHistory|OTMulti|PCA|PairDistribution|ParamCurve|\"       +\r\n        \"Pattern|Permutation|Pitch|PitchTier|PointProcess|Polygon|\"          +\r\n        \"Polynomial|Procrustes|RealPoint|RealTier|ResultsMFC|Roots|SPINET|\"  +\r\n        \"SSCP|SVD|Salience|ScalarProduct|Similarity|SimpleString|\"           +\r\n        \"SortedSetOfString|Sound|Speaker|Spectrogram|Spectrum|SpectrumTier|\" +\r\n        \"SpeechSynthesizer|SpellingChecker|Strings|StringsIndex|Table|\"      +\r\n        \"TableOfReal|TextGrid|TextInterval|TextPoint|TextTier|Tier|\"         +\r\n        \"Transition|VocalTract|Weight|WordList\"\r\n    );\r\n\r\n    this.$rules = {\r\n        \"start\" : [\r\n            {\r\n                token : \"string.interpolated\",\r\n                regex : /'((?:\\.?[a-z][a-zA-Z0-9_.]*)(?:\\$|#|:[0-9]+)?)'/\r\n            }, {\r\n                token : [\"text\", \"text\", \"keyword.operator\", \"text\", \"keyword\"],\r\n                regex : /(^\\s*)(?:(\\.?[a-z][a-zA-Z0-9_.]*\\$?\\s+)(=)(\\s+))?(stopwatch)/\r\n            }, {\r\n                token : [\"text\", \"keyword\", \"text\", \"string\"],\r\n                regex : /(^\\s*)(print(?:line|tab)?|echo|exit|pause|send(?:praat|socket)|include|execute|system(?:_nocheck)?)(\\s+)(.*)/\r\n            }, {\r\n                token : [\"text\", \"keyword\"],\r\n                regex : \"(^\\\\s*)(\" + directives + \")$\"\r\n            }, {\r\n                token : [\"text\", \"keyword.operator\", \"text\"],\r\n                regex : /(\\s+)((?:\\+|-|\\/|\\*|<|>)=?|==?|!=|%|\\^|\\||and|or|not)(\\s+)/\r\n            }, {\r\n                token : [\"text\", \"text\", \"keyword.operator\", \"text\", \"keyword\", \"text\", \"keyword\"],\r\n                regex : /(^\\s*)(?:(\\.?[a-z][a-zA-Z0-9_.]*\\$?\\s+)(=)(\\s+))?(?:((?:no)?warn|(?:unix_)?nocheck|noprogress)(\\s+))?((?:[A-Z][^.:\"]+)(?:$|(?:\\.{3}|:)))/\r\n            }, {\r\n                token : [\"text\", \"keyword\", \"text\", \"keyword\"],\r\n                regex : /(^\\s*)((?:no(?:warn|check))?)(\\s*)(\\b(?:editor(?::?)|endeditor)\\b)/\r\n            }, {\r\n                token : [\"text\", \"keyword\", \"text\", \"keyword\"],\r\n                regex : /(^\\s*)(?:(demo)?(\\s+))((?:[A-Z][^.:\"]+)(?:$|(?:\\.{3}|:)))/\r\n            }, {\r\n                token : [\"text\", \"keyword\", \"text\", \"keyword\"],\r\n                regex : /^(\\s*)(?:(demo)(\\s+))?(10|12|14|16|24)$/\r\n            }, {\r\n                token : [\"text\", \"support.function\", \"text\"],\r\n                regex : /(\\s*)(do\\$?)(\\s*:\\s*|\\s*\\(\\s*)/\r\n            }, {\r\n                token : \"entity.name.type\",\r\n                regex : \"(\" + objectTypes + \")\"\r\n            }, {\r\n                token : \"variable.language\",\r\n                regex : \"(\" + predefinedVariables + \")\"\r\n            }, {\r\n                token : [\"support.function\", \"text\"],\r\n                regex : \"((?:\" + functions + \")\\\\$?)(\\\\s*(?::|\\\\())\"\r\n            }, {\r\n                token : \"keyword\",\r\n                regex : /(\\bfor\\b)/,\r\n                next : \"for\"\r\n            }, {\r\n                token : \"keyword\",\r\n                regex : \"(\\\\b(?:\" + keywords + \")\\\\b)\"\r\n            }, {\r\n                token : \"string\",\r\n                regex : /\"[^\"]*\"/\r\n            }, {\r\n                token : \"string\",\r\n                regex : /\"[^\"]*$/,\r\n                next : \"brokenstring\"\r\n            }, {\r\n                token : [\"text\", \"keyword\", \"text\", \"entity.name.section\"],\r\n                regex : /(^\\s*)(\\bform\\b)(\\s+)(.*)/,\r\n                next : \"form\"\r\n            }, {\r\n                token : \"constant.numeric\",\r\n                regex : /\\b[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b/\r\n            }, {\r\n                token : [\"keyword\", \"text\", \"entity.name.function\"],\r\n                regex : /(procedure)(\\s+)([^:\\s]+)/\r\n            }, {\r\n                token : [\"entity.name.function\", \"text\"],\r\n                regex : /(@\\S+)(:|\\s*\\()/\r\n            }, {\r\n                token : [\"text\", \"keyword\", \"text\", \"entity.name.function\"],\r\n                regex : /(^\\s*)(call)(\\s+)(\\S+)/\r\n            }, {\r\n                token : \"comment\",\r\n                regex : /(^\\s*#|;).*$/\r\n            }, {\r\n                token : \"text\",\r\n                regex : /\\s+/\r\n            }\r\n        ],\r\n        \"form\" : [\r\n            {\r\n                token : [\"keyword\", \"text\", \"constant.numeric\"],\r\n                regex : /((?:optionmenu|choice)\\s+)(\\S+:\\s+)([0-9]+)/\r\n            }, {\r\n                token : [\"keyword\", \"constant.numeric\"],\r\n                regex : /((?:option|button)\\s+)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b)/\r\n            }, {\r\n                token : [\"keyword\", \"string\"],\r\n                regex : /((?:option|button)\\s+)(.*)/\r\n            }, {\r\n                token : [\"keyword\", \"text\", \"string\"],\r\n                regex : /((?:sentence|text)\\s+)(\\S+\\s*)(.*)/\r\n            }, {\r\n                token : [\"keyword\", \"text\", \"string\", \"invalid.illegal\"],\r\n                regex : /(word\\s+)(\\S+\\s*)(\\S+)?(\\s.*)?/\r\n            }, {\r\n                token : [\"keyword\", \"text\", \"constant.language\"],\r\n                regex : /(boolean\\s+)(\\S+\\s*)(0|1|\"?(?:yes|no)\"?)/\r\n            }, {\r\n                token : [\"keyword\", \"text\", \"constant.numeric\"],\r\n                regex : /((?:real|natural|positive|integer)\\s+)(\\S+\\s*)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b)/\r\n            }, {\r\n                token : [\"keyword\", \"string\"],\r\n                regex : /(comment\\s+)(.*)/\r\n            }, {\r\n                token : \"keyword\",\r\n                regex : 'endform',\r\n                next : \"start\"\r\n            }\r\n        ],\r\n        \"for\" : [\r\n            {\r\n                token : [\"keyword\", \"text\", \"constant.numeric\", \"text\"],\r\n                regex : /(from|to)(\\s+)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?)(\\s*)/\r\n            }, {\r\n                token : [\"keyword\", \"text\"],\r\n                regex : /(from|to)(\\s+\\S+\\s*)/\r\n            }, {\r\n                token : \"text\",\r\n                regex : /$/,\r\n                next : \"start\"\r\n            }\r\n        ],\r\n        \"brokenstring\" : [\r\n            {\r\n                token : [\"text\", \"string\"],\r\n                regex : /(\\s*\\.{3})([^\"]*)/\r\n            }, {\r\n                token : \"string\",\r\n                regex : /\"/,\r\n                next : \"start\"\r\n            }\r\n        ]\r\n    };\r\n};\r\n\r\noop.inherits(PraatHighlightRules, TextHighlightRules);\r\n\r\nexports.PraatHighlightRules = PraatHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar Range = require(\"../range\").Range;\r\n\r\nvar MatchingBraceOutdent = function() {};\r\n\r\n(function() {\r\n\r\n    this.checkOutdent = function(line, input) {\r\n        if (! /^\\s+$/.test(line))\r\n            return false;\r\n\r\n        return /^\\s*\\}/.test(input);\r\n    };\r\n\r\n    this.autoOutdent = function(doc, row) {\r\n        var line = doc.getLine(row);\r\n        var match = line.match(/^(\\s*\\})/);\r\n\r\n        if (!match) return 0;\r\n\r\n        var column = match[1].length;\r\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\r\n\r\n        if (!openBracePos || openBracePos.row == row) return 0;\r\n\r\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\r\n        doc.replace(new Range(row, 0, row, column-1), indent);\r\n    };\r\n\r\n    this.$getIndent = function(line) {\r\n        return line.match(/^\\s*/)[0];\r\n    };\r\n\r\n}).call(MatchingBraceOutdent.prototype);\r\n\r\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\r\n});\r\n\r\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar Range = require(\"../../range\").Range;\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\n\r\nvar FoldMode = exports.FoldMode = function(commentRegex) {\r\n    if (commentRegex) {\r\n        this.foldingStartMarker = new RegExp(\r\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\r\n        );\r\n        this.foldingStopMarker = new RegExp(\r\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\r\n        );\r\n    }\r\n};\r\noop.inherits(FoldMode, BaseFoldMode);\r\n\r\n(function() {\r\n    \r\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\r\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\r\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\r\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\r\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\r\n    this._getFoldWidgetBase = this.getFoldWidget;\r\n    this.getFoldWidget = function(session, foldStyle, row) {\r\n        var line = session.getLine(row);\r\n    \r\n        if (this.singleLineBlockCommentRe.test(line)) {\r\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\r\n                return \"\";\r\n        }\r\n    \r\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\r\n    \r\n        if (!fw && this.startRegionRe.test(line))\r\n            return \"start\"; // lineCommentRegionStart\r\n    \r\n        return fw;\r\n    };\r\n\r\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\r\n        var line = session.getLine(row);\r\n        \r\n        if (this.startRegionRe.test(line))\r\n            return this.getCommentRegionBlock(session, line, row);\r\n        \r\n        var match = line.match(this.foldingStartMarker);\r\n        if (match) {\r\n            var i = match.index;\r\n\r\n            if (match[1])\r\n                return this.openingBracketBlock(session, match[1], row, i);\r\n                \r\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\r\n            \r\n            if (range && !range.isMultiLine()) {\r\n                if (forceMultiline) {\r\n                    range = this.getSectionRange(session, row);\r\n                } else if (foldStyle != \"all\")\r\n                    range = null;\r\n            }\r\n            \r\n            return range;\r\n        }\r\n\r\n        if (foldStyle === \"markbegin\")\r\n            return;\r\n\r\n        var match = line.match(this.foldingStopMarker);\r\n        if (match) {\r\n            var i = match.index + match[0].length;\r\n\r\n            if (match[1])\r\n                return this.closingBracketBlock(session, match[1], row, i);\r\n\r\n            return session.getCommentFoldRange(row, i, -1);\r\n        }\r\n    };\r\n    \r\n    this.getSectionRange = function(session, row) {\r\n        var line = session.getLine(row);\r\n        var startIndent = line.search(/\\S/);\r\n        var startRow = row;\r\n        var startColumn = line.length;\r\n        row = row + 1;\r\n        var endRow = row;\r\n        var maxRow = session.getLength();\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var indent = line.search(/\\S/);\r\n            if (indent === -1)\r\n                continue;\r\n            if  (startIndent > indent)\r\n                break;\r\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\r\n            \r\n            if (subRange) {\r\n                if (subRange.start.row <= startRow) {\r\n                    break;\r\n                } else if (subRange.isMultiLine()) {\r\n                    row = subRange.end.row;\r\n                } else if (startIndent == indent) {\r\n                    break;\r\n                }\r\n            }\r\n            endRow = row;\r\n        }\r\n        \r\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\r\n    };\r\n    this.getCommentRegionBlock = function(session, line, row) {\r\n        var startColumn = line.search(/\\s*$/);\r\n        var maxRow = session.getLength();\r\n        var startRow = row;\r\n        \r\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\r\n        var depth = 1;\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var m = re.exec(line);\r\n            if (!m) continue;\r\n            if (m[1]) depth--;\r\n            else depth++;\r\n\r\n            if (!depth) break;\r\n        }\r\n\r\n        var endRow = row;\r\n        if (endRow > startRow) {\r\n            return new Range(startRow, startColumn, endRow, line.length);\r\n        }\r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n\r\nace.define(\"ace/mode/praat\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/praat_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/cstyle\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar PraatHighlightRules = require(\"./praat_highlight_rules\").PraatHighlightRules;\r\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\r\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = PraatHighlightRules;\r\n    this.$outdent = new MatchingBraceOutdent();\r\n    this.foldingRules = new CStyleFoldMode();\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n\r\n    this.lineCommentStart = \"#\";\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n\r\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\r\n        var tokens = tokenizedLine.tokens;\r\n\r\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\r\n            return indent;\r\n        }\r\n\r\n        if (state == \"start\") {\r\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\r\n            if (match) {\r\n                indent += tab;\r\n            }\r\n        }\r\n\r\n        return indent;\r\n    };\r\n\r\n    this.checkOutdent = function(state, line, input) {\r\n        return this.$outdent.checkOutdent(line, input);\r\n    };\r\n\r\n    this.autoOutdent = function(state, doc, row) {\r\n        this.$outdent.autoOutdent(doc, row);\r\n    };\r\n\r\n    this.$id = \"ace/mode/praat\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});                (function() {\r\n                    ace.require([\"ace/mode/praat\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "]},"metadata":{},"sourceType":"script"}