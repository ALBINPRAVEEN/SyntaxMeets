{"ast":null,"code":"var _jsxFileName = \"D:\\\\dhruv codes\\\\SyntaxMeets\\\\frontend\\\\syntaxmeets\\\\src\\\\components\\\\Editor.js\";\nimport React, { Component } from \"react\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-min-noconflict/ext-searchbox\";\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-jsx\";\nimport { FormControl, InputLabel, MenuItem, Select, AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\nimport ShareIcon from '@material-ui/icons/Share';\nimport Switch from '@material-ui/core/Switch';\nconst divStyle = {\n  color: 'white'\n};\nconst languages = [\"c_cpp\", \"java\", \"python\", \"javascript\", \"html\", \"xml\", \"ruby\", \"css\", \"sass\", \"typescript\", \"kotlin\", \"swift\", \"markdown\", \"mysql\", \"json\", \"golang\", \"csharp\", \"sql\", \"sqlserver\"];\nconst themes = [\"monokai\", \"github\", \"tomorrow\", \"tomorrow_night\", \"kuroir\", \"twilight\", \"xcode\", \"textmate\", \"solarized_dark\", \"solarized_light\", \"terminal\"]; //extracting all the languages recquired\n\nlanguages.forEach(lang => {\n  require(`ace-builds/src-noconflict/mode-${lang}`);\n\n  require(`ace-builds/src-noconflict/snippets/${lang}`);\n}); //extracting themes\n\nthemes.forEach(theme => require(`ace-builds/src-noconflict/theme-${theme}`)); //default value to be displayed on code editor\n\nconst defaultValue = `#include <bits/stdc++.h>\n#define lli long long int\n#define endl \"\\\\n\"\n#define MAX 1000005\n#define MOD 1000000007\nusing namespace std;\n\n\nint main()\n{\n\tint t;\n\tcin>>t;\n\t\n\twhile(t--)\n\t{\n\t    //your code\n\t  \n\t}\n\treturn 0;\n}`;\n\nclass Editor extends Component {\n  onChange(newValue) {\n    console.log(\"change\", newValue);\n    this.setState({\n      value: newValue\n    });\n  }\n\n  onSelectionChange(newValue, event) {\n    console.log(\"select-change\", newValue);\n    console.log(\"select-change-event\", event);\n  }\n\n  onCursorChange(newValue, event) {\n    console.log(\"cursor-change\", newValue);\n    console.log(\"cursor-change-event\", event);\n  }\n\n  onValidate(annotations) {\n    console.log(\"onValidate\", annotations);\n  }\n\n  setPlaceholder(e) {\n    this.setState({\n      placeholder: e.target.value\n    });\n  }\n\n  setTheme(e) {\n    this.setState({\n      theme: e.target.value\n    });\n  }\n\n  setMode(e) {\n    this.setState({\n      mode: e.target.value\n    });\n  }\n\n  setBoolean(name, value) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  setFontSize(e) {\n    this.setState({\n      fontSize: parseInt(e.target.value, 10)\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: defaultValue,\n      placeholder: \"Placeholder Text\",\n      theme: \"tomorrow_night\",\n      mode: \"c_cpp\",\n      enableBasicAutocompletion: false,\n      enableLiveAutocompletion: false,\n      fontSize: 16,\n      showGutter: true,\n      showPrintMargin: true,\n      highlightActiveLine: true,\n      enableSnippets: false,\n      showLineNumbers: true\n    };\n    this.setPlaceholder = this.setPlaceholder.bind(this);\n    this.setTheme = this.setTheme.bind(this);\n    this.setMode = this.setMode.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.setFontSize = this.setFontSize.bind(this);\n    this.setBoolean = this.setBoolean.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"static\",\n      style: {\n        'backgroundColor': \"#393b44\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      style: {\n        'fontFamily': \"poppins\",\n        \"color\": \"#f1f3f8\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, \"CodeEditor \\xA0\\xA0\\xA0\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        maxWidth: 120\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"demo-simple-select-outlined-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }, \"Language\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"mode\",\n      labelId: \"controlled-open-select-label\",\n      id: \"demo-simple-select-filled\",\n      value: this.state.mode,\n      onChange: this.setMode,\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 33\n      }\n    }, languages.map(lang => /*#__PURE__*/React.createElement(MenuItem, {\n      value: lang,\n      key: lang,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 41\n      }\n    }, lang.toUpperCase()))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    }, \"Theme:\\xA0\\xA0\\xA0\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"Theme\",\n      onChange: this.setTheme,\n      value: this.state.theme,\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 37\n      }\n    }, themes.map(lang => /*#__PURE__*/React.createElement(MenuItem, {\n      key: lang,\n      value: lang,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 45\n      }\n    }, lang)))), \"\\xA0\\xA0\\xA0\\xA0\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 29\n      }\n    }, \"Font Size:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"Font Size\",\n      onChange: this.setFontSize,\n      value: this.state.fontSize,\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 37\n      }\n    }, [14, 16, 18, 20, 24, 28, 32, 40].map(lang => /*#__PURE__*/React.createElement(MenuItem, {\n      key: lang,\n      value: lang,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 45\n      }\n    }, lang)))))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      startIcon: /*#__PURE__*/React.createElement(ShareIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 64\n        }\n      }),\n      style: {\n        'fontFamily': \"poppins\",\n        'marginLeft': \"auto\",\n        'fontWeight': \"600\",\n        'color': \"#f1f3f8\",\n        'backgroundColor': \"#99A3CD\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 25\n      }\n    }, \"Share\"))), /*#__PURE__*/React.createElement(AceEditor, {\n      placeholder: this.state.placeholder,\n      mode: this.state.mode,\n      theme: this.state.theme,\n      name: \"blah2\",\n      height: 550,\n      width: 690,\n      onLoad: this.onLoad,\n      onChange: this.onChange,\n      onSelectionChange: this.onSelectionChange,\n      onCursorChange: this.onCursorChange,\n      onValidate: this.onValidate,\n      value: this.state.value,\n      fontSize: this.state.fontSize,\n      showPrintMargin: this.state.showPrintMargin,\n      showGutter: this.state.showGutter,\n      highlightActiveLine: this.state.highlightActiveLine,\n      setOptions: {\n        useWorker: false,\n        enableBasicAutocompletion: this.state.enableBasicAutocompletion,\n        enableLiveAutocompletion: this.state.enableLiveAutocompletion,\n        enableSnippets: this.state.enableSnippets,\n        showLineNumbers: this.state.showLineNumbers,\n        tabSize: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AppBar, {\n      position: \"static\",\n      style: {\n        'backgroundColor': \"#393b44\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      checked: this.state.enableBasicAutocompletion,\n      onChange: e => this.setBoolean(\"enableBasicAutocompletion\", e.target.checked),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 37\n      }\n    }), \"Enable Basic Autocomplete \\xA0\\xA0\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      checked: this.state.showGutter,\n      onChange: e => this.setBoolean(\"showGutter\", e.target.checked),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 37\n      }\n    }), \"Show Gutter\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      checked: this.state.showPrintMargin,\n      onChange: e => this.setBoolean(\"showPrintMargin\", e.target.checked),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 37\n      }\n    }), \"Show Print Margin\")))), /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      checked: this.state.highlightActiveLine,\n      onChange: e => this.setBoolean(\"highlightActiveLine\", e.target.checked),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 37\n      }\n    }), \"Highlight Active Line\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      checked: this.state.enableSnippets,\n      onChange: e => this.setBoolean(\"enableSnippets\", e.target.checked),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 37\n      }\n    }), \"Enable Snippets\\xA0\\xA0\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      checked: this.state.showLineNumbers,\n      onChange: e => this.setBoolean(\"showLineNumbers\", e.target.checked),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 37\n      }\n    }), \"Show Line Numbers\"))))));\n  }\n\n}\n\nexport default Editor;","map":{"version":3,"sources":["D:/dhruv codes/SyntaxMeets/frontend/syntaxmeets/src/components/Editor.js"],"names":["React","Component","AceEditor","FormControl","InputLabel","MenuItem","Select","AppBar","Toolbar","Typography","Button","ShareIcon","Switch","divStyle","color","languages","themes","forEach","lang","require","theme","defaultValue","Editor","onChange","newValue","console","log","setState","value","onSelectionChange","event","onCursorChange","onValidate","annotations","setPlaceholder","e","placeholder","target","setTheme","setMode","mode","setBoolean","name","setFontSize","fontSize","parseInt","constructor","props","state","enableBasicAutocompletion","enableLiveAutocompletion","showGutter","showPrintMargin","highlightActiveLine","enableSnippets","showLineNumbers","bind","render","maxWidth","map","toUpperCase","onLoad","useWorker","tabSize","checked"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-min-noconflict/ext-searchbox\";\r\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/mode-jsx\";\r\nimport { FormControl, InputLabel, MenuItem, Select, AppBar, Toolbar, Typography, Button } from \"@material-ui/core\"\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n\r\nconst divStyle = {\r\n    color: 'white'\r\n};\r\n\r\nconst languages = [\r\n    \"c_cpp\",\r\n    \"java\",\r\n    \"python\",\r\n    \"javascript\",\r\n    \"html\",\r\n    \"xml\",\r\n    \"ruby\",\r\n    \"css\",\r\n    \"sass\",\r\n    \"typescript\",\r\n    \"kotlin\",\r\n    \"swift\",\r\n    \"markdown\",\r\n    \"mysql\",\r\n    \"json\",\r\n    \"golang\",\r\n    \"csharp\",\r\n    \"sql\",\r\n    \"sqlserver\",\r\n];\r\n\r\nconst themes = [\r\n    \"monokai\",\r\n    \"github\",\r\n    \"tomorrow\",\r\n    \"tomorrow_night\",\r\n    \"kuroir\",\r\n    \"twilight\",\r\n    \"xcode\",\r\n    \"textmate\",\r\n    \"solarized_dark\",\r\n    \"solarized_light\",\r\n    \"terminal\"\r\n];\r\n\r\n//extracting all the languages recquired\r\nlanguages.forEach(lang => {\r\n    require(`ace-builds/src-noconflict/mode-${lang}`);\r\n    require(`ace-builds/src-noconflict/snippets/${lang}`);\r\n});\r\n//extracting themes\r\nthemes.forEach(theme => require(`ace-builds/src-noconflict/theme-${theme}`));\r\n\r\n//default value to be displayed on code editor\r\nconst defaultValue = `#include <bits/stdc++.h>\r\n#define lli long long int\r\n#define endl \"\\\\n\"\r\n#define MAX 1000005\r\n#define MOD 1000000007\r\nusing namespace std;\r\n\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tcin>>t;\r\n\t\r\n\twhile(t--)\r\n\t{\r\n\t    //your code\r\n\t  \r\n\t}\r\n\treturn 0;\r\n}`;\r\n\r\n\r\n\r\nclass Editor extends Component {\r\n\r\n    onChange(newValue) {\r\n        console.log(\"change\", newValue);\r\n        this.setState({\r\n            value: newValue\r\n        });\r\n    }\r\n\r\n    onSelectionChange(newValue, event) {\r\n        console.log(\"select-change\", newValue);\r\n        console.log(\"select-change-event\", event);\r\n    }\r\n\r\n    onCursorChange(newValue, event) {\r\n        console.log(\"cursor-change\", newValue);\r\n        console.log(\"cursor-change-event\", event);\r\n    }\r\n\r\n    onValidate(annotations) {\r\n        console.log(\"onValidate\", annotations);\r\n    }\r\n\r\n    setPlaceholder(e) {\r\n        this.setState({\r\n            placeholder: e.target.value\r\n        });\r\n    }\r\n    setTheme(e) {\r\n        this.setState({\r\n            theme: e.target.value\r\n        });\r\n    }\r\n    setMode(e) {\r\n        this.setState({\r\n            mode: e.target.value\r\n        });\r\n    }\r\n    setBoolean(name, value) {\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    setFontSize(e) {\r\n        this.setState({\r\n            fontSize: parseInt(e.target.value, 10)\r\n        });\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: defaultValue,\r\n            placeholder: \"Placeholder Text\",\r\n            theme: \"tomorrow_night\",\r\n            mode: \"c_cpp\",\r\n            enableBasicAutocompletion: false,\r\n            enableLiveAutocompletion: false,\r\n            fontSize: 16,\r\n            showGutter: true,\r\n            showPrintMargin: true,\r\n            highlightActiveLine: true,\r\n            enableSnippets: false,\r\n            showLineNumbers: true\r\n        };\r\n\r\n        this.setPlaceholder = this.setPlaceholder.bind(this);\r\n        this.setTheme = this.setTheme.bind(this);\r\n        this.setMode = this.setMode.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.setFontSize = this.setFontSize.bind(this);\r\n        this.setBoolean = this.setBoolean.bind(this);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"columns\">\r\n                <AppBar position=\"static\" style={{ 'backgroundColor': \"#393b44\" }}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h5\" style={{ 'fontFamily': \"poppins\", \"color\": \"#f1f3f8\" }}>\r\n                            CodeEditor &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    </Typography>\r\n\r\n                        <div className=\"field\">\r\n                            <FormControl variant=\"outlined\" style={{ maxWidth: 120 }}>\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Language</InputLabel>\r\n                                <Select\r\n                                    name=\"mode\"\r\n                                    labelId=\"controlled-open-select-label\"\r\n                                    id=\"demo-simple-select-filled\"\r\n                                    value={this.state.mode}\r\n                                    onChange={this.setMode}\r\n                                    style={divStyle}\r\n                                >\r\n                                    {languages.map(lang => (\r\n                                        <MenuItem value={lang} key={lang}>{lang.toUpperCase()}</MenuItem>\r\n\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label>Theme:&nbsp;&nbsp;&nbsp;&nbsp;</label>\r\n                            <div className=\"control\">\r\n\r\n                                <span className=\"select\">\r\n                                    <Select\r\n                                        name=\"Theme\"\r\n                                        onChange={this.setTheme}\r\n                                        value={this.state.theme}\r\n                                        style={divStyle}\r\n                                    >\r\n                                        {themes.map(lang => (\r\n                                            <MenuItem key={lang} value={lang}>{lang}</MenuItem>\r\n\r\n                                        ))}\r\n                                    </Select>\r\n\r\n                                </span>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label>Font Size:</label>\r\n                            <div className=\"control\">\r\n                                <span className=\"select\">\r\n                                    <Select\r\n                                        name=\"Font Size\"\r\n                                        onChange={this.setFontSize}\r\n                                        value={this.state.fontSize}\r\n                                        style={divStyle}\r\n                                    >\r\n                                        {[14, 16, 18, 20, 24, 28, 32, 40].map(lang => (\r\n                                            <MenuItem key={lang} value={lang}>{lang}</MenuItem>\r\n\r\n                                        ))}\r\n                                    </Select>\r\n\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <Button variant=\"contained\" startIcon={<ShareIcon />} style={{ 'fontFamily': \"poppins\", 'marginLeft': \"auto\", 'fontWeight': \"600\", 'color': \"#f1f3f8\", 'backgroundColor': \"#99A3CD\" }}>\r\n                            Share</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <AceEditor\r\n                    placeholder={this.state.placeholder}\r\n                    mode={this.state.mode}\r\n                    theme={this.state.theme}\r\n                    name=\"blah2\"\r\n                    height={550}\r\n                    width={690}\r\n                    onLoad={this.onLoad}\r\n                    onChange={this.onChange}\r\n                    onSelectionChange={this.onSelectionChange}\r\n                    onCursorChange={this.onCursorChange}\r\n                    onValidate={this.onValidate}\r\n                    value={this.state.value}\r\n                    fontSize={this.state.fontSize}\r\n                    showPrintMargin={this.state.showPrintMargin}\r\n                    showGutter={this.state.showGutter}\r\n                    highlightActiveLine={this.state.highlightActiveLine}\r\n                    setOptions={{\r\n                        useWorker: false,\r\n                        enableBasicAutocompletion: this.state.enableBasicAutocompletion,\r\n                        enableLiveAutocompletion: this.state.enableLiveAutocompletion,\r\n                        enableSnippets: this.state.enableSnippets,\r\n                        showLineNumbers: this.state.showLineNumbers,\r\n                        tabSize: 2\r\n                    }}\r\n                />\r\n                <AppBar position=\"static\" style={{ 'backgroundColor': \"#393b44\" }}>\r\n                    <Toolbar>\r\n                        <div className=\"field\">\r\n                            <p className=\"control\">\r\n                                <label className=\"checkbox\">\r\n                                    <Switch\r\n                                        checked={this.state.enableBasicAutocompletion}\r\n                                        onChange={e =>\r\n                                            this.setBoolean(\r\n                                                \"enableBasicAutocompletion\",\r\n                                                e.target.checked\r\n                                            )}\r\n                                        color=\"primary\"\r\n                                    />\r\n\r\n                                        Enable Basic Autocomplete &nbsp;&nbsp;\r\n                                    </label>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <p className=\"control\">\r\n                                <label className=\"checkbox\">\r\n                                    <Switch\r\n                                        checked={this.state.showGutter}\r\n                                        onChange={e =>\r\n                                            this.setBoolean(\"showGutter\", e.target.checked)\r\n                                        }\r\n                                        color=\"primary\"\r\n                                    />\r\n                                        Show Gutter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    </label>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <p className=\"control\">\r\n                                <label className=\"checkbox\">\r\n                                    <Switch\r\n                                        checked={this.state.showPrintMargin}\r\n                                        onChange={e =>\r\n                                            this.setBoolean(\"showPrintMargin\", e.target.checked)\r\n                                        }\r\n                                        color=\"primary\"\r\n                                    />\r\n                                        Show Print Margin\r\n                                    </label>\r\n                            </p>\r\n                        </div>\r\n                    </Toolbar>\r\n                    <Toolbar>\r\n                        <div className=\"field\">\r\n                            <p className=\"control\">\r\n                                <label className=\"checkbox\">\r\n                                    <Switch\r\n                                        checked={this.state.highlightActiveLine}\r\n                                        onChange={e =>\r\n                                            this.setBoolean(\"highlightActiveLine\", e.target.checked)\r\n                                        }\r\n                                        color=\"primary\"\r\n                                    />\r\n                                    Highlight Active Line&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                </label>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <p className=\"control\">\r\n                                <label className=\"checkbox\">\r\n                                    <Switch\r\n                                        checked={this.state.enableSnippets}\r\n                                        onChange={e =>\r\n                                            this.setBoolean(\"enableSnippets\", e.target.checked)\r\n                                        }\r\n                                        color=\"primary\"\r\n                                    />\r\n                                Enable Snippets&nbsp;&nbsp;\r\n                            </label>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <p className=\"control\">\r\n                                <label className=\"checkbox\">\r\n                                    <Switch\r\n                                        checked={this.state.showLineNumbers}\r\n                                        onChange={e =>\r\n                                            this.setBoolean(\"showLineNumbers\", e.target.checked)\r\n                                        }\r\n                                        color=\"primary\"\r\n                                    />\r\n                                    Show Line Numbers\r\n                                </label>\r\n                            </p>\r\n                        </div>\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Editor;\r\n"]},"metadata":{},"sourceType":"module"}