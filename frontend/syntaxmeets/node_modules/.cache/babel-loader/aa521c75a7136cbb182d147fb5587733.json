{"ast":null,"code":"ace.define(\"ace/snippets/lsl\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  exports.snippetText = \"snippet @\\n\\\r\n\t@${1:label};\\n\\\r\nsnippet CAMERA_ACTIVE\\n\\\r\n\tCAMERA_ACTIVE, ${1:integer isActive}, $0\\n\\\r\nsnippet CAMERA_BEHINDNESS_ANGLE\\n\\\r\n\tCAMERA_BEHINDNESS_ANGLE, ${1:float degrees}, $0\\n\\\r\nsnippet CAMERA_BEHINDNESS_LAG\\n\\\r\n\tCAMERA_BEHINDNESS_LAG, ${1:float seconds}, $0\\n\\\r\nsnippet CAMERA_DISTANCE\\n\\\r\n\tCAMERA_DISTANCE, ${1:float meters}, $0\\n\\\r\nsnippet CAMERA_FOCUS\\n\\\r\n\tCAMERA_FOCUS, ${1:vector position}, $0\\n\\\r\nsnippet CAMERA_FOCUS_LAG\\n\\\r\n\tCAMERA_FOCUS_LAG, ${1:float seconds}, $0\\n\\\r\nsnippet CAMERA_FOCUS_LOCKED\\n\\\r\n\tCAMERA_FOCUS_LOCKED, ${1:integer isLocked}, $0\\n\\\r\nsnippet CAMERA_FOCUS_OFFSET\\n\\\r\n\tCAMERA_FOCUS_OFFSET, ${1:vector meters}, $0\\n\\\r\nsnippet CAMERA_FOCUS_THRESHOLD\\n\\\r\n\tCAMERA_FOCUS_THRESHOLD, ${1:float meters}, $0\\n\\\r\nsnippet CAMERA_PITCH\\n\\\r\n\tCAMERA_PITCH, ${1:float degrees}, $0\\n\\\r\nsnippet CAMERA_POSITION\\n\\\r\n\tCAMERA_POSITION, ${1:vector position}, $0\\n\\\r\nsnippet CAMERA_POSITION_LAG\\n\\\r\n\tCAMERA_POSITION_LAG, ${1:float seconds}, $0\\n\\\r\nsnippet CAMERA_POSITION_LOCKED\\n\\\r\n\tCAMERA_POSITION_LOCKED, ${1:integer isLocked}, $0\\n\\\r\nsnippet CAMERA_POSITION_THRESHOLD\\n\\\r\n\tCAMERA_POSITION_THRESHOLD, ${1:float meters}, $0\\n\\\r\nsnippet CHARACTER_AVOIDANCE_MODE\\n\\\r\n\tCHARACTER_AVOIDANCE_MODE, ${1:integer flags}, $0\\n\\\r\nsnippet CHARACTER_DESIRED_SPEED\\n\\\r\n\tCHARACTER_DESIRED_SPEED, ${1:float speed}, $0\\n\\\r\nsnippet CHARACTER_DESIRED_TURN_SPEED\\n\\\r\n\tCHARACTER_DESIRED_TURN_SPEED, ${1:float speed}, $0\\n\\\r\nsnippet CHARACTER_LENGTH\\n\\\r\n\tCHARACTER_LENGTH, ${1:float length}, $0\\n\\\r\nsnippet CHARACTER_MAX_TURN_RADIUS\\n\\\r\n\tCHARACTER_MAX_TURN_RADIUS, ${1:float radius}, $0\\n\\\r\nsnippet CHARACTER_ORIENTATION\\n\\\r\n\tCHARACTER_ORIENTATION, ${1:integer orientation}, $0\\n\\\r\nsnippet CHARACTER_RADIUS\\n\\\r\n\tCHARACTER_RADIUS, ${1:float radius}, $0\\n\\\r\nsnippet CHARACTER_STAY_WITHIN_PARCEL\\n\\\r\n\tCHARACTER_STAY_WITHIN_PARCEL, ${1:boolean stay}, $0\\n\\\r\nsnippet CHARACTER_TYPE\\n\\\r\n\tCHARACTER_TYPE, ${1:integer type}, $0\\n\\\r\nsnippet HTTP_BODY_MAXLENGTH\\n\\\r\n\tHTTP_BODY_MAXLENGTH, ${1:integer length}, $0\\n\\\r\nsnippet HTTP_CUSTOM_HEADER\\n\\\r\n\tHTTP_CUSTOM_HEADER, ${1:string name}, ${2:string value}, $0\\n\\\r\nsnippet HTTP_METHOD\\n\\\r\n\tHTTP_METHOD, ${1:string method}, $0\\n\\\r\nsnippet HTTP_MIMETYPE\\n\\\r\n\tHTTP_MIMETYPE, ${1:string mimeType}, $0\\n\\\r\nsnippet HTTP_PRAGMA_NO_CACHE\\n\\\r\n\tHTTP_PRAGMA_NO_CACHE, ${1:integer send_header}, $0\\n\\\r\nsnippet HTTP_VERBOSE_THROTTLE\\n\\\r\n\tHTTP_VERBOSE_THROTTLE, ${1:integer noisy}, $0\\n\\\r\nsnippet HTTP_VERIFY_CERT\\n\\\r\n\tHTTP_VERIFY_CERT, ${1:integer verify}, $0\\n\\\r\nsnippet RC_DATA_FLAGS\\n\\\r\n\tRC_DATA_FLAGS, ${1:integer flags}, $0\\n\\\r\nsnippet RC_DETECT_PHANTOM\\n\\\r\n\tRC_DETECT_PHANTOM, ${1:integer dectedPhantom}, $0\\n\\\r\nsnippet RC_MAX_HITS\\n\\\r\n\tRC_MAX_HITS, ${1:integer maxHits}, $0\\n\\\r\nsnippet RC_REJECT_TYPES\\n\\\r\n\tRC_REJECT_TYPES, ${1:integer filterMask}, $0\\n\\\r\nsnippet at_rot_target\\n\\\r\n\tat_rot_target(${1:integer handle}, ${2:rotation targetrot}, ${3:rotation ourrot})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet at_target\\n\\\r\n\tat_target(${1:integer tnum}, ${2:vector targetpos}, ${3:vector ourpos})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet attach\\n\\\r\n\tattach(${1:key id})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet changed\\n\\\r\n\tchanged(${1:integer change})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet collision\\n\\\r\n\tcollision(${1:integer index})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet collision_end\\n\\\r\n\tcollision_end(${1:integer index})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet collision_start\\n\\\r\n\tcollision_start(${1:integer index})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet control\\n\\\r\n\tcontrol(${1:key id}, ${2:integer level}, ${3:integer edge})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet dataserver\\n\\\r\n\tdataserver(${1:key query_id}, ${2:string data})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet do\\n\\\r\n\tdo\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\n\twhile (${1:condition});\\n\\\r\nsnippet else\\n\\\r\n\telse\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet email\\n\\\r\n\temail(${1:string time}, ${2:string address}, ${3:string subject}, ${4:string message}, ${5:integer num_left})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet experience_permissions\\n\\\r\n\texperience_permissions(${1:key agent_id})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet experience_permissions_denied\\n\\\r\n\texperience_permissions_denied(${1:key agent_id}, ${2:integer reason})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet for\\n\\\r\n\tfor (${1:start}; ${3:condition}; ${3:step})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet http_request\\n\\\r\n\thttp_request(${1:key request_id}, ${2:string method}, ${3:string body})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet http_response\\n\\\r\n\thttp_response(${1:key request_id}, ${2:integer status}, ${3:list metadata}, ${4:string body})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet if\\n\\\r\n\tif (${1:condition})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet jump\\n\\\r\n\tjump ${1:label};\\n\\\r\nsnippet land_collision\\n\\\r\n\tland_collision(${1:vector pos})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet land_collision_end\\n\\\r\n\tland_collision_end(${1:vector pos})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet land_collision_start\\n\\\r\n\tland_collision_start(${1:vector pos})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet link_message\\n\\\r\n\tlink_message(${1:integer sender_num}, ${2:integer num}, ${3:string str}, ${4:key id})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet listen\\n\\\r\n\tlisten(${1:integer channel}, ${2:string name}, ${3:key id}, ${4:string message})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet llAbs\\n\\\r\n\tllAbs(${1:integer val})\\n\\\r\nsnippet llAcos\\n\\\r\n\tllAcos(${1:float val})\\n\\\r\nsnippet llAddToLandBanList\\n\\\r\n\tllAddToLandBanList(${1:key agent}, ${2:float hours});\\n\\\r\n\t$0\\n\\\r\nsnippet llAddToLandPassList\\n\\\r\n\tllAddToLandPassList(${1:key agent}, ${2:float hours});\\n\\\r\n\t$0\\n\\\r\nsnippet llAdjustSoundVolume\\n\\\r\n\tllAdjustSoundVolume(${1:float volume});\\n\\\r\n\t$0\\n\\\r\nsnippet llAgentInExperience\\n\\\r\n\tllAgentInExperience(${1:key agent})\\n\\\r\nsnippet llAllowInventoryDrop\\n\\\r\n\tllAllowInventoryDrop(${1:integer add});\\n\\\r\n\t$0\\n\\\r\nsnippet llAngleBetween\\n\\\r\n\tllAngleBetween(${1:rotation a}, ${2:rotation b})\\n\\\r\nsnippet llApplyImpulse\\n\\\r\n\tllApplyImpulse(${1:vector force}, ${2:integer local});\\n\\\r\n\t$0\\n\\\r\nsnippet llApplyRotationalImpulse\\n\\\r\n\tllApplyRotationalImpulse(${1:vector force}, ${2:integer local});\\n\\\r\n\t$0\\n\\\r\nsnippet llAsin\\n\\\r\n\tllAsin(${1:float val})\\n\\\r\nsnippet llAtan2\\n\\\r\n\tllAtan2(${1:float y}, ${2:float x})\\n\\\r\nsnippet llAttachToAvatar\\n\\\r\n\tllAttachToAvatar(${1:integer attach_point});\\n\\\r\n\t$0\\n\\\r\nsnippet llAttachToAvatarTemp\\n\\\r\n\tllAttachToAvatarTemp(${1:integer attach_point});\\n\\\r\n\t$0\\n\\\r\nsnippet llAvatarOnLinkSitTarget\\n\\\r\n\tllAvatarOnLinkSitTarget(${1:integer link})\\n\\\r\nsnippet llAvatarOnSitTarget\\n\\\r\n\tllAvatarOnSitTarget()\\n\\\r\nsnippet llAxes2Rot\\n\\\r\n\tllAxes2Rot(${1:vector fwd}, ${2:vector left}, ${3:vector up})\\n\\\r\nsnippet llAxisAngle2Rot\\n\\\r\n\tllAxisAngle2Rot(${1:vector axis}, ${2:float angle})\\n\\\r\nsnippet llBase64ToInteger\\n\\\r\n\tllBase64ToInteger(${1:string str})\\n\\\r\nsnippet llBase64ToString\\n\\\r\n\tllBase64ToString(${1:string str})\\n\\\r\nsnippet llBreakAllLinks\\n\\\r\n\tllBreakAllLinks();\\n\\\r\n\t$0\\n\\\r\nsnippet llBreakLink\\n\\\r\n\tllBreakLink(${1:integer link});\\n\\\r\n\t$0\\n\\\r\nsnippet llCastRay\\n\\\r\n\tllCastRay(${1:vector start}, ${2:vector end}, ${3:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llCeil\\n\\\r\n\tllCeil(${1:float val})\\n\\\r\nsnippet llClearCameraParams\\n\\\r\n\tllClearCameraParams();\\n\\\r\n\t$0\\n\\\r\nsnippet llClearLinkMedia\\n\\\r\n\tllClearLinkMedia(${1:integer link}, ${2:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llClearPrimMedia\\n\\\r\n\tllClearPrimMedia(${1:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llCloseRemoteDataChannel\\n\\\r\n\tllCloseRemoteDataChannel(${1:key channel});\\n\\\r\n\t$0\\n\\\r\nsnippet llCollisionFilter\\n\\\r\n\tllCollisionFilter(${1:string name}, ${2:key id}, ${3:integer accept});\\n\\\r\n\t$0\\n\\\r\nsnippet llCollisionSound\\n\\\r\n\tllCollisionSound(${1:string impact_sound}, ${2:float impact_volume});\\n\\\r\n\t$0\\n\\\r\nsnippet llCos\\n\\\r\n\tllCos(${1:float theta})\\n\\\r\nsnippet llCreateCharacter\\n\\\r\n\tllCreateCharacter(${1:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llCreateKeyValue\\n\\\r\n\tllCreateKeyValue(${1:string k})\\n\\\r\nsnippet llCreateLink\\n\\\r\n\tllCreateLink(${1:key target}, ${2:integer parent});\\n\\\r\n\t$0\\n\\\r\nsnippet llCSV2List\\n\\\r\n\tllCSV2List(${1:string src})\\n\\\r\nsnippet llDataSizeKeyValue\\n\\\r\n\tllDataSizeKeyValue()\\n\\\r\nsnippet llDeleteCharacter\\n\\\r\n\tllDeleteCharacter();\\n\\\r\n\t$0\\n\\\r\nsnippet llDeleteKeyValue\\n\\\r\n\tllDeleteKeyValue(${1:string k})\\n\\\r\nsnippet llDeleteSubList\\n\\\r\n\tllDeleteSubList(${1:list src}, ${2:integer start}, ${3:integer end})\\n\\\r\nsnippet llDeleteSubString\\n\\\r\n\tllDeleteSubString(${1:string src}, ${2:integer start}, ${3:integer end})\\n\\\r\nsnippet llDetachFromAvatar\\n\\\r\n\tllDetachFromAvatar();\\n\\\r\n\t$0\\n\\\r\nsnippet llDetectedGrab\\n\\\r\n\tllDetectedGrab(${1:integer number})\\n\\\r\nsnippet llDetectedGroup\\n\\\r\n\tllDetectedGroup(${1:integer number})\\n\\\r\nsnippet llDetectedKey\\n\\\r\n\tllDetectedKey(${1:integer number})\\n\\\r\nsnippet llDetectedLinkNumber\\n\\\r\n\tllDetectedLinkNumber(${1:integer number})\\n\\\r\nsnippet llDetectedName\\n\\\r\n\tllDetectedName(${1:integer number})\\n\\\r\nsnippet llDetectedOwner\\n\\\r\n\tllDetectedOwner(${1:integer number})\\n\\\r\nsnippet llDetectedPos\\n\\\r\n\tllDetectedPosl(${1:integer number})\\n\\\r\nsnippet llDetectedRot\\n\\\r\n\tllDetectedRot(${1:integer number})\\n\\\r\nsnippet llDetectedTouchBinormal\\n\\\r\n\tllDetectedTouchBinormal(${1:integer number})\\n\\\r\nsnippet llDetectedTouchFace\\n\\\r\n\tllDetectedTouchFace(${1:integer number})\\n\\\r\nsnippet llDetectedTouchNormal\\n\\\r\n\tllDetectedTouchNormal(${1:integer number})\\n\\\r\nsnippet llDetectedTouchPos\\n\\\r\n\tllDetectedTouchPos(${1:integer number})\\n\\\r\nsnippet llDetectedTouchST\\n\\\r\n\tllDetectedTouchST(${1:integer number})\\n\\\r\nsnippet llDetectedTouchUV\\n\\\r\n\tllDetectedTouchUV(${1:integer number})\\n\\\r\nsnippet llDetectedType\\n\\\r\n\tllDetectedType(${1:integer number})\\n\\\r\nsnippet llDetectedVel\\n\\\r\n\tllDetectedVel(${1:integer number})\\n\\\r\nsnippet llDialog\\n\\\r\n\tllDialog(${1:key agent}, ${2:string message}, ${3:list buttons}, ${4:integer channel});\\n\\\r\n\t$0\\n\\\r\nsnippet llDie\\n\\\r\n\tllDie();\\n\\\r\n\t$0\\n\\\r\nsnippet llDumpList2String\\n\\\r\n\tllDumpList2String(${1:list src}, ${2:string separator})\\n\\\r\nsnippet llEdgeOfWorld\\n\\\r\n\tllEdgeOfWorld(${1:vector pos}, ${2:vector dir})\\n\\\r\nsnippet llEjectFromLand\\n\\\r\n\tllEjectFromLand(${1:key agent});\\n\\\r\n\t$0\\n\\\r\nsnippet llEmail\\n\\\r\n\tllEmail(${1:string address}, ${2:string subject}, ${3:string message});\\n\\\r\n\t$0\\n\\\r\nsnippet llEscapeURL\\n\\\r\n\tllEscapeURL(${1:string url})\\n\\\r\nsnippet llEuler2Rot\\n\\\r\n\tllEuler2Rot(${1:vector v})\\n\\\r\nsnippet llExecCharacterCmd\\n\\\r\n\tllExecCharacterCmd(${1:integer command}, ${2:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llEvade\\n\\\r\n\tllEvade(${1:key target}, ${2:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llFabs\\n\\\r\n\tllFabs(${1:float val})\\n\\\r\nsnippet llFleeFrom\\n\\\r\n\tllFleeFrom(${1:vector position}, ${2:float distance}, ${3:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llFloor\\n\\\r\n\tllFloor(${1:float val})\\n\\\r\nsnippet llForceMouselook\\n\\\r\n\tllForceMouselook(${1:integer mouselook});\\n\\\r\n\t$0\\n\\\r\nsnippet llFrand\\n\\\r\n\tllFrand(${1:float mag})\\n\\\r\nsnippet llGenerateKey\\n\\\r\n\tllGenerateKey()\\n\\\r\nsnippet llGetAccel\\n\\\r\n\tllGetAccel()\\n\\\r\nsnippet llGetAgentInfo\\n\\\r\n\tllGetAgentInfo(${1:key id})\\n\\\r\nsnippet llGetAgentLanguage\\n\\\r\n\tllGetAgentLanguage(${1:key agent})\\n\\\r\nsnippet llGetAgentList\\n\\\r\n\tllGetAgentList(${1:integer scope}, ${2:list options})\\n\\\r\nsnippet llGetAgentSize\\n\\\r\n\tllGetAgentSize(${1:key agent})\\n\\\r\nsnippet llGetAlpha\\n\\\r\n\tllGetAlpha(${1:integer face})\\n\\\r\nsnippet llGetAndResetTime\\n\\\r\n\tllGetAndResetTime()\\n\\\r\nsnippet llGetAnimation\\n\\\r\n\tllGetAnimation(${1:key id})\\n\\\r\nsnippet llGetAnimationList\\n\\\r\n\tllGetAnimationList(${1:key agent})\\n\\\r\nsnippet llGetAnimationOverride\\n\\\r\n\tllGetAnimationOverride(${1:string anim_state})\\n\\\r\nsnippet llGetAttached\\n\\\r\n\tllGetAttached()\\n\\\r\nsnippet llGetAttachedList\\n\\\r\n\tllGetAttachedList(${1:key id})\\n\\\r\nsnippet llGetBoundingBox\\n\\\r\n\tllGetBoundingBox(${1:key object})\\n\\\r\nsnippet llGetCameraPos\\n\\\r\n\tllGetCameraPos()\\n\\\r\nsnippet llGetCameraRot\\n\\\r\n\tllGetCameraRot()\\n\\\r\nsnippet llGetCenterOfMass\\n\\\r\n\tllGetCenterOfMass()\\n\\\r\nsnippet llGetClosestNavPoint\\n\\\r\n\tllGetClosestNavPoint(${1:vector point}, ${2:list options})\\n\\\r\nsnippet llGetColor\\n\\\r\n\tllGetColor(${1:integer face})\\n\\\r\nsnippet llGetCreator\\n\\\r\n\tllGetCreator()\\n\\\r\nsnippet llGetDate\\n\\\r\n\tllGetDate()\\n\\\r\nsnippet llGetDisplayName\\n\\\r\n\tllGetDisplayName(${1:key id})\\n\\\r\nsnippet llGetEnergy\\n\\\r\n\tllGetEnergy()\\n\\\r\nsnippet llGetEnv\\n\\\r\n\tllGetEnv(${1:string name})\\n\\\r\nsnippet llGetExperienceDetails\\n\\\r\n\tllGetExperienceDetails(${1:key experience_id})\\n\\\r\nsnippet llGetExperienceErrorMessage\\n\\\r\n\tllGetExperienceErrorMessage(${1:integer error})\\n\\\r\nsnippet llGetForce\\n\\\r\n\tllGetForce()\\n\\\r\nsnippet llGetFreeMemory\\n\\\r\n\tllGetFreeMemory()\\n\\\r\nsnippet llGetFreeURLs\\n\\\r\n\tllGetFreeURLs()\\n\\\r\nsnippet llGetGeometricCenter\\n\\\r\n\tllGetGeometricCenter()\\n\\\r\nsnippet llGetGMTclock\\n\\\r\n\tllGetGMTclock()\\n\\\r\nsnippet llGetHTTPHeader\\n\\\r\n\tllGetHTTPHeader(${1:key request_id}, ${2:string header})\\n\\\r\nsnippet llGetInventoryCreator\\n\\\r\n\tllGetInventoryCreator(${1:string item})\\n\\\r\nsnippet llGetInventoryKey\\n\\\r\n\tllGetInventoryKey(${1:string name})\\n\\\r\nsnippet llGetInventoryName\\n\\\r\n\tllGetInventoryName(${1:integer type}, ${2:integer number})\\n\\\r\nsnippet llGetInventoryNumber\\n\\\r\n\tllGetInventoryNumber(${1:integer type})\\n\\\r\nsnippet llGetInventoryPermMask\\n\\\r\n\tllGetInventoryPermMask(${1:string item}, ${2:integer mask})\\n\\\r\nsnippet llGetInventoryType\\n\\\r\n\tllGetInventoryType(${1:string name})\\n\\\r\nsnippet llGetKey\\n\\\r\n\tllGetKey()\\n\\\r\nsnippet llGetLandOwnerAt\\n\\\r\n\tllGetLandOwnerAt(${1:vector pos})\\n\\\r\nsnippet llGetLinkKey\\n\\\r\n\tllGetLinkKey(${1:integer link})\\n\\\r\nsnippet llGetLinkMedia\\n\\\r\n\tllGetLinkMedia(${1:integer link}, ${2:integer face}, ${3:list params})\\n\\\r\nsnippet llGetLinkName\\n\\\r\n\tllGetLinkName(${1:integer link})\\n\\\r\nsnippet llGetLinkNumber\\n\\\r\n\tllGetLinkNumber()\\n\\\r\nsnippet llGetLinkNumberOfSides\\n\\\r\n\tllGetLinkNumberOfSides(${1:integer link})\\n\\\r\nsnippet llGetLinkPrimitiveParams\\n\\\r\n\tllGetLinkPrimitiveParams(${1:integer link}, ${2:list params})\\n\\\r\nsnippet llGetListEntryType\\n\\\r\n\tllGetListEntryType(${1:list src}, ${2:integer index})\\n\\\r\nsnippet llGetListLength\\n\\\r\n\tllGetListLength(${1:list src})\\n\\\r\nsnippet llGetLocalPos\\n\\\r\n\tllGetLocalPos()\\n\\\r\nsnippet llGetLocalRot\\n\\\r\n\tllGetLocalRot()\\n\\\r\nsnippet llGetMass\\n\\\r\n\tllGetMass()\\n\\\r\nsnippet llGetMassMKS\\n\\\r\n\tllGetMassMKS()\\n\\\r\nsnippet llGetMaxScaleFactor\\n\\\r\n\tllGetMaxScaleFactor()\\n\\\r\nsnippet llGetMemoryLimit\\n\\\r\n\tllGetMemoryLimit()\\n\\\r\nsnippet llGetMinScaleFactor\\n\\\r\n\tllGetMinScaleFactor()\\n\\\r\nsnippet llGetNextEmail\\n\\\r\n\tllGetNextEmail(${1:string address}, ${2:string subject});\\n\\\r\n\t$0\\n\\\r\nsnippet llGetNotecardLine\\n\\\r\n\tllGetNotecardLine(${1:string name}, ${2:integer line})\\n\\\r\nsnippet llGetNumberOfNotecardLines\\n\\\r\n\tllGetNumberOfNotecardLines(${1:string name})\\n\\\r\nsnippet llGetNumberOfPrims\\n\\\r\n\tllGetNumberOfPrims()\\n\\\r\nsnippet llGetNumberOfSides\\n\\\r\n\tllGetNumberOfSides()\\n\\\r\nsnippet llGetObjectDesc\\n\\\r\n\tllGetObjectDesc()\\n\\\r\nsnippet llGetObjectDetails\\n\\\r\n\tllGetObjectDetails(${1:key id}, ${2:list params})\\n\\\r\nsnippet llGetObjectMass\\n\\\r\n\tllGetObjectMass(${1:key id})\\n\\\r\nsnippet llGetObjectName\\n\\\r\n\tllGetObjectName()\\n\\\r\nsnippet llGetObjectPermMask\\n\\\r\n\tllGetObjectPermMask(${1:integer mask})\\n\\\r\nsnippet llGetObjectPrimCount\\n\\\r\n\tllGetObjectPrimCount(${1:key prim})\\n\\\r\nsnippet llGetOmega\\n\\\r\n\tllGetOmega()\\n\\\r\nsnippet llGetOwner\\n\\\r\n\tllGetOwner()\\n\\\r\nsnippet llGetOwnerKey\\n\\\r\n\tllGetOwnerKey(${1:key id})\\n\\\r\nsnippet llGetParcelDetails\\n\\\r\n\tllGetParcelDetails(${1:vector pos}, ${2:list params})\\n\\\r\nsnippet llGetParcelFlags\\n\\\r\n\tllGetParcelFlags(${1:vector pos})\\n\\\r\nsnippet llGetParcelMaxPrims\\n\\\r\n\tllGetParcelMaxPrims(${1:vector pos}, ${2:integer sim_wide})\\n\\\r\nsnippet llGetParcelMusicURL\\n\\\r\n\tllGetParcelMusicURL()\\n\\\r\nsnippet llGetParcelPrimCount\\n\\\r\n\tllGetParcelPrimCount(${1:vector pos}, ${2:integer category}, ${3:integer sim_wide})\\n\\\r\nsnippet llGetParcelPrimOwners\\n\\\r\n\tllGetParcelPrimOwners(${1:vector pos})\\n\\\r\nsnippet llGetPermissions\\n\\\r\n\tllGetPermissions()\\n\\\r\nsnippet llGetPermissionsKey\\n\\\r\n\tllGetPermissionsKey()\\n\\\r\nsnippet llGetPhysicsMaterial\\n\\\r\n\tllGetPhysicsMaterial()\\n\\\r\nsnippet llGetPos\\n\\\r\n\tllGetPos()\\n\\\r\nsnippet llGetPrimitiveParams\\n\\\r\n\tllGetPrimitiveParams(${1:list params})\\n\\\r\nsnippet llGetPrimMediaParams\\n\\\r\n\tllGetPrimMediaParams(${1:integer face}, ${2:list params})\\n\\\r\nsnippet llGetRegionAgentCount\\n\\\r\n\tllGetRegionAgentCount()\\n\\\r\nsnippet llGetRegionCorner\\n\\\r\n\tllGetRegionCorner()\\n\\\r\nsnippet llGetRegionFlags\\n\\\r\n\tllGetRegionFlags()\\n\\\r\nsnippet llGetRegionFPS\\n\\\r\n\tllGetRegionFPS()\\n\\\r\nsnippet llGetRegionName\\n\\\r\n\tllGetRegionName()\\n\\\r\nsnippet llGetRegionTimeDilation\\n\\\r\n\tllGetRegionTimeDilation()\\n\\\r\nsnippet llGetRootPosition\\n\\\r\n\tllGetRootPosition()\\n\\\r\nsnippet llGetRootRotation\\n\\\r\n\tllGetRootRotation()\\n\\\r\nsnippet llGetRot\\n\\\r\n\tllGetRot()\\n\\\r\nsnippet llGetScale\\n\\\r\n\tllGetScale()\\n\\\r\nsnippet llGetScriptName\\n\\\r\n\tllGetScriptName()\\n\\\r\nsnippet llGetScriptState\\n\\\r\n\tllGetScriptState(${1:string script})\\n\\\r\nsnippet llGetSimStats\\n\\\r\n\tllGetSimStats(${1:integer stat_type})\\n\\\r\nsnippet llGetSimulatorHostname\\n\\\r\n\tllGetSimulatorHostname()\\n\\\r\nsnippet llGetSPMaxMemory\\n\\\r\n\tllGetSPMaxMemory()\\n\\\r\nsnippet llGetStartParameter\\n\\\r\n\tllGetStartParameter()\\n\\\r\nsnippet llGetStaticPath\\n\\\r\n\tllGetStaticPath(${1:vector start}, ${2:vector end}, ${3:float radius}, ${4:list params})\\n\\\r\nsnippet llGetStatus\\n\\\r\n\tllGetStatus(${1:integer status})\\n\\\r\nsnippet llGetSubString\\n\\\r\n\tllGetSubString(${1:string src}, ${2:integer start}, ${3:integer end})\\n\\\r\nsnippet llGetSunDirection\\n\\\r\n\tllGetSunDirection()\\n\\\r\nsnippet llGetTexture\\n\\\r\n\tllGetTexture(${1:integer face})\\n\\\r\nsnippet llGetTextureOffset\\n\\\r\n\tllGetTextureOffset(${1:integer face})\\n\\\r\nsnippet llGetTextureRot\\n\\\r\n\tllGetTextureRot(${1:integer face})\\n\\\r\nsnippet llGetTextureScale\\n\\\r\n\tllGetTextureScale(${1:integer face})\\n\\\r\nsnippet llGetTime\\n\\\r\n\tllGetTime()\\n\\\r\nsnippet llGetTimeOfDay\\n\\\r\n\tllGetTimeOfDay()\\n\\\r\nsnippet llGetTimestamp\\n\\\r\n\tllGetTimestamp()\\n\\\r\nsnippet llGetTorque\\n\\\r\n\tllGetTorque()\\n\\\r\nsnippet llGetUnixTime\\n\\\r\n\tllGetUnixTime()\\n\\\r\nsnippet llGetUsedMemory\\n\\\r\n\tllGetUsedMemory()\\n\\\r\nsnippet llGetUsername\\n\\\r\n\tllGetUsername(${1:key id})\\n\\\r\nsnippet llGetVel\\n\\\r\n\tllGetVel()\\n\\\r\nsnippet llGetWallclock\\n\\\r\n\tllGetWallclock()\\n\\\r\nsnippet llGiveInventory\\n\\\r\n\tllGiveInventory(${1:key destination}, ${2:string inventory});\\n\\\r\n\t$0\\n\\\r\nsnippet llGiveInventoryList\\n\\\r\n\tllGiveInventoryList(${1:key target}, ${2:string folder}, ${3:list inventory});\\n\\\r\n\t$0\\n\\\r\nsnippet llGiveMoney\\n\\\r\n\tllGiveMoney(${1:key destination}, ${2:integer amount})\\n\\\r\nsnippet llGround\\n\\\r\n\tllGround(${1:vector offset})\\n\\\r\nsnippet llGroundContour\\n\\\r\n\tllGroundContour(${1:vector offset})\\n\\\r\nsnippet llGroundNormal\\n\\\r\n\tllGroundNormal(${1:vector offset})\\n\\\r\nsnippet llGroundRepel\\n\\\r\n\tllGroundRepel(${1:float height}, ${2:integer water}, ${3:float tau});\\n\\\r\n\t$0\\n\\\r\nsnippet llGroundSlope\\n\\\r\n\tllGroundSlope(${1:vector offset})\\n\\\r\nsnippet llHTTPRequest\\n\\\r\n\tllHTTPRequest(${1:string url}, ${2:list parameters}, ${3:string body})\\n\\\r\nsnippet llHTTPResponse\\n\\\r\n\tllHTTPResponse(${1:key request_id}, ${2:integer status}, ${3:string body});\\n\\\r\n\t$0\\n\\\r\nsnippet llInsertString\\n\\\r\n\tllInsertString(${1:string dst}, ${2:integer pos}, ${3:string src})\\n\\\r\nsnippet llInstantMessage\\n\\\r\n\tllInstantMessage(${1:key user}, ${2:string message});\\n\\\r\n\t$0\\n\\\r\nsnippet llIntegerToBase64\\n\\\r\n\tllIntegerToBase64(${1:integer number})\\n\\\r\nsnippet llJson2List\\n\\\r\n\tllJson2List(${1:string json})\\n\\\r\nsnippet llJsonGetValue\\n\\\r\n\tllJsonGetValue(${1:string json}, ${2:list specifiers})\\n\\\r\nsnippet llJsonSetValue\\n\\\r\n\tllJsonSetValue(${1:string json}, ${2:list specifiers}, ${3:string newValue})\\n\\\r\nsnippet llJsonValueType\\n\\\r\n\tllJsonValueType(${1:string json}, ${2:list specifiers})\\n\\\r\nsnippet llKey2Name\\n\\\r\n\tllKey2Name(${1:key id})\\n\\\r\nsnippet llKeyCountKeyValue\\n\\\r\n\tllKeyCountKeyValue()\\n\\\r\nsnippet llKeysKeyValue\\n\\\r\n\tllKeysKeyValue(${1:integer first}, ${2:integer count})\\n\\\r\nsnippet llLinkParticleSystem\\n\\\r\n\tllLinkParticleSystem(${1:integer link}, ${2:list rules});\\n\\\r\n\t$0\\n\\\r\nsnippet llLinkSitTarget\\n\\\r\n\tllLinkSitTarget(${1:integer link}, ${2:vector offset}, ${3:rotation rot});\\n\\\r\n\t$0\\n\\\r\nsnippet llList2CSV\\n\\\r\n\tllList2CSV(${1:list src})\\n\\\r\nsnippet llList2Float\\n\\\r\n\tllList2Float(${1:list src}, ${2:integer index})\\n\\\r\nsnippet llList2Integer\\n\\\r\n\tllList2Integer(${1:list src}, ${2:integer index})\\n\\\r\nsnippet llList2Json\\n\\\r\n\tllList2Json(${1:string type}, ${2:list values})\\n\\\r\nsnippet llList2Key\\n\\\r\n\tllList2Key(${1:list src}, ${2:integer index})\\n\\\r\nsnippet llList2List\\n\\\r\n\tllList2List(${1:list src}, ${2:integer start}, ${3:integer end})\\n\\\r\nsnippet llList2ListStrided\\n\\\r\n\tllList2ListStrided(${1:list src}, ${2:integer start}, ${3:integer end}, ${4:integer stride})\\n\\\r\nsnippet llList2Rot\\n\\\r\n\tllList2Rot(${1:list src}, ${2:integer index})\\n\\\r\nsnippet llList2String\\n\\\r\n\tllList2String(${1:list src}, ${2:integer index})\\n\\\r\nsnippet llList2Vector\\n\\\r\n\tllList2Vector(${1:list src}, ${2:integer index})\\n\\\r\nsnippet llListen\\n\\\r\n\tllListen(${1:integer channel}, ${2:string name}, ${3:key id}, ${4:string msg})\\n\\\r\nsnippet llListenControl\\n\\\r\n\tllListenControl(${1:integer handle}, ${2:integer active});\\n\\\r\n\t$0\\n\\\r\nsnippet llListenRemove\\n\\\r\n\tllListenRemove(${1:integer handle});\\n\\\r\n\t$0\\n\\\r\nsnippet llListFindList\\n\\\r\n\tllListFindList(${1:list src}, ${2:list test})\\n\\\r\nsnippet llListInsertList\\n\\\r\n\tllListInsertList(${1:list dest}, ${2:list src}, ${3:integer start})\\n\\\r\nsnippet llListRandomize\\n\\\r\n\tllListRandomize(${1:list src}, ${2:integer stride})\\n\\\r\nsnippet llListReplaceList\\n\\\r\n\tllListReplaceList(${1:list dest}, ${2:list src}, ${3:integer start}, ${4:integer end})\\n\\\r\nsnippet llListSort\\n\\\r\n\tllListSort(${1:list src}, ${2:integer stride}, ${3:integer ascending})\\n\\\r\nsnippet llListStatistics\\n\\\r\n\tllListStatistics(${1:integer operation}, ${2:list src})\\n\\\r\nsnippet llLoadURL\\n\\\r\n\tllLoadURL(${1:key agent}, ${2:string message}, ${3:string url});\\n\\\r\n\t$0\\n\\\r\nsnippet llLog\\n\\\r\n\tllLog(${1:float val})\\n\\\r\nsnippet llLog10\\n\\\r\n\tllLog10(${1:float val})\\n\\\r\nsnippet llLookAt\\n\\\r\n\tllLookAt(${1:vector target}, ${2:float strength}, ${3:float damping});\\n\\\r\n\t$0\\n\\\r\nsnippet llLoopSound\\n\\\r\n\tllLoopSound(${1:string sound}, ${2:float volume});\\n\\\r\n\t$0\\n\\\r\nsnippet llLoopSoundMaster\\n\\\r\n\tllLoopSoundMaster(${1:string sound}, ${2:float volume});\\n\\\r\n\t$0\\n\\\r\nsnippet llLoopSoundSlave\\n\\\r\n\tllLoopSoundSlave(${1:string sound}, ${2:float volume});\\n\\\r\n\t$0\\n\\\r\nsnippet llManageEstateAccess\\n\\\r\n\tllManageEstateAccess(${1:integer action}, ${2:key agent})\\n\\\r\nsnippet llMapDestination\\n\\\r\n\tllMapDestination(${1:string simname}, ${2:vector pos}, ${3:vector look_at});\\n\\\r\n\t$0\\n\\\r\nsnippet llMD5String\\n\\\r\n\tllMD5String(${1:string src}, ${2:integer nonce})\\n\\\r\nsnippet llMessageLinked\\n\\\r\n\tllMessageLinked(${1:integer link}, ${2:integer num}, ${3:string str}, ${4:key id});\\n\\\r\n\t$0\\n\\\r\nsnippet llMinEventDelay\\n\\\r\n\tllMinEventDelay(${1:float delay});\\n\\\r\n\t$0\\n\\\r\nsnippet llModifyLand\\n\\\r\n\tllModifyLand(${1:integer action}, ${2:integer brush});\\n\\\r\n\t$0\\n\\\r\nsnippet llModPow\\n\\\r\n\tllModPow(${1:integer a}, ${2:integer b}, ${3:integer c})\\n\\\r\nsnippet llMoveToTarget\\n\\\r\n\tllMoveToTarget(${1:vector target}, ${2:float tau});\\n\\\r\n\t$0\\n\\\r\nsnippet llNavigateTo\\n\\\r\n\tllNavigateTo(${1:vector pos}, ${2:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llOffsetTexture\\n\\\r\n\tllOffsetTexture(${1:float u}, ${2:float v}, ${3:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llOpenRemoteDataChannel\\n\\\r\n\tllOpenRemoteDataChannel();\\n\\\r\n\t$0\\n\\\r\nsnippet llOverMyLand\\n\\\r\n\tllOverMyLand(${1:key id})\\n\\\r\nsnippet llOwnerSay\\n\\\r\n\tllOwnerSay(${1:string msg});\\n\\\r\n\t$0\\n\\\r\nsnippet llParcelMediaCommandList\\n\\\r\n\tllParcelMediaCommandList(${1:list commandList});\\n\\\r\n\t$0\\n\\\r\nsnippet llParcelMediaQuery\\n\\\r\n\tllParcelMediaQuery(${1:list query})\\n\\\r\nsnippet llParseString2List\\n\\\r\n\tllParseString2List(${1:string src}, ${2:list separators}, ${3:list spacers})\\n\\\r\nsnippet llParseStringKeepNulls\\n\\\r\n\tllParseStringKeepNulls(${1:string src}, ${2:list separators}, ${3:list spacers})\\n\\\r\nsnippet llParticleSystem\\n\\\r\n\tllParticleSystem(${1:list rules});\\n\\\r\n\t$0\\n\\\r\nsnippet llPassCollisions\\n\\\r\n\tllPassCollisions(${1:integer pass});\\n\\\r\n\t$0\\n\\\r\nsnippet llPassTouches\\n\\\r\n\tllPassTouches(${1:integer pass});\\n\\\r\n\t$0\\n\\\r\nsnippet llPatrolPoints\\n\\\r\n\tllPatrolPoints(${1:list patrolPoints}, ${2:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llPlaySound\\n\\\r\n\tllPlaySound(${1:string sound}, ${2:float volume});\\n\\\r\n\t$0\\n\\\r\nsnippet llPlaySoundSlave\\n\\\r\n\tllPlaySoundSlave(${1:string sound}, ${2:float volume});\\n\\\r\n\t$0\\n\\\r\nsnippet llPow\\n\\\r\n\tllPow(${1:float base}, ${2:float exponent})\\n\\\r\nsnippet llPreloadSound\\n\\\r\n\tllPreloadSound(${1:string sound});\\n\\\r\n\t$0\\n\\\r\nsnippet llPursue\\n\\\r\n\tllPursue(${1:key target}, ${2:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llPushObject\\n\\\r\n\tllPushObject(${1:key target}, ${2:vector impulse}, ${3:vector ang_impulse}, ${4:integer local});\\n\\\r\n\t$0\\n\\\r\nsnippet llReadKeyValue\\n\\\r\n\tllReadKeyValue(${1:string k})\\n\\\r\nsnippet llRegionSay\\n\\\r\n\tllRegionSay(${1:integer channel}, ${2:string msg});\\n\\\r\n\t$0\\n\\\r\nsnippet llRegionSayTo\\n\\\r\n\tllRegionSayTo(${1:key target}, ${2:integer channel}, ${3:string msg});\\n\\\r\n\t$0\\n\\\r\nsnippet llReleaseControls\\n\\\r\n\tllReleaseControls();\\n\\\r\n\t$0\\n\\\r\nsnippet llReleaseURL\\n\\\r\n\tllReleaseURL(${1:string url});\\n\\\r\n\t$0\\n\\\r\nsnippet llRemoteDataReply\\n\\\r\n\tllRemoteDataReply(${1:key channel}, ${2:key message_id}, ${3:string sdata}, ${4:integer idata});\\n\\\r\n\t$0\\n\\\r\nsnippet llRemoteLoadScriptPin\\n\\\r\n\tllRemoteLoadScriptPin(${1:key target}, ${2:string name}, ${3:integer pin}, ${4:integer running}, ${5:integer start_param});\\n\\\r\n\t$0\\n\\\r\nsnippet llRemoveFromLandBanList\\n\\\r\n\tllRemoveFromLandBanList(${1:key agent});\\n\\\r\n\t$0\\n\\\r\nsnippet llRemoveFromLandPassList\\n\\\r\n\tllRemoveFromLandPassList(${1:key agent});\\n\\\r\n\t$0\\n\\\r\nsnippet llRemoveInventory\\n\\\r\n\tllRemoveInventory(${1:string item});\\n\\\r\n\t$0\\n\\\r\nsnippet llRemoveVehicleFlags\\n\\\r\n\tllRemoveVehicleFlags(${1:integer flags});\\n\\\r\n\t$0\\n\\\r\nsnippet llRequestAgentData\\n\\\r\n\tllRequestAgentData(${1:key id}, ${2:integer data})\\n\\\r\nsnippet llRequestDisplayName\\n\\\r\n\tllRequestDisplayName(${1:key id})\\n\\\r\nsnippet llRequestExperiencePermissions\\n\\\r\n\tllRequestExperiencePermissions(${1:key agent}, ${2:string name})\\n\\\r\nsnippet llRequestInventoryData\\n\\\r\n\tllRequestInventoryData(${1:string name})\\n\\\r\nsnippet llRequestPermissions\\n\\\r\n\tllRequestPermissions(${1:key agent}, ${2:integer permissions})\\n\\\r\nsnippet llRequestSecureURL\\n\\\r\n\tllRequestSecureURL()\\n\\\r\nsnippet llRequestSimulatorData\\n\\\r\n\tllRequestSimulatorData(${1:string region}, ${2:integer data})\\n\\\r\nsnippet llRequestURL\\n\\\r\n\tllRequestURL()\\n\\\r\nsnippet llRequestUsername\\n\\\r\n\tllRequestUsername(${1:key id})\\n\\\r\nsnippet llResetAnimationOverride\\n\\\r\n\tllResetAnimationOverride(${1:string anim_state});\\n\\\r\n\t$0\\n\\\r\nsnippet llResetLandBanList\\n\\\r\n\tllResetLandBanList();\\n\\\r\n\t$0\\n\\\r\nsnippet llResetLandPassList\\n\\\r\n\tllResetLandPassList();\\n\\\r\n\t$0\\n\\\r\nsnippet llResetOtherScript\\n\\\r\n\tllResetOtherScript(${1:string name});\\n\\\r\n\t$0\\n\\\r\nsnippet llResetScript\\n\\\r\n\tllResetScript();\\n\\\r\n\t$0\\n\\\r\nsnippet llResetTime\\n\\\r\n\tllResetTime();\\n\\\r\n\t$0\\n\\\r\nsnippet llReturnObjectsByID\\n\\\r\n\tllReturnObjectsByID(${1:list objects})\\n\\\r\nsnippet llReturnObjectsByOwner\\n\\\r\n\tllReturnObjectsByOwner(${1:key owner}, ${2:integer scope})\\n\\\r\nsnippet llRezAtRoot\\n\\\r\n\tllRezAtRoot(${1:string inventory}, ${2:vector position}, ${3:vector velocity}, ${4:rotation rot}, ${5:integer param});\\n\\\r\n\t$0\\n\\\r\nsnippet llRezObject\\n\\\r\n\tllRezObject(${1:string inventory}, ${2:vector pos}, ${3:vector vel}, ${4:rotation rot}, ${5:integer param});\\n\\\r\n\t$0\\n\\\r\nsnippet llRot2Angle\\n\\\r\n\tllRot2Angle(${1:rotation rot})\\n\\\r\nsnippet llRot2Axis\\n\\\r\n\tllRot2Axis(${1:rotation rot})\\n\\\r\nsnippet llRot2Euler\\n\\\r\n\tllRot2Euler(${1:rotation quat})\\n\\\r\nsnippet llRot2Fwd\\n\\\r\n\tllRot2Fwd(${1:rotation q})\\n\\\r\nsnippet llRot2Left\\n\\\r\n\tllRot2Left(${1:rotation q})\\n\\\r\nsnippet llRot2Up\\n\\\r\n\tllRot2Up(${1:rotation q})\\n\\\r\nsnippet llRotateTexture\\n\\\r\n\tllRotateTexture(${1:float angle}, ${2:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llRotBetween\\n\\\r\n\tllRotBetween(${1:vector start}, ${2:vector end})\\n\\\r\nsnippet llRotLookAt\\n\\\r\n\tllRotLookAt(${1:rotation target_direction}, ${2:float strength}, ${3:float damping});\\n\\\r\n\t$0\\n\\\r\nsnippet llRotTarget\\n\\\r\n\tllRotTarget(${1:rotation rot}, ${2:float error})\\n\\\r\nsnippet llRotTargetRemove\\n\\\r\n\tllRotTargetRemove(${1:integer handle});\\n\\\r\n\t$0\\n\\\r\nsnippet llRound\\n\\\r\n\tllRound(${1:float val})\\n\\\r\nsnippet llSameGroup\\n\\\r\n\tllSameGroup(${1:key group})\\n\\\r\nsnippet llSay\\n\\\r\n\tllSay(${1:integer channel}, ${2:string msg});\\n\\\r\n\t$0\\n\\\r\nsnippet llScaleByFactor\\n\\\r\n\tllScaleByFactor(${1:float scaling_factor})\\n\\\r\nsnippet llScaleTexture\\n\\\r\n\tllScaleTexture(${1:float u}, ${2:float v}, ${3:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llScriptDanger\\n\\\r\n\tllScriptDanger(${1:vector pos})\\n\\\r\nsnippet llScriptProfiler\\n\\\r\n\tllScriptProfiler(${1:integer flags});\\n\\\r\n\t$0\\n\\\r\nsnippet llSendRemoteData\\n\\\r\n\tllSendRemoteData(${1:key channel}, ${2:string dest}, ${3:integer idata}, ${4:string sdata})\\n\\\r\nsnippet llSensor\\n\\\r\n\tllSensor(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc});\\n\\\r\n\t$0\\n\\\r\nsnippet llSensorRepeat\\n\\\r\n\tllSensorRepeat(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc}, ${6:float rate});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetAlpha\\n\\\r\n\tllSetAlpha(${1:float alpha}, ${2:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetAngularVelocity\\n\\\r\n\tllSetAngularVelocity(${1:vector force}, ${2:integer local});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetAnimationOverride\\n\\\r\n\tllSetAnimationOverride(${1:string anim_state}, ${2:string anim})\\n\\\r\nsnippet llSetBuoyancy\\n\\\r\n\tllSetBuoyancy(${1:float buoyancy});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetCameraAtOffset\\n\\\r\n\tllSetCameraAtOffset(${1:vector offset});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetCameraEyeOffset\\n\\\r\n\tllSetCameraEyeOffset(${1:vector offset});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetCameraParams\\n\\\r\n\tllSetCameraParams(${1:list rules});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetClickAction\\n\\\r\n\tllSetClickAction(${1:integer action});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetColor\\n\\\r\n\tllSetColor(${1:vector color}, ${2:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetContentType\\n\\\r\n\tllSetContentType(${1:key request_id}, ${2:integer content_type});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetDamage\\n\\\r\n\tllSetDamage(${1:float damage});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetForce\\n\\\r\n\tllSetForce(${1:vector force}, ${2:integer local});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetForceAndTorque\\n\\\r\n\tllSetForceAndTorque(${1:vector force}, ${2:vector torque}, ${3:integer local});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetHoverHeight\\n\\\r\n\tllSetHoverHeight(${1:float height}, ${2:integer water}, ${3:float tau});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetKeyframedMotion\\n\\\r\n\tllSetKeyframedMotion(${1:list keyframes}, ${2:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLinkAlpha\\n\\\r\n\tllSetLinkAlpha(${1:integer link}, ${2:float alpha}, ${3:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLinkCamera\\n\\\r\n\tllSetLinkCamera(${1:integer link}, ${2:vector eye}, ${3:vector at});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLinkColor\\n\\\r\n\tllSetLinkColor(${1:integer link}, ${2:vector color}, ${3:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLinkMedia\\n\\\r\n\tllSetLinkMedia(${1:integer link}, ${2:integer face}, ${3:list params});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLinkPrimitiveParams\\n\\\r\n\tllSetLinkPrimitiveParams(${1:integer link}, ${2:list rules});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLinkPrimitiveParamsFast\\n\\\r\n\tllSetLinkPrimitiveParamsFast(${1:integer link}, ${2:list rules});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLinkTexture\\n\\\r\n\tllSetLinkTexture(${1:integer link}, ${2:string texture}, ${3:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLinkTextureAnim\\n\\\r\n\tllSetLinkTextureAnim(${1:integer link}, ${2:integer mode}, ${3:integer face}, ${4:integer sizex}, ${5:integer sizey}, ${6:float start}, ${7:float length}, ${8:float rate});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLocalRot\\n\\\r\n\tllSetLocalRot(${1:rotation rot});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetMemoryLimit\\n\\\r\n\tllSetMemoryLimit(${1:integer limit})\\n\\\r\nsnippet llSetObjectDesc\\n\\\r\n\tllSetObjectDesc(${1:string description});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetObjectName\\n\\\r\n\tllSetObjectName(${1:string name});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetParcelMusicURL\\n\\\r\n\tllSetParcelMusicURL(${1:string url});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetPayPrice\\n\\\r\n\tllSetPayPrice(${1:integer price}, [${2:integer price_button_a}, ${3:integer price_button_b}, ${4:integer price_button_c}, ${5:integer price_button_d}]);\\n\\\r\n\t$0\\n\\\r\nsnippet llSetPhysicsMaterial\\n\\\r\n\tllSetPhysicsMaterial(${1:integer mask}, ${2:float gravity_multiplier}, ${3:float restitution}, ${4:float friction}, ${5:float density});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetPos\\n\\\r\n\tllSetPos(${1:vector pos});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetPrimitiveParams\\n\\\r\n\tllSetPrimitiveParams(${1:list rules});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetPrimMediaParams\\n\\\r\n\tllSetPrimMediaParams(${1:integer face}, ${2:list params});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetRegionPos\\n\\\r\n\tllSetRegionPos(${1:vector position})\\n\\\r\nsnippet llSetRemoteScriptAccessPin\\n\\\r\n\tllSetRemoteScriptAccessPin(${1:integer pin});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetRot\\n\\\r\n\tllSetRot(${1:rotation rot});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetScale\\n\\\r\n\tllSetScale(${1:vector size});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetScriptState\\n\\\r\n\tllSetScriptState(${1:string name}, ${2:integer run});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetSitText\\n\\\r\n\tllSetSitText(${1:string text});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetSoundQueueing\\n\\\r\n\tllSetSoundQueueing(${1:integer queue});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetSoundRadius\\n\\\r\n\tllSetSoundRadius(${1:float radius});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetStatus\\n\\\r\n\tllSetStatus(${1:integer status}, ${2:integer value});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetText\\n\\\r\n\tllSetText(${1:string text}, ${2:vector color}, ${3:float alpha});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetTexture\\n\\\r\n\tllSetTexture(${1:string texture}, ${2:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetTextureAnim\\n\\\r\n\tllSetTextureAnim(${1:integer mode}, ${2:integer face}, ${3:integer sizex}, ${4:integer sizey}, ${5:float start}, ${6:float length}, ${7:float rate});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetTimerEvent\\n\\\r\n\tllSetTimerEvent(${1:float sec});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetTorque\\n\\\r\n\tllSetTorque(${1:vector torque}, ${2:integer local});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetTouchText\\n\\\r\n\tllSetTouchText(${1:string text});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetVehicleFlags\\n\\\r\n\tllSetVehicleFlags(${1:integer flags});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetVehicleFloatParam\\n\\\r\n\tllSetVehicleFloatParam(${1:integer param}, ${2:float value});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetVehicleRotationParam\\n\\\r\n\tllSetVehicleRotationParam(${1:integer param}, ${2:rotation rot});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetVehicleType\\n\\\r\n\tllSetVehicleType(${1:integer type});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetVehicleVectorParam\\n\\\r\n\tllSetVehicleVectorParam(${1:integer param}, ${2:vector vec});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetVelocity\\n\\\r\n\tllSetVelocity(${1:vector force}, ${2:integer local});\\n\\\r\n\t$0\\n\\\r\nsnippet llSHA1String\\n\\\r\n\tllSHA1String(${1:string src})\\n\\\r\nsnippet llShout\\n\\\r\n\tllShout(${1:integer channel}, ${2:string msg});\\n\\\r\n\t$0\\n\\\r\nsnippet llSin\\n\\\r\n\tllSin(${1:float theta})\\n\\\r\nsnippet llSitTarget\\n\\\r\n\tllSitTarget(${1:vector offset}, ${2:rotation rot});\\n\\\r\n\t$0\\n\\\r\nsnippet llSleep\\n\\\r\n\tllSleep(${1:float sec});\\n\\\r\n\t$0\\n\\\r\nsnippet llSqrt\\n\\\r\n\tllSqrt(${1:float val})\\n\\\r\nsnippet llStartAnimation\\n\\\r\n\tllStartAnimation(${1:string anim});\\n\\\r\n\t$0\\n\\\r\nsnippet llStopAnimation\\n\\\r\n\tllStopAnimation(${1:string anim});\\n\\\r\n\t$0\\n\\\r\nsnippet llStopHover\\n\\\r\n\tllStopHover();\\n\\\r\n\t$0\\n\\\r\nsnippet llStopLookAt\\n\\\r\n\tllStopLookAt();\\n\\\r\n\t$0\\n\\\r\nsnippet llStopMoveToTarget\\n\\\r\n\tllStopMoveToTarget();\\n\\\r\n\t$0\\n\\\r\nsnippet llStopSound\\n\\\r\n\tllStopSound();\\n\\\r\n\t$0\\n\\\r\nsnippet llStringLength\\n\\\r\n\tllStringLength(${1:string str})\\n\\\r\nsnippet llStringToBase64\\n\\\r\n\tllStringToBase64(${1:string str})\\n\\\r\nsnippet llStringTrim\\n\\\r\n\tllStringTrim(${1:string src}, ${2:integer type})\\n\\\r\nsnippet llSubStringIndex\\n\\\r\n\tllSubStringIndex(${1:string source}, ${2:string pattern})\\n\\\r\nsnippet llTakeControls\\n\\\r\n\tllTakeControls(${1:integer controls}, ${2:integer accept}, ${3:integer pass_on});\\n\\\r\n\t$0\\n\\\r\nsnippet llTan\\n\\\r\n\tllTan(${1:float theta})\\n\\\r\nsnippet llTarget\\n\\\r\n\tllTarget(${1:vector position}, ${2:float range})\\n\\\r\nsnippet llTargetOmega\\n\\\r\n\tllTargetOmega(${1:vector axis}, ${2:float spinrate}, ${3:float gain});\\n\\\r\n\t$0\\n\\\r\nsnippet llTargetRemove\\n\\\r\n\tllTargetRemove(${1:integer handle});\\n\\\r\n\t$0\\n\\\r\nsnippet llTeleportAgent\\n\\\r\n\tllTeleportAgent(${1:key agent}, ${2:string landmark}, ${3:vector position}, ${4:vector look_at});\\n\\\r\n\t$0\\n\\\r\nsnippet llTeleportAgentGlobalCoords\\n\\\r\n\tllTeleportAgentGlobalCoords(${1:key agent}, ${2:vector global_coordinates}, ${3:vector region_coordinates}, ${4:vector look_at});\\n\\\r\n\t$0\\n\\\r\nsnippet llTeleportAgentHome\\n\\\r\n\tllTeleportAgentHome(${1:key agent});\\n\\\r\n\t$0\\n\\\r\nsnippet llTextBox\\n\\\r\n\tllTextBox(${1:key agent}, ${2:string message}, ${3:integer channel});\\n\\\r\n\t$0\\n\\\r\nsnippet llToLower\\n\\\r\n\tllToLower(${1:string src})\\n\\\r\nsnippet llToUpper\\n\\\r\n\tllToUpper(${1:string src})\\n\\\r\nsnippet llTransferLindenDollars\\n\\\r\n\tllTransferLindenDollars(${1:key destination}, ${2:integer amount})\\n\\\r\nsnippet llTriggerSound\\n\\\r\n\tllTriggerSound(${1:string sound}, ${2:float volume});\\n\\\r\n\t$0\\n\\\r\nsnippet llTriggerSoundLimited\\n\\\r\n\tllTriggerSoundLimited(${1:string sound}, ${2:float volume}, ${3:vector top_north_east}, ${4:vector bottom_south_west});\\n\\\r\n\t$0\\n\\\r\nsnippet llUnescapeURL\\n\\\r\n\tllUnescapeURL(${1:string url})\\n\\\r\nsnippet llUnSit\\n\\\r\n\tllUnSit(${1:key id});\\n\\\r\n\t$0\\n\\\r\nsnippet llUpdateCharacter\\n\\\r\n\tllUpdateCharacter(${1:list options})\\n\\\r\nsnippet llUpdateKeyValue\\n\\\r\n\tllUpdateKeyValue(${1:string k}, ${2:string v}, ${3:integer checked}, ${4:string ov})\\n\\\r\nsnippet llVecDist\\n\\\r\n\tllVecDist(${1:vector vec_a}, ${2:vector vec_b})\\n\\\r\nsnippet llVecMag\\n\\\r\n\tllVecMag(${1:vector vec})\\n\\\r\nsnippet llVecNorm\\n\\\r\n\tllVecNorm(${1:vector vec})\\n\\\r\nsnippet llVolumeDetect\\n\\\r\n\tllVolumeDetect(${1:integer detect});\\n\\\r\n\t$0\\n\\\r\nsnippet llWanderWithin\\n\\\r\n\tllWanderWithin(${1:vector origin}, ${2:vector dist}, ${3:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llWater\\n\\\r\n\tllWater(${1:vector offset});\\n\\\r\n\t$0\\n\\\r\nsnippet llWhisper\\n\\\r\n\tllWhisper(${1:integer channel}, ${2:string msg});\\n\\\r\n\t$0\\n\\\r\nsnippet llWind\\n\\\r\n\tllWind(${1:vector offset});\\n\\\r\n\t$0\\n\\\r\nsnippet llXorBase64\\n\\\r\n\tllXorBase64(${1:string str1}, ${2:string str2})\\n\\\r\nsnippet money\\n\\\r\n\tmoney(${1:key id}, ${2:integer amount})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet object_rez\\n\\\r\n\tobject_rez(${1:key id})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet on_rez\\n\\\r\n\ton_rez(${1:integer start_param})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet path_update\\n\\\r\n\tpath_update(${1:integer type}, ${2:list reserved})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet remote_data\\n\\\r\n\tremote_data(${1:integer event_type}, ${2:key channel}, ${3:key message_id}, ${4:string sender}, ${5:integer idata}, ${6:string sdata})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet run_time_permissions\\n\\\r\n\trun_time_permissions(${1:integer perm})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet sensor\\n\\\r\n\tsensor(${1:integer index})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet state\\n\\\r\n\tstate ${1:name}\\n\\\r\nsnippet touch\\n\\\r\n\ttouch(${1:integer index})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet touch_end\\n\\\r\n\ttouch_end(${1:integer index})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet touch_start\\n\\\r\n\ttouch_start(${1:integer index})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet transaction_result\\n\\\r\n\ttransaction_result(${1:key id}, ${2:integer success}, ${3:string data})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet while\\n\\\r\n\twhile (${1:condition})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\n\";\n  exports.scope = \"lsl\";\n});\n\n(function () {\n  ace.require([\"ace/snippets/lsl\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/node_modules/ace-builds/src-noconflict/snippets/lsl.js"],"names":["ace","define","require","exports","module","snippetText","scope","m"],"mappings":"AAAAA,GAAG,CAACC,MAAJ,CAAW,kBAAX,EAA8B,CAAC,SAAD,EAAW,SAAX,EAAqB,QAArB,CAA9B,EAA8D,UAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AACjG;;AAEAD,EAAAA,OAAO,CAACE,WAAR,GAAsB;AACthtCA;AAitCAF,EAAAA,OAAO,CAACG,KAAR,GAAgB,KAAhB;AAEC,CAttCD;;AAstCmB,CAAC,YAAW;AACXN,EAAAA,GAAG,CAACE,OAAJ,CAAY,CAAC,kBAAD,CAAZ,EAAkC,UAASK,CAAT,EAAY;AAC1C,QAAI,OAAOH,MAAP,IAAiB,QAAjB,IAA6B,OAAOD,OAAP,IAAkB,QAA/C,IAA2DC,MAA/D,EAAuE;AACnEA,MAAAA,MAAM,CAACD,OAAP,GAAiBI,CAAjB;AACH;AACJ,GAJD;AAKH,CANE","sourcesContent":["ace.define(\"ace/snippets/lsl\",[\"require\",\"exports\",\"module\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nexports.snippetText = \"snippet @\\n\\\r\n\t@${1:label};\\n\\\r\nsnippet CAMERA_ACTIVE\\n\\\r\n\tCAMERA_ACTIVE, ${1:integer isActive}, $0\\n\\\r\nsnippet CAMERA_BEHINDNESS_ANGLE\\n\\\r\n\tCAMERA_BEHINDNESS_ANGLE, ${1:float degrees}, $0\\n\\\r\nsnippet CAMERA_BEHINDNESS_LAG\\n\\\r\n\tCAMERA_BEHINDNESS_LAG, ${1:float seconds}, $0\\n\\\r\nsnippet CAMERA_DISTANCE\\n\\\r\n\tCAMERA_DISTANCE, ${1:float meters}, $0\\n\\\r\nsnippet CAMERA_FOCUS\\n\\\r\n\tCAMERA_FOCUS, ${1:vector position}, $0\\n\\\r\nsnippet CAMERA_FOCUS_LAG\\n\\\r\n\tCAMERA_FOCUS_LAG, ${1:float seconds}, $0\\n\\\r\nsnippet CAMERA_FOCUS_LOCKED\\n\\\r\n\tCAMERA_FOCUS_LOCKED, ${1:integer isLocked}, $0\\n\\\r\nsnippet CAMERA_FOCUS_OFFSET\\n\\\r\n\tCAMERA_FOCUS_OFFSET, ${1:vector meters}, $0\\n\\\r\nsnippet CAMERA_FOCUS_THRESHOLD\\n\\\r\n\tCAMERA_FOCUS_THRESHOLD, ${1:float meters}, $0\\n\\\r\nsnippet CAMERA_PITCH\\n\\\r\n\tCAMERA_PITCH, ${1:float degrees}, $0\\n\\\r\nsnippet CAMERA_POSITION\\n\\\r\n\tCAMERA_POSITION, ${1:vector position}, $0\\n\\\r\nsnippet CAMERA_POSITION_LAG\\n\\\r\n\tCAMERA_POSITION_LAG, ${1:float seconds}, $0\\n\\\r\nsnippet CAMERA_POSITION_LOCKED\\n\\\r\n\tCAMERA_POSITION_LOCKED, ${1:integer isLocked}, $0\\n\\\r\nsnippet CAMERA_POSITION_THRESHOLD\\n\\\r\n\tCAMERA_POSITION_THRESHOLD, ${1:float meters}, $0\\n\\\r\nsnippet CHARACTER_AVOIDANCE_MODE\\n\\\r\n\tCHARACTER_AVOIDANCE_MODE, ${1:integer flags}, $0\\n\\\r\nsnippet CHARACTER_DESIRED_SPEED\\n\\\r\n\tCHARACTER_DESIRED_SPEED, ${1:float speed}, $0\\n\\\r\nsnippet CHARACTER_DESIRED_TURN_SPEED\\n\\\r\n\tCHARACTER_DESIRED_TURN_SPEED, ${1:float speed}, $0\\n\\\r\nsnippet CHARACTER_LENGTH\\n\\\r\n\tCHARACTER_LENGTH, ${1:float length}, $0\\n\\\r\nsnippet CHARACTER_MAX_TURN_RADIUS\\n\\\r\n\tCHARACTER_MAX_TURN_RADIUS, ${1:float radius}, $0\\n\\\r\nsnippet CHARACTER_ORIENTATION\\n\\\r\n\tCHARACTER_ORIENTATION, ${1:integer orientation}, $0\\n\\\r\nsnippet CHARACTER_RADIUS\\n\\\r\n\tCHARACTER_RADIUS, ${1:float radius}, $0\\n\\\r\nsnippet CHARACTER_STAY_WITHIN_PARCEL\\n\\\r\n\tCHARACTER_STAY_WITHIN_PARCEL, ${1:boolean stay}, $0\\n\\\r\nsnippet CHARACTER_TYPE\\n\\\r\n\tCHARACTER_TYPE, ${1:integer type}, $0\\n\\\r\nsnippet HTTP_BODY_MAXLENGTH\\n\\\r\n\tHTTP_BODY_MAXLENGTH, ${1:integer length}, $0\\n\\\r\nsnippet HTTP_CUSTOM_HEADER\\n\\\r\n\tHTTP_CUSTOM_HEADER, ${1:string name}, ${2:string value}, $0\\n\\\r\nsnippet HTTP_METHOD\\n\\\r\n\tHTTP_METHOD, ${1:string method}, $0\\n\\\r\nsnippet HTTP_MIMETYPE\\n\\\r\n\tHTTP_MIMETYPE, ${1:string mimeType}, $0\\n\\\r\nsnippet HTTP_PRAGMA_NO_CACHE\\n\\\r\n\tHTTP_PRAGMA_NO_CACHE, ${1:integer send_header}, $0\\n\\\r\nsnippet HTTP_VERBOSE_THROTTLE\\n\\\r\n\tHTTP_VERBOSE_THROTTLE, ${1:integer noisy}, $0\\n\\\r\nsnippet HTTP_VERIFY_CERT\\n\\\r\n\tHTTP_VERIFY_CERT, ${1:integer verify}, $0\\n\\\r\nsnippet RC_DATA_FLAGS\\n\\\r\n\tRC_DATA_FLAGS, ${1:integer flags}, $0\\n\\\r\nsnippet RC_DETECT_PHANTOM\\n\\\r\n\tRC_DETECT_PHANTOM, ${1:integer dectedPhantom}, $0\\n\\\r\nsnippet RC_MAX_HITS\\n\\\r\n\tRC_MAX_HITS, ${1:integer maxHits}, $0\\n\\\r\nsnippet RC_REJECT_TYPES\\n\\\r\n\tRC_REJECT_TYPES, ${1:integer filterMask}, $0\\n\\\r\nsnippet at_rot_target\\n\\\r\n\tat_rot_target(${1:integer handle}, ${2:rotation targetrot}, ${3:rotation ourrot})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet at_target\\n\\\r\n\tat_target(${1:integer tnum}, ${2:vector targetpos}, ${3:vector ourpos})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet attach\\n\\\r\n\tattach(${1:key id})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet changed\\n\\\r\n\tchanged(${1:integer change})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet collision\\n\\\r\n\tcollision(${1:integer index})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet collision_end\\n\\\r\n\tcollision_end(${1:integer index})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet collision_start\\n\\\r\n\tcollision_start(${1:integer index})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet control\\n\\\r\n\tcontrol(${1:key id}, ${2:integer level}, ${3:integer edge})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet dataserver\\n\\\r\n\tdataserver(${1:key query_id}, ${2:string data})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet do\\n\\\r\n\tdo\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\n\twhile (${1:condition});\\n\\\r\nsnippet else\\n\\\r\n\telse\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet email\\n\\\r\n\temail(${1:string time}, ${2:string address}, ${3:string subject}, ${4:string message}, ${5:integer num_left})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet experience_permissions\\n\\\r\n\texperience_permissions(${1:key agent_id})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet experience_permissions_denied\\n\\\r\n\texperience_permissions_denied(${1:key agent_id}, ${2:integer reason})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet for\\n\\\r\n\tfor (${1:start}; ${3:condition}; ${3:step})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet http_request\\n\\\r\n\thttp_request(${1:key request_id}, ${2:string method}, ${3:string body})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet http_response\\n\\\r\n\thttp_response(${1:key request_id}, ${2:integer status}, ${3:list metadata}, ${4:string body})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet if\\n\\\r\n\tif (${1:condition})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet jump\\n\\\r\n\tjump ${1:label};\\n\\\r\nsnippet land_collision\\n\\\r\n\tland_collision(${1:vector pos})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet land_collision_end\\n\\\r\n\tland_collision_end(${1:vector pos})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet land_collision_start\\n\\\r\n\tland_collision_start(${1:vector pos})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet link_message\\n\\\r\n\tlink_message(${1:integer sender_num}, ${2:integer num}, ${3:string str}, ${4:key id})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet listen\\n\\\r\n\tlisten(${1:integer channel}, ${2:string name}, ${3:key id}, ${4:string message})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet llAbs\\n\\\r\n\tllAbs(${1:integer val})\\n\\\r\nsnippet llAcos\\n\\\r\n\tllAcos(${1:float val})\\n\\\r\nsnippet llAddToLandBanList\\n\\\r\n\tllAddToLandBanList(${1:key agent}, ${2:float hours});\\n\\\r\n\t$0\\n\\\r\nsnippet llAddToLandPassList\\n\\\r\n\tllAddToLandPassList(${1:key agent}, ${2:float hours});\\n\\\r\n\t$0\\n\\\r\nsnippet llAdjustSoundVolume\\n\\\r\n\tllAdjustSoundVolume(${1:float volume});\\n\\\r\n\t$0\\n\\\r\nsnippet llAgentInExperience\\n\\\r\n\tllAgentInExperience(${1:key agent})\\n\\\r\nsnippet llAllowInventoryDrop\\n\\\r\n\tllAllowInventoryDrop(${1:integer add});\\n\\\r\n\t$0\\n\\\r\nsnippet llAngleBetween\\n\\\r\n\tllAngleBetween(${1:rotation a}, ${2:rotation b})\\n\\\r\nsnippet llApplyImpulse\\n\\\r\n\tllApplyImpulse(${1:vector force}, ${2:integer local});\\n\\\r\n\t$0\\n\\\r\nsnippet llApplyRotationalImpulse\\n\\\r\n\tllApplyRotationalImpulse(${1:vector force}, ${2:integer local});\\n\\\r\n\t$0\\n\\\r\nsnippet llAsin\\n\\\r\n\tllAsin(${1:float val})\\n\\\r\nsnippet llAtan2\\n\\\r\n\tllAtan2(${1:float y}, ${2:float x})\\n\\\r\nsnippet llAttachToAvatar\\n\\\r\n\tllAttachToAvatar(${1:integer attach_point});\\n\\\r\n\t$0\\n\\\r\nsnippet llAttachToAvatarTemp\\n\\\r\n\tllAttachToAvatarTemp(${1:integer attach_point});\\n\\\r\n\t$0\\n\\\r\nsnippet llAvatarOnLinkSitTarget\\n\\\r\n\tllAvatarOnLinkSitTarget(${1:integer link})\\n\\\r\nsnippet llAvatarOnSitTarget\\n\\\r\n\tllAvatarOnSitTarget()\\n\\\r\nsnippet llAxes2Rot\\n\\\r\n\tllAxes2Rot(${1:vector fwd}, ${2:vector left}, ${3:vector up})\\n\\\r\nsnippet llAxisAngle2Rot\\n\\\r\n\tllAxisAngle2Rot(${1:vector axis}, ${2:float angle})\\n\\\r\nsnippet llBase64ToInteger\\n\\\r\n\tllBase64ToInteger(${1:string str})\\n\\\r\nsnippet llBase64ToString\\n\\\r\n\tllBase64ToString(${1:string str})\\n\\\r\nsnippet llBreakAllLinks\\n\\\r\n\tllBreakAllLinks();\\n\\\r\n\t$0\\n\\\r\nsnippet llBreakLink\\n\\\r\n\tllBreakLink(${1:integer link});\\n\\\r\n\t$0\\n\\\r\nsnippet llCastRay\\n\\\r\n\tllCastRay(${1:vector start}, ${2:vector end}, ${3:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llCeil\\n\\\r\n\tllCeil(${1:float val})\\n\\\r\nsnippet llClearCameraParams\\n\\\r\n\tllClearCameraParams();\\n\\\r\n\t$0\\n\\\r\nsnippet llClearLinkMedia\\n\\\r\n\tllClearLinkMedia(${1:integer link}, ${2:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llClearPrimMedia\\n\\\r\n\tllClearPrimMedia(${1:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llCloseRemoteDataChannel\\n\\\r\n\tllCloseRemoteDataChannel(${1:key channel});\\n\\\r\n\t$0\\n\\\r\nsnippet llCollisionFilter\\n\\\r\n\tllCollisionFilter(${1:string name}, ${2:key id}, ${3:integer accept});\\n\\\r\n\t$0\\n\\\r\nsnippet llCollisionSound\\n\\\r\n\tllCollisionSound(${1:string impact_sound}, ${2:float impact_volume});\\n\\\r\n\t$0\\n\\\r\nsnippet llCos\\n\\\r\n\tllCos(${1:float theta})\\n\\\r\nsnippet llCreateCharacter\\n\\\r\n\tllCreateCharacter(${1:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llCreateKeyValue\\n\\\r\n\tllCreateKeyValue(${1:string k})\\n\\\r\nsnippet llCreateLink\\n\\\r\n\tllCreateLink(${1:key target}, ${2:integer parent});\\n\\\r\n\t$0\\n\\\r\nsnippet llCSV2List\\n\\\r\n\tllCSV2List(${1:string src})\\n\\\r\nsnippet llDataSizeKeyValue\\n\\\r\n\tllDataSizeKeyValue()\\n\\\r\nsnippet llDeleteCharacter\\n\\\r\n\tllDeleteCharacter();\\n\\\r\n\t$0\\n\\\r\nsnippet llDeleteKeyValue\\n\\\r\n\tllDeleteKeyValue(${1:string k})\\n\\\r\nsnippet llDeleteSubList\\n\\\r\n\tllDeleteSubList(${1:list src}, ${2:integer start}, ${3:integer end})\\n\\\r\nsnippet llDeleteSubString\\n\\\r\n\tllDeleteSubString(${1:string src}, ${2:integer start}, ${3:integer end})\\n\\\r\nsnippet llDetachFromAvatar\\n\\\r\n\tllDetachFromAvatar();\\n\\\r\n\t$0\\n\\\r\nsnippet llDetectedGrab\\n\\\r\n\tllDetectedGrab(${1:integer number})\\n\\\r\nsnippet llDetectedGroup\\n\\\r\n\tllDetectedGroup(${1:integer number})\\n\\\r\nsnippet llDetectedKey\\n\\\r\n\tllDetectedKey(${1:integer number})\\n\\\r\nsnippet llDetectedLinkNumber\\n\\\r\n\tllDetectedLinkNumber(${1:integer number})\\n\\\r\nsnippet llDetectedName\\n\\\r\n\tllDetectedName(${1:integer number})\\n\\\r\nsnippet llDetectedOwner\\n\\\r\n\tllDetectedOwner(${1:integer number})\\n\\\r\nsnippet llDetectedPos\\n\\\r\n\tllDetectedPosl(${1:integer number})\\n\\\r\nsnippet llDetectedRot\\n\\\r\n\tllDetectedRot(${1:integer number})\\n\\\r\nsnippet llDetectedTouchBinormal\\n\\\r\n\tllDetectedTouchBinormal(${1:integer number})\\n\\\r\nsnippet llDetectedTouchFace\\n\\\r\n\tllDetectedTouchFace(${1:integer number})\\n\\\r\nsnippet llDetectedTouchNormal\\n\\\r\n\tllDetectedTouchNormal(${1:integer number})\\n\\\r\nsnippet llDetectedTouchPos\\n\\\r\n\tllDetectedTouchPos(${1:integer number})\\n\\\r\nsnippet llDetectedTouchST\\n\\\r\n\tllDetectedTouchST(${1:integer number})\\n\\\r\nsnippet llDetectedTouchUV\\n\\\r\n\tllDetectedTouchUV(${1:integer number})\\n\\\r\nsnippet llDetectedType\\n\\\r\n\tllDetectedType(${1:integer number})\\n\\\r\nsnippet llDetectedVel\\n\\\r\n\tllDetectedVel(${1:integer number})\\n\\\r\nsnippet llDialog\\n\\\r\n\tllDialog(${1:key agent}, ${2:string message}, ${3:list buttons}, ${4:integer channel});\\n\\\r\n\t$0\\n\\\r\nsnippet llDie\\n\\\r\n\tllDie();\\n\\\r\n\t$0\\n\\\r\nsnippet llDumpList2String\\n\\\r\n\tllDumpList2String(${1:list src}, ${2:string separator})\\n\\\r\nsnippet llEdgeOfWorld\\n\\\r\n\tllEdgeOfWorld(${1:vector pos}, ${2:vector dir})\\n\\\r\nsnippet llEjectFromLand\\n\\\r\n\tllEjectFromLand(${1:key agent});\\n\\\r\n\t$0\\n\\\r\nsnippet llEmail\\n\\\r\n\tllEmail(${1:string address}, ${2:string subject}, ${3:string message});\\n\\\r\n\t$0\\n\\\r\nsnippet llEscapeURL\\n\\\r\n\tllEscapeURL(${1:string url})\\n\\\r\nsnippet llEuler2Rot\\n\\\r\n\tllEuler2Rot(${1:vector v})\\n\\\r\nsnippet llExecCharacterCmd\\n\\\r\n\tllExecCharacterCmd(${1:integer command}, ${2:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llEvade\\n\\\r\n\tllEvade(${1:key target}, ${2:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llFabs\\n\\\r\n\tllFabs(${1:float val})\\n\\\r\nsnippet llFleeFrom\\n\\\r\n\tllFleeFrom(${1:vector position}, ${2:float distance}, ${3:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llFloor\\n\\\r\n\tllFloor(${1:float val})\\n\\\r\nsnippet llForceMouselook\\n\\\r\n\tllForceMouselook(${1:integer mouselook});\\n\\\r\n\t$0\\n\\\r\nsnippet llFrand\\n\\\r\n\tllFrand(${1:float mag})\\n\\\r\nsnippet llGenerateKey\\n\\\r\n\tllGenerateKey()\\n\\\r\nsnippet llGetAccel\\n\\\r\n\tllGetAccel()\\n\\\r\nsnippet llGetAgentInfo\\n\\\r\n\tllGetAgentInfo(${1:key id})\\n\\\r\nsnippet llGetAgentLanguage\\n\\\r\n\tllGetAgentLanguage(${1:key agent})\\n\\\r\nsnippet llGetAgentList\\n\\\r\n\tllGetAgentList(${1:integer scope}, ${2:list options})\\n\\\r\nsnippet llGetAgentSize\\n\\\r\n\tllGetAgentSize(${1:key agent})\\n\\\r\nsnippet llGetAlpha\\n\\\r\n\tllGetAlpha(${1:integer face})\\n\\\r\nsnippet llGetAndResetTime\\n\\\r\n\tllGetAndResetTime()\\n\\\r\nsnippet llGetAnimation\\n\\\r\n\tllGetAnimation(${1:key id})\\n\\\r\nsnippet llGetAnimationList\\n\\\r\n\tllGetAnimationList(${1:key agent})\\n\\\r\nsnippet llGetAnimationOverride\\n\\\r\n\tllGetAnimationOverride(${1:string anim_state})\\n\\\r\nsnippet llGetAttached\\n\\\r\n\tllGetAttached()\\n\\\r\nsnippet llGetAttachedList\\n\\\r\n\tllGetAttachedList(${1:key id})\\n\\\r\nsnippet llGetBoundingBox\\n\\\r\n\tllGetBoundingBox(${1:key object})\\n\\\r\nsnippet llGetCameraPos\\n\\\r\n\tllGetCameraPos()\\n\\\r\nsnippet llGetCameraRot\\n\\\r\n\tllGetCameraRot()\\n\\\r\nsnippet llGetCenterOfMass\\n\\\r\n\tllGetCenterOfMass()\\n\\\r\nsnippet llGetClosestNavPoint\\n\\\r\n\tllGetClosestNavPoint(${1:vector point}, ${2:list options})\\n\\\r\nsnippet llGetColor\\n\\\r\n\tllGetColor(${1:integer face})\\n\\\r\nsnippet llGetCreator\\n\\\r\n\tllGetCreator()\\n\\\r\nsnippet llGetDate\\n\\\r\n\tllGetDate()\\n\\\r\nsnippet llGetDisplayName\\n\\\r\n\tllGetDisplayName(${1:key id})\\n\\\r\nsnippet llGetEnergy\\n\\\r\n\tllGetEnergy()\\n\\\r\nsnippet llGetEnv\\n\\\r\n\tllGetEnv(${1:string name})\\n\\\r\nsnippet llGetExperienceDetails\\n\\\r\n\tllGetExperienceDetails(${1:key experience_id})\\n\\\r\nsnippet llGetExperienceErrorMessage\\n\\\r\n\tllGetExperienceErrorMessage(${1:integer error})\\n\\\r\nsnippet llGetForce\\n\\\r\n\tllGetForce()\\n\\\r\nsnippet llGetFreeMemory\\n\\\r\n\tllGetFreeMemory()\\n\\\r\nsnippet llGetFreeURLs\\n\\\r\n\tllGetFreeURLs()\\n\\\r\nsnippet llGetGeometricCenter\\n\\\r\n\tllGetGeometricCenter()\\n\\\r\nsnippet llGetGMTclock\\n\\\r\n\tllGetGMTclock()\\n\\\r\nsnippet llGetHTTPHeader\\n\\\r\n\tllGetHTTPHeader(${1:key request_id}, ${2:string header})\\n\\\r\nsnippet llGetInventoryCreator\\n\\\r\n\tllGetInventoryCreator(${1:string item})\\n\\\r\nsnippet llGetInventoryKey\\n\\\r\n\tllGetInventoryKey(${1:string name})\\n\\\r\nsnippet llGetInventoryName\\n\\\r\n\tllGetInventoryName(${1:integer type}, ${2:integer number})\\n\\\r\nsnippet llGetInventoryNumber\\n\\\r\n\tllGetInventoryNumber(${1:integer type})\\n\\\r\nsnippet llGetInventoryPermMask\\n\\\r\n\tllGetInventoryPermMask(${1:string item}, ${2:integer mask})\\n\\\r\nsnippet llGetInventoryType\\n\\\r\n\tllGetInventoryType(${1:string name})\\n\\\r\nsnippet llGetKey\\n\\\r\n\tllGetKey()\\n\\\r\nsnippet llGetLandOwnerAt\\n\\\r\n\tllGetLandOwnerAt(${1:vector pos})\\n\\\r\nsnippet llGetLinkKey\\n\\\r\n\tllGetLinkKey(${1:integer link})\\n\\\r\nsnippet llGetLinkMedia\\n\\\r\n\tllGetLinkMedia(${1:integer link}, ${2:integer face}, ${3:list params})\\n\\\r\nsnippet llGetLinkName\\n\\\r\n\tllGetLinkName(${1:integer link})\\n\\\r\nsnippet llGetLinkNumber\\n\\\r\n\tllGetLinkNumber()\\n\\\r\nsnippet llGetLinkNumberOfSides\\n\\\r\n\tllGetLinkNumberOfSides(${1:integer link})\\n\\\r\nsnippet llGetLinkPrimitiveParams\\n\\\r\n\tllGetLinkPrimitiveParams(${1:integer link}, ${2:list params})\\n\\\r\nsnippet llGetListEntryType\\n\\\r\n\tllGetListEntryType(${1:list src}, ${2:integer index})\\n\\\r\nsnippet llGetListLength\\n\\\r\n\tllGetListLength(${1:list src})\\n\\\r\nsnippet llGetLocalPos\\n\\\r\n\tllGetLocalPos()\\n\\\r\nsnippet llGetLocalRot\\n\\\r\n\tllGetLocalRot()\\n\\\r\nsnippet llGetMass\\n\\\r\n\tllGetMass()\\n\\\r\nsnippet llGetMassMKS\\n\\\r\n\tllGetMassMKS()\\n\\\r\nsnippet llGetMaxScaleFactor\\n\\\r\n\tllGetMaxScaleFactor()\\n\\\r\nsnippet llGetMemoryLimit\\n\\\r\n\tllGetMemoryLimit()\\n\\\r\nsnippet llGetMinScaleFactor\\n\\\r\n\tllGetMinScaleFactor()\\n\\\r\nsnippet llGetNextEmail\\n\\\r\n\tllGetNextEmail(${1:string address}, ${2:string subject});\\n\\\r\n\t$0\\n\\\r\nsnippet llGetNotecardLine\\n\\\r\n\tllGetNotecardLine(${1:string name}, ${2:integer line})\\n\\\r\nsnippet llGetNumberOfNotecardLines\\n\\\r\n\tllGetNumberOfNotecardLines(${1:string name})\\n\\\r\nsnippet llGetNumberOfPrims\\n\\\r\n\tllGetNumberOfPrims()\\n\\\r\nsnippet llGetNumberOfSides\\n\\\r\n\tllGetNumberOfSides()\\n\\\r\nsnippet llGetObjectDesc\\n\\\r\n\tllGetObjectDesc()\\n\\\r\nsnippet llGetObjectDetails\\n\\\r\n\tllGetObjectDetails(${1:key id}, ${2:list params})\\n\\\r\nsnippet llGetObjectMass\\n\\\r\n\tllGetObjectMass(${1:key id})\\n\\\r\nsnippet llGetObjectName\\n\\\r\n\tllGetObjectName()\\n\\\r\nsnippet llGetObjectPermMask\\n\\\r\n\tllGetObjectPermMask(${1:integer mask})\\n\\\r\nsnippet llGetObjectPrimCount\\n\\\r\n\tllGetObjectPrimCount(${1:key prim})\\n\\\r\nsnippet llGetOmega\\n\\\r\n\tllGetOmega()\\n\\\r\nsnippet llGetOwner\\n\\\r\n\tllGetOwner()\\n\\\r\nsnippet llGetOwnerKey\\n\\\r\n\tllGetOwnerKey(${1:key id})\\n\\\r\nsnippet llGetParcelDetails\\n\\\r\n\tllGetParcelDetails(${1:vector pos}, ${2:list params})\\n\\\r\nsnippet llGetParcelFlags\\n\\\r\n\tllGetParcelFlags(${1:vector pos})\\n\\\r\nsnippet llGetParcelMaxPrims\\n\\\r\n\tllGetParcelMaxPrims(${1:vector pos}, ${2:integer sim_wide})\\n\\\r\nsnippet llGetParcelMusicURL\\n\\\r\n\tllGetParcelMusicURL()\\n\\\r\nsnippet llGetParcelPrimCount\\n\\\r\n\tllGetParcelPrimCount(${1:vector pos}, ${2:integer category}, ${3:integer sim_wide})\\n\\\r\nsnippet llGetParcelPrimOwners\\n\\\r\n\tllGetParcelPrimOwners(${1:vector pos})\\n\\\r\nsnippet llGetPermissions\\n\\\r\n\tllGetPermissions()\\n\\\r\nsnippet llGetPermissionsKey\\n\\\r\n\tllGetPermissionsKey()\\n\\\r\nsnippet llGetPhysicsMaterial\\n\\\r\n\tllGetPhysicsMaterial()\\n\\\r\nsnippet llGetPos\\n\\\r\n\tllGetPos()\\n\\\r\nsnippet llGetPrimitiveParams\\n\\\r\n\tllGetPrimitiveParams(${1:list params})\\n\\\r\nsnippet llGetPrimMediaParams\\n\\\r\n\tllGetPrimMediaParams(${1:integer face}, ${2:list params})\\n\\\r\nsnippet llGetRegionAgentCount\\n\\\r\n\tllGetRegionAgentCount()\\n\\\r\nsnippet llGetRegionCorner\\n\\\r\n\tllGetRegionCorner()\\n\\\r\nsnippet llGetRegionFlags\\n\\\r\n\tllGetRegionFlags()\\n\\\r\nsnippet llGetRegionFPS\\n\\\r\n\tllGetRegionFPS()\\n\\\r\nsnippet llGetRegionName\\n\\\r\n\tllGetRegionName()\\n\\\r\nsnippet llGetRegionTimeDilation\\n\\\r\n\tllGetRegionTimeDilation()\\n\\\r\nsnippet llGetRootPosition\\n\\\r\n\tllGetRootPosition()\\n\\\r\nsnippet llGetRootRotation\\n\\\r\n\tllGetRootRotation()\\n\\\r\nsnippet llGetRot\\n\\\r\n\tllGetRot()\\n\\\r\nsnippet llGetScale\\n\\\r\n\tllGetScale()\\n\\\r\nsnippet llGetScriptName\\n\\\r\n\tllGetScriptName()\\n\\\r\nsnippet llGetScriptState\\n\\\r\n\tllGetScriptState(${1:string script})\\n\\\r\nsnippet llGetSimStats\\n\\\r\n\tllGetSimStats(${1:integer stat_type})\\n\\\r\nsnippet llGetSimulatorHostname\\n\\\r\n\tllGetSimulatorHostname()\\n\\\r\nsnippet llGetSPMaxMemory\\n\\\r\n\tllGetSPMaxMemory()\\n\\\r\nsnippet llGetStartParameter\\n\\\r\n\tllGetStartParameter()\\n\\\r\nsnippet llGetStaticPath\\n\\\r\n\tllGetStaticPath(${1:vector start}, ${2:vector end}, ${3:float radius}, ${4:list params})\\n\\\r\nsnippet llGetStatus\\n\\\r\n\tllGetStatus(${1:integer status})\\n\\\r\nsnippet llGetSubString\\n\\\r\n\tllGetSubString(${1:string src}, ${2:integer start}, ${3:integer end})\\n\\\r\nsnippet llGetSunDirection\\n\\\r\n\tllGetSunDirection()\\n\\\r\nsnippet llGetTexture\\n\\\r\n\tllGetTexture(${1:integer face})\\n\\\r\nsnippet llGetTextureOffset\\n\\\r\n\tllGetTextureOffset(${1:integer face})\\n\\\r\nsnippet llGetTextureRot\\n\\\r\n\tllGetTextureRot(${1:integer face})\\n\\\r\nsnippet llGetTextureScale\\n\\\r\n\tllGetTextureScale(${1:integer face})\\n\\\r\nsnippet llGetTime\\n\\\r\n\tllGetTime()\\n\\\r\nsnippet llGetTimeOfDay\\n\\\r\n\tllGetTimeOfDay()\\n\\\r\nsnippet llGetTimestamp\\n\\\r\n\tllGetTimestamp()\\n\\\r\nsnippet llGetTorque\\n\\\r\n\tllGetTorque()\\n\\\r\nsnippet llGetUnixTime\\n\\\r\n\tllGetUnixTime()\\n\\\r\nsnippet llGetUsedMemory\\n\\\r\n\tllGetUsedMemory()\\n\\\r\nsnippet llGetUsername\\n\\\r\n\tllGetUsername(${1:key id})\\n\\\r\nsnippet llGetVel\\n\\\r\n\tllGetVel()\\n\\\r\nsnippet llGetWallclock\\n\\\r\n\tllGetWallclock()\\n\\\r\nsnippet llGiveInventory\\n\\\r\n\tllGiveInventory(${1:key destination}, ${2:string inventory});\\n\\\r\n\t$0\\n\\\r\nsnippet llGiveInventoryList\\n\\\r\n\tllGiveInventoryList(${1:key target}, ${2:string folder}, ${3:list inventory});\\n\\\r\n\t$0\\n\\\r\nsnippet llGiveMoney\\n\\\r\n\tllGiveMoney(${1:key destination}, ${2:integer amount})\\n\\\r\nsnippet llGround\\n\\\r\n\tllGround(${1:vector offset})\\n\\\r\nsnippet llGroundContour\\n\\\r\n\tllGroundContour(${1:vector offset})\\n\\\r\nsnippet llGroundNormal\\n\\\r\n\tllGroundNormal(${1:vector offset})\\n\\\r\nsnippet llGroundRepel\\n\\\r\n\tllGroundRepel(${1:float height}, ${2:integer water}, ${3:float tau});\\n\\\r\n\t$0\\n\\\r\nsnippet llGroundSlope\\n\\\r\n\tllGroundSlope(${1:vector offset})\\n\\\r\nsnippet llHTTPRequest\\n\\\r\n\tllHTTPRequest(${1:string url}, ${2:list parameters}, ${3:string body})\\n\\\r\nsnippet llHTTPResponse\\n\\\r\n\tllHTTPResponse(${1:key request_id}, ${2:integer status}, ${3:string body});\\n\\\r\n\t$0\\n\\\r\nsnippet llInsertString\\n\\\r\n\tllInsertString(${1:string dst}, ${2:integer pos}, ${3:string src})\\n\\\r\nsnippet llInstantMessage\\n\\\r\n\tllInstantMessage(${1:key user}, ${2:string message});\\n\\\r\n\t$0\\n\\\r\nsnippet llIntegerToBase64\\n\\\r\n\tllIntegerToBase64(${1:integer number})\\n\\\r\nsnippet llJson2List\\n\\\r\n\tllJson2List(${1:string json})\\n\\\r\nsnippet llJsonGetValue\\n\\\r\n\tllJsonGetValue(${1:string json}, ${2:list specifiers})\\n\\\r\nsnippet llJsonSetValue\\n\\\r\n\tllJsonSetValue(${1:string json}, ${2:list specifiers}, ${3:string newValue})\\n\\\r\nsnippet llJsonValueType\\n\\\r\n\tllJsonValueType(${1:string json}, ${2:list specifiers})\\n\\\r\nsnippet llKey2Name\\n\\\r\n\tllKey2Name(${1:key id})\\n\\\r\nsnippet llKeyCountKeyValue\\n\\\r\n\tllKeyCountKeyValue()\\n\\\r\nsnippet llKeysKeyValue\\n\\\r\n\tllKeysKeyValue(${1:integer first}, ${2:integer count})\\n\\\r\nsnippet llLinkParticleSystem\\n\\\r\n\tllLinkParticleSystem(${1:integer link}, ${2:list rules});\\n\\\r\n\t$0\\n\\\r\nsnippet llLinkSitTarget\\n\\\r\n\tllLinkSitTarget(${1:integer link}, ${2:vector offset}, ${3:rotation rot});\\n\\\r\n\t$0\\n\\\r\nsnippet llList2CSV\\n\\\r\n\tllList2CSV(${1:list src})\\n\\\r\nsnippet llList2Float\\n\\\r\n\tllList2Float(${1:list src}, ${2:integer index})\\n\\\r\nsnippet llList2Integer\\n\\\r\n\tllList2Integer(${1:list src}, ${2:integer index})\\n\\\r\nsnippet llList2Json\\n\\\r\n\tllList2Json(${1:string type}, ${2:list values})\\n\\\r\nsnippet llList2Key\\n\\\r\n\tllList2Key(${1:list src}, ${2:integer index})\\n\\\r\nsnippet llList2List\\n\\\r\n\tllList2List(${1:list src}, ${2:integer start}, ${3:integer end})\\n\\\r\nsnippet llList2ListStrided\\n\\\r\n\tllList2ListStrided(${1:list src}, ${2:integer start}, ${3:integer end}, ${4:integer stride})\\n\\\r\nsnippet llList2Rot\\n\\\r\n\tllList2Rot(${1:list src}, ${2:integer index})\\n\\\r\nsnippet llList2String\\n\\\r\n\tllList2String(${1:list src}, ${2:integer index})\\n\\\r\nsnippet llList2Vector\\n\\\r\n\tllList2Vector(${1:list src}, ${2:integer index})\\n\\\r\nsnippet llListen\\n\\\r\n\tllListen(${1:integer channel}, ${2:string name}, ${3:key id}, ${4:string msg})\\n\\\r\nsnippet llListenControl\\n\\\r\n\tllListenControl(${1:integer handle}, ${2:integer active});\\n\\\r\n\t$0\\n\\\r\nsnippet llListenRemove\\n\\\r\n\tllListenRemove(${1:integer handle});\\n\\\r\n\t$0\\n\\\r\nsnippet llListFindList\\n\\\r\n\tllListFindList(${1:list src}, ${2:list test})\\n\\\r\nsnippet llListInsertList\\n\\\r\n\tllListInsertList(${1:list dest}, ${2:list src}, ${3:integer start})\\n\\\r\nsnippet llListRandomize\\n\\\r\n\tllListRandomize(${1:list src}, ${2:integer stride})\\n\\\r\nsnippet llListReplaceList\\n\\\r\n\tllListReplaceList(${1:list dest}, ${2:list src}, ${3:integer start}, ${4:integer end})\\n\\\r\nsnippet llListSort\\n\\\r\n\tllListSort(${1:list src}, ${2:integer stride}, ${3:integer ascending})\\n\\\r\nsnippet llListStatistics\\n\\\r\n\tllListStatistics(${1:integer operation}, ${2:list src})\\n\\\r\nsnippet llLoadURL\\n\\\r\n\tllLoadURL(${1:key agent}, ${2:string message}, ${3:string url});\\n\\\r\n\t$0\\n\\\r\nsnippet llLog\\n\\\r\n\tllLog(${1:float val})\\n\\\r\nsnippet llLog10\\n\\\r\n\tllLog10(${1:float val})\\n\\\r\nsnippet llLookAt\\n\\\r\n\tllLookAt(${1:vector target}, ${2:float strength}, ${3:float damping});\\n\\\r\n\t$0\\n\\\r\nsnippet llLoopSound\\n\\\r\n\tllLoopSound(${1:string sound}, ${2:float volume});\\n\\\r\n\t$0\\n\\\r\nsnippet llLoopSoundMaster\\n\\\r\n\tllLoopSoundMaster(${1:string sound}, ${2:float volume});\\n\\\r\n\t$0\\n\\\r\nsnippet llLoopSoundSlave\\n\\\r\n\tllLoopSoundSlave(${1:string sound}, ${2:float volume});\\n\\\r\n\t$0\\n\\\r\nsnippet llManageEstateAccess\\n\\\r\n\tllManageEstateAccess(${1:integer action}, ${2:key agent})\\n\\\r\nsnippet llMapDestination\\n\\\r\n\tllMapDestination(${1:string simname}, ${2:vector pos}, ${3:vector look_at});\\n\\\r\n\t$0\\n\\\r\nsnippet llMD5String\\n\\\r\n\tllMD5String(${1:string src}, ${2:integer nonce})\\n\\\r\nsnippet llMessageLinked\\n\\\r\n\tllMessageLinked(${1:integer link}, ${2:integer num}, ${3:string str}, ${4:key id});\\n\\\r\n\t$0\\n\\\r\nsnippet llMinEventDelay\\n\\\r\n\tllMinEventDelay(${1:float delay});\\n\\\r\n\t$0\\n\\\r\nsnippet llModifyLand\\n\\\r\n\tllModifyLand(${1:integer action}, ${2:integer brush});\\n\\\r\n\t$0\\n\\\r\nsnippet llModPow\\n\\\r\n\tllModPow(${1:integer a}, ${2:integer b}, ${3:integer c})\\n\\\r\nsnippet llMoveToTarget\\n\\\r\n\tllMoveToTarget(${1:vector target}, ${2:float tau});\\n\\\r\n\t$0\\n\\\r\nsnippet llNavigateTo\\n\\\r\n\tllNavigateTo(${1:vector pos}, ${2:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llOffsetTexture\\n\\\r\n\tllOffsetTexture(${1:float u}, ${2:float v}, ${3:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llOpenRemoteDataChannel\\n\\\r\n\tllOpenRemoteDataChannel();\\n\\\r\n\t$0\\n\\\r\nsnippet llOverMyLand\\n\\\r\n\tllOverMyLand(${1:key id})\\n\\\r\nsnippet llOwnerSay\\n\\\r\n\tllOwnerSay(${1:string msg});\\n\\\r\n\t$0\\n\\\r\nsnippet llParcelMediaCommandList\\n\\\r\n\tllParcelMediaCommandList(${1:list commandList});\\n\\\r\n\t$0\\n\\\r\nsnippet llParcelMediaQuery\\n\\\r\n\tllParcelMediaQuery(${1:list query})\\n\\\r\nsnippet llParseString2List\\n\\\r\n\tllParseString2List(${1:string src}, ${2:list separators}, ${3:list spacers})\\n\\\r\nsnippet llParseStringKeepNulls\\n\\\r\n\tllParseStringKeepNulls(${1:string src}, ${2:list separators}, ${3:list spacers})\\n\\\r\nsnippet llParticleSystem\\n\\\r\n\tllParticleSystem(${1:list rules});\\n\\\r\n\t$0\\n\\\r\nsnippet llPassCollisions\\n\\\r\n\tllPassCollisions(${1:integer pass});\\n\\\r\n\t$0\\n\\\r\nsnippet llPassTouches\\n\\\r\n\tllPassTouches(${1:integer pass});\\n\\\r\n\t$0\\n\\\r\nsnippet llPatrolPoints\\n\\\r\n\tllPatrolPoints(${1:list patrolPoints}, ${2:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llPlaySound\\n\\\r\n\tllPlaySound(${1:string sound}, ${2:float volume});\\n\\\r\n\t$0\\n\\\r\nsnippet llPlaySoundSlave\\n\\\r\n\tllPlaySoundSlave(${1:string sound}, ${2:float volume});\\n\\\r\n\t$0\\n\\\r\nsnippet llPow\\n\\\r\n\tllPow(${1:float base}, ${2:float exponent})\\n\\\r\nsnippet llPreloadSound\\n\\\r\n\tllPreloadSound(${1:string sound});\\n\\\r\n\t$0\\n\\\r\nsnippet llPursue\\n\\\r\n\tllPursue(${1:key target}, ${2:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llPushObject\\n\\\r\n\tllPushObject(${1:key target}, ${2:vector impulse}, ${3:vector ang_impulse}, ${4:integer local});\\n\\\r\n\t$0\\n\\\r\nsnippet llReadKeyValue\\n\\\r\n\tllReadKeyValue(${1:string k})\\n\\\r\nsnippet llRegionSay\\n\\\r\n\tllRegionSay(${1:integer channel}, ${2:string msg});\\n\\\r\n\t$0\\n\\\r\nsnippet llRegionSayTo\\n\\\r\n\tllRegionSayTo(${1:key target}, ${2:integer channel}, ${3:string msg});\\n\\\r\n\t$0\\n\\\r\nsnippet llReleaseControls\\n\\\r\n\tllReleaseControls();\\n\\\r\n\t$0\\n\\\r\nsnippet llReleaseURL\\n\\\r\n\tllReleaseURL(${1:string url});\\n\\\r\n\t$0\\n\\\r\nsnippet llRemoteDataReply\\n\\\r\n\tllRemoteDataReply(${1:key channel}, ${2:key message_id}, ${3:string sdata}, ${4:integer idata});\\n\\\r\n\t$0\\n\\\r\nsnippet llRemoteLoadScriptPin\\n\\\r\n\tllRemoteLoadScriptPin(${1:key target}, ${2:string name}, ${3:integer pin}, ${4:integer running}, ${5:integer start_param});\\n\\\r\n\t$0\\n\\\r\nsnippet llRemoveFromLandBanList\\n\\\r\n\tllRemoveFromLandBanList(${1:key agent});\\n\\\r\n\t$0\\n\\\r\nsnippet llRemoveFromLandPassList\\n\\\r\n\tllRemoveFromLandPassList(${1:key agent});\\n\\\r\n\t$0\\n\\\r\nsnippet llRemoveInventory\\n\\\r\n\tllRemoveInventory(${1:string item});\\n\\\r\n\t$0\\n\\\r\nsnippet llRemoveVehicleFlags\\n\\\r\n\tllRemoveVehicleFlags(${1:integer flags});\\n\\\r\n\t$0\\n\\\r\nsnippet llRequestAgentData\\n\\\r\n\tllRequestAgentData(${1:key id}, ${2:integer data})\\n\\\r\nsnippet llRequestDisplayName\\n\\\r\n\tllRequestDisplayName(${1:key id})\\n\\\r\nsnippet llRequestExperiencePermissions\\n\\\r\n\tllRequestExperiencePermissions(${1:key agent}, ${2:string name})\\n\\\r\nsnippet llRequestInventoryData\\n\\\r\n\tllRequestInventoryData(${1:string name})\\n\\\r\nsnippet llRequestPermissions\\n\\\r\n\tllRequestPermissions(${1:key agent}, ${2:integer permissions})\\n\\\r\nsnippet llRequestSecureURL\\n\\\r\n\tllRequestSecureURL()\\n\\\r\nsnippet llRequestSimulatorData\\n\\\r\n\tllRequestSimulatorData(${1:string region}, ${2:integer data})\\n\\\r\nsnippet llRequestURL\\n\\\r\n\tllRequestURL()\\n\\\r\nsnippet llRequestUsername\\n\\\r\n\tllRequestUsername(${1:key id})\\n\\\r\nsnippet llResetAnimationOverride\\n\\\r\n\tllResetAnimationOverride(${1:string anim_state});\\n\\\r\n\t$0\\n\\\r\nsnippet llResetLandBanList\\n\\\r\n\tllResetLandBanList();\\n\\\r\n\t$0\\n\\\r\nsnippet llResetLandPassList\\n\\\r\n\tllResetLandPassList();\\n\\\r\n\t$0\\n\\\r\nsnippet llResetOtherScript\\n\\\r\n\tllResetOtherScript(${1:string name});\\n\\\r\n\t$0\\n\\\r\nsnippet llResetScript\\n\\\r\n\tllResetScript();\\n\\\r\n\t$0\\n\\\r\nsnippet llResetTime\\n\\\r\n\tllResetTime();\\n\\\r\n\t$0\\n\\\r\nsnippet llReturnObjectsByID\\n\\\r\n\tllReturnObjectsByID(${1:list objects})\\n\\\r\nsnippet llReturnObjectsByOwner\\n\\\r\n\tllReturnObjectsByOwner(${1:key owner}, ${2:integer scope})\\n\\\r\nsnippet llRezAtRoot\\n\\\r\n\tllRezAtRoot(${1:string inventory}, ${2:vector position}, ${3:vector velocity}, ${4:rotation rot}, ${5:integer param});\\n\\\r\n\t$0\\n\\\r\nsnippet llRezObject\\n\\\r\n\tllRezObject(${1:string inventory}, ${2:vector pos}, ${3:vector vel}, ${4:rotation rot}, ${5:integer param});\\n\\\r\n\t$0\\n\\\r\nsnippet llRot2Angle\\n\\\r\n\tllRot2Angle(${1:rotation rot})\\n\\\r\nsnippet llRot2Axis\\n\\\r\n\tllRot2Axis(${1:rotation rot})\\n\\\r\nsnippet llRot2Euler\\n\\\r\n\tllRot2Euler(${1:rotation quat})\\n\\\r\nsnippet llRot2Fwd\\n\\\r\n\tllRot2Fwd(${1:rotation q})\\n\\\r\nsnippet llRot2Left\\n\\\r\n\tllRot2Left(${1:rotation q})\\n\\\r\nsnippet llRot2Up\\n\\\r\n\tllRot2Up(${1:rotation q})\\n\\\r\nsnippet llRotateTexture\\n\\\r\n\tllRotateTexture(${1:float angle}, ${2:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llRotBetween\\n\\\r\n\tllRotBetween(${1:vector start}, ${2:vector end})\\n\\\r\nsnippet llRotLookAt\\n\\\r\n\tllRotLookAt(${1:rotation target_direction}, ${2:float strength}, ${3:float damping});\\n\\\r\n\t$0\\n\\\r\nsnippet llRotTarget\\n\\\r\n\tllRotTarget(${1:rotation rot}, ${2:float error})\\n\\\r\nsnippet llRotTargetRemove\\n\\\r\n\tllRotTargetRemove(${1:integer handle});\\n\\\r\n\t$0\\n\\\r\nsnippet llRound\\n\\\r\n\tllRound(${1:float val})\\n\\\r\nsnippet llSameGroup\\n\\\r\n\tllSameGroup(${1:key group})\\n\\\r\nsnippet llSay\\n\\\r\n\tllSay(${1:integer channel}, ${2:string msg});\\n\\\r\n\t$0\\n\\\r\nsnippet llScaleByFactor\\n\\\r\n\tllScaleByFactor(${1:float scaling_factor})\\n\\\r\nsnippet llScaleTexture\\n\\\r\n\tllScaleTexture(${1:float u}, ${2:float v}, ${3:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llScriptDanger\\n\\\r\n\tllScriptDanger(${1:vector pos})\\n\\\r\nsnippet llScriptProfiler\\n\\\r\n\tllScriptProfiler(${1:integer flags});\\n\\\r\n\t$0\\n\\\r\nsnippet llSendRemoteData\\n\\\r\n\tllSendRemoteData(${1:key channel}, ${2:string dest}, ${3:integer idata}, ${4:string sdata})\\n\\\r\nsnippet llSensor\\n\\\r\n\tllSensor(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc});\\n\\\r\n\t$0\\n\\\r\nsnippet llSensorRepeat\\n\\\r\n\tllSensorRepeat(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc}, ${6:float rate});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetAlpha\\n\\\r\n\tllSetAlpha(${1:float alpha}, ${2:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetAngularVelocity\\n\\\r\n\tllSetAngularVelocity(${1:vector force}, ${2:integer local});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetAnimationOverride\\n\\\r\n\tllSetAnimationOverride(${1:string anim_state}, ${2:string anim})\\n\\\r\nsnippet llSetBuoyancy\\n\\\r\n\tllSetBuoyancy(${1:float buoyancy});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetCameraAtOffset\\n\\\r\n\tllSetCameraAtOffset(${1:vector offset});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetCameraEyeOffset\\n\\\r\n\tllSetCameraEyeOffset(${1:vector offset});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetCameraParams\\n\\\r\n\tllSetCameraParams(${1:list rules});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetClickAction\\n\\\r\n\tllSetClickAction(${1:integer action});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetColor\\n\\\r\n\tllSetColor(${1:vector color}, ${2:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetContentType\\n\\\r\n\tllSetContentType(${1:key request_id}, ${2:integer content_type});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetDamage\\n\\\r\n\tllSetDamage(${1:float damage});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetForce\\n\\\r\n\tllSetForce(${1:vector force}, ${2:integer local});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetForceAndTorque\\n\\\r\n\tllSetForceAndTorque(${1:vector force}, ${2:vector torque}, ${3:integer local});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetHoverHeight\\n\\\r\n\tllSetHoverHeight(${1:float height}, ${2:integer water}, ${3:float tau});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetKeyframedMotion\\n\\\r\n\tllSetKeyframedMotion(${1:list keyframes}, ${2:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLinkAlpha\\n\\\r\n\tllSetLinkAlpha(${1:integer link}, ${2:float alpha}, ${3:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLinkCamera\\n\\\r\n\tllSetLinkCamera(${1:integer link}, ${2:vector eye}, ${3:vector at});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLinkColor\\n\\\r\n\tllSetLinkColor(${1:integer link}, ${2:vector color}, ${3:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLinkMedia\\n\\\r\n\tllSetLinkMedia(${1:integer link}, ${2:integer face}, ${3:list params});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLinkPrimitiveParams\\n\\\r\n\tllSetLinkPrimitiveParams(${1:integer link}, ${2:list rules});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLinkPrimitiveParamsFast\\n\\\r\n\tllSetLinkPrimitiveParamsFast(${1:integer link}, ${2:list rules});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLinkTexture\\n\\\r\n\tllSetLinkTexture(${1:integer link}, ${2:string texture}, ${3:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLinkTextureAnim\\n\\\r\n\tllSetLinkTextureAnim(${1:integer link}, ${2:integer mode}, ${3:integer face}, ${4:integer sizex}, ${5:integer sizey}, ${6:float start}, ${7:float length}, ${8:float rate});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetLocalRot\\n\\\r\n\tllSetLocalRot(${1:rotation rot});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetMemoryLimit\\n\\\r\n\tllSetMemoryLimit(${1:integer limit})\\n\\\r\nsnippet llSetObjectDesc\\n\\\r\n\tllSetObjectDesc(${1:string description});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetObjectName\\n\\\r\n\tllSetObjectName(${1:string name});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetParcelMusicURL\\n\\\r\n\tllSetParcelMusicURL(${1:string url});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetPayPrice\\n\\\r\n\tllSetPayPrice(${1:integer price}, [${2:integer price_button_a}, ${3:integer price_button_b}, ${4:integer price_button_c}, ${5:integer price_button_d}]);\\n\\\r\n\t$0\\n\\\r\nsnippet llSetPhysicsMaterial\\n\\\r\n\tllSetPhysicsMaterial(${1:integer mask}, ${2:float gravity_multiplier}, ${3:float restitution}, ${4:float friction}, ${5:float density});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetPos\\n\\\r\n\tllSetPos(${1:vector pos});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetPrimitiveParams\\n\\\r\n\tllSetPrimitiveParams(${1:list rules});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetPrimMediaParams\\n\\\r\n\tllSetPrimMediaParams(${1:integer face}, ${2:list params});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetRegionPos\\n\\\r\n\tllSetRegionPos(${1:vector position})\\n\\\r\nsnippet llSetRemoteScriptAccessPin\\n\\\r\n\tllSetRemoteScriptAccessPin(${1:integer pin});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetRot\\n\\\r\n\tllSetRot(${1:rotation rot});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetScale\\n\\\r\n\tllSetScale(${1:vector size});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetScriptState\\n\\\r\n\tllSetScriptState(${1:string name}, ${2:integer run});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetSitText\\n\\\r\n\tllSetSitText(${1:string text});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetSoundQueueing\\n\\\r\n\tllSetSoundQueueing(${1:integer queue});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetSoundRadius\\n\\\r\n\tllSetSoundRadius(${1:float radius});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetStatus\\n\\\r\n\tllSetStatus(${1:integer status}, ${2:integer value});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetText\\n\\\r\n\tllSetText(${1:string text}, ${2:vector color}, ${3:float alpha});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetTexture\\n\\\r\n\tllSetTexture(${1:string texture}, ${2:integer face});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetTextureAnim\\n\\\r\n\tllSetTextureAnim(${1:integer mode}, ${2:integer face}, ${3:integer sizex}, ${4:integer sizey}, ${5:float start}, ${6:float length}, ${7:float rate});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetTimerEvent\\n\\\r\n\tllSetTimerEvent(${1:float sec});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetTorque\\n\\\r\n\tllSetTorque(${1:vector torque}, ${2:integer local});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetTouchText\\n\\\r\n\tllSetTouchText(${1:string text});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetVehicleFlags\\n\\\r\n\tllSetVehicleFlags(${1:integer flags});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetVehicleFloatParam\\n\\\r\n\tllSetVehicleFloatParam(${1:integer param}, ${2:float value});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetVehicleRotationParam\\n\\\r\n\tllSetVehicleRotationParam(${1:integer param}, ${2:rotation rot});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetVehicleType\\n\\\r\n\tllSetVehicleType(${1:integer type});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetVehicleVectorParam\\n\\\r\n\tllSetVehicleVectorParam(${1:integer param}, ${2:vector vec});\\n\\\r\n\t$0\\n\\\r\nsnippet llSetVelocity\\n\\\r\n\tllSetVelocity(${1:vector force}, ${2:integer local});\\n\\\r\n\t$0\\n\\\r\nsnippet llSHA1String\\n\\\r\n\tllSHA1String(${1:string src})\\n\\\r\nsnippet llShout\\n\\\r\n\tllShout(${1:integer channel}, ${2:string msg});\\n\\\r\n\t$0\\n\\\r\nsnippet llSin\\n\\\r\n\tllSin(${1:float theta})\\n\\\r\nsnippet llSitTarget\\n\\\r\n\tllSitTarget(${1:vector offset}, ${2:rotation rot});\\n\\\r\n\t$0\\n\\\r\nsnippet llSleep\\n\\\r\n\tllSleep(${1:float sec});\\n\\\r\n\t$0\\n\\\r\nsnippet llSqrt\\n\\\r\n\tllSqrt(${1:float val})\\n\\\r\nsnippet llStartAnimation\\n\\\r\n\tllStartAnimation(${1:string anim});\\n\\\r\n\t$0\\n\\\r\nsnippet llStopAnimation\\n\\\r\n\tllStopAnimation(${1:string anim});\\n\\\r\n\t$0\\n\\\r\nsnippet llStopHover\\n\\\r\n\tllStopHover();\\n\\\r\n\t$0\\n\\\r\nsnippet llStopLookAt\\n\\\r\n\tllStopLookAt();\\n\\\r\n\t$0\\n\\\r\nsnippet llStopMoveToTarget\\n\\\r\n\tllStopMoveToTarget();\\n\\\r\n\t$0\\n\\\r\nsnippet llStopSound\\n\\\r\n\tllStopSound();\\n\\\r\n\t$0\\n\\\r\nsnippet llStringLength\\n\\\r\n\tllStringLength(${1:string str})\\n\\\r\nsnippet llStringToBase64\\n\\\r\n\tllStringToBase64(${1:string str})\\n\\\r\nsnippet llStringTrim\\n\\\r\n\tllStringTrim(${1:string src}, ${2:integer type})\\n\\\r\nsnippet llSubStringIndex\\n\\\r\n\tllSubStringIndex(${1:string source}, ${2:string pattern})\\n\\\r\nsnippet llTakeControls\\n\\\r\n\tllTakeControls(${1:integer controls}, ${2:integer accept}, ${3:integer pass_on});\\n\\\r\n\t$0\\n\\\r\nsnippet llTan\\n\\\r\n\tllTan(${1:float theta})\\n\\\r\nsnippet llTarget\\n\\\r\n\tllTarget(${1:vector position}, ${2:float range})\\n\\\r\nsnippet llTargetOmega\\n\\\r\n\tllTargetOmega(${1:vector axis}, ${2:float spinrate}, ${3:float gain});\\n\\\r\n\t$0\\n\\\r\nsnippet llTargetRemove\\n\\\r\n\tllTargetRemove(${1:integer handle});\\n\\\r\n\t$0\\n\\\r\nsnippet llTeleportAgent\\n\\\r\n\tllTeleportAgent(${1:key agent}, ${2:string landmark}, ${3:vector position}, ${4:vector look_at});\\n\\\r\n\t$0\\n\\\r\nsnippet llTeleportAgentGlobalCoords\\n\\\r\n\tllTeleportAgentGlobalCoords(${1:key agent}, ${2:vector global_coordinates}, ${3:vector region_coordinates}, ${4:vector look_at});\\n\\\r\n\t$0\\n\\\r\nsnippet llTeleportAgentHome\\n\\\r\n\tllTeleportAgentHome(${1:key agent});\\n\\\r\n\t$0\\n\\\r\nsnippet llTextBox\\n\\\r\n\tllTextBox(${1:key agent}, ${2:string message}, ${3:integer channel});\\n\\\r\n\t$0\\n\\\r\nsnippet llToLower\\n\\\r\n\tllToLower(${1:string src})\\n\\\r\nsnippet llToUpper\\n\\\r\n\tllToUpper(${1:string src})\\n\\\r\nsnippet llTransferLindenDollars\\n\\\r\n\tllTransferLindenDollars(${1:key destination}, ${2:integer amount})\\n\\\r\nsnippet llTriggerSound\\n\\\r\n\tllTriggerSound(${1:string sound}, ${2:float volume});\\n\\\r\n\t$0\\n\\\r\nsnippet llTriggerSoundLimited\\n\\\r\n\tllTriggerSoundLimited(${1:string sound}, ${2:float volume}, ${3:vector top_north_east}, ${4:vector bottom_south_west});\\n\\\r\n\t$0\\n\\\r\nsnippet llUnescapeURL\\n\\\r\n\tllUnescapeURL(${1:string url})\\n\\\r\nsnippet llUnSit\\n\\\r\n\tllUnSit(${1:key id});\\n\\\r\n\t$0\\n\\\r\nsnippet llUpdateCharacter\\n\\\r\n\tllUpdateCharacter(${1:list options})\\n\\\r\nsnippet llUpdateKeyValue\\n\\\r\n\tllUpdateKeyValue(${1:string k}, ${2:string v}, ${3:integer checked}, ${4:string ov})\\n\\\r\nsnippet llVecDist\\n\\\r\n\tllVecDist(${1:vector vec_a}, ${2:vector vec_b})\\n\\\r\nsnippet llVecMag\\n\\\r\n\tllVecMag(${1:vector vec})\\n\\\r\nsnippet llVecNorm\\n\\\r\n\tllVecNorm(${1:vector vec})\\n\\\r\nsnippet llVolumeDetect\\n\\\r\n\tllVolumeDetect(${1:integer detect});\\n\\\r\n\t$0\\n\\\r\nsnippet llWanderWithin\\n\\\r\n\tllWanderWithin(${1:vector origin}, ${2:vector dist}, ${3:list options});\\n\\\r\n\t$0\\n\\\r\nsnippet llWater\\n\\\r\n\tllWater(${1:vector offset});\\n\\\r\n\t$0\\n\\\r\nsnippet llWhisper\\n\\\r\n\tllWhisper(${1:integer channel}, ${2:string msg});\\n\\\r\n\t$0\\n\\\r\nsnippet llWind\\n\\\r\n\tllWind(${1:vector offset});\\n\\\r\n\t$0\\n\\\r\nsnippet llXorBase64\\n\\\r\n\tllXorBase64(${1:string str1}, ${2:string str2})\\n\\\r\nsnippet money\\n\\\r\n\tmoney(${1:key id}, ${2:integer amount})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet object_rez\\n\\\r\n\tobject_rez(${1:key id})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet on_rez\\n\\\r\n\ton_rez(${1:integer start_param})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet path_update\\n\\\r\n\tpath_update(${1:integer type}, ${2:list reserved})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet remote_data\\n\\\r\n\tremote_data(${1:integer event_type}, ${2:key channel}, ${3:key message_id}, ${4:string sender}, ${5:integer idata}, ${6:string sdata})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet run_time_permissions\\n\\\r\n\trun_time_permissions(${1:integer perm})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet sensor\\n\\\r\n\tsensor(${1:integer index})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet state\\n\\\r\n\tstate ${1:name}\\n\\\r\nsnippet touch\\n\\\r\n\ttouch(${1:integer index})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet touch_end\\n\\\r\n\ttouch_end(${1:integer index})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet touch_start\\n\\\r\n\ttouch_start(${1:integer index})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet transaction_result\\n\\\r\n\ttransaction_result(${1:key id}, ${2:integer success}, ${3:string data})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\nsnippet while\\n\\\r\n\twhile (${1:condition})\\n\\\r\n\t{\\n\\\r\n\t\t$0\\n\\\r\n\t}\\n\\\r\n\";\r\nexports.scope = \"lsl\";\r\n\r\n});                (function() {\r\n                    ace.require([\"ace/snippets/lsl\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "]},"metadata":{},"sourceType":"script"}