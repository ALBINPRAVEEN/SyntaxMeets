{"ast":null,"code":"ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DocCommentHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: \"\\\\/\\\\*(?=\\\\*)\",\n      next: start\n    };\n  };\n\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/jsx_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  var oop = require(\"../lib/oop\");\n\n  var lang = require(\"../lib/lang\");\n\n  var DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var JsxHighlightRules = function () {\n    var keywords = lang.arrayToMap((\"break|do|instanceof|typeof|case|else|new|var|catch|finally|return|void|continue|for|switch|default|while|function|this|\" + \"if|throw|\" + \"delete|in|try|\" + \"class|extends|super|import|from|into|implements|interface|static|mixin|override|abstract|final|\" + \"number|int|string|boolean|variant|\" + \"log|assert\").split(\"|\"));\n    var buildinConstants = lang.arrayToMap(\"null|true|false|NaN|Infinity|__FILE__|__LINE__|undefined\".split(\"|\"));\n    var reserved = lang.arrayToMap((\"debugger|with|\" + \"const|export|\" + \"let|private|public|yield|protected|\" + \"extern|native|as|operator|__fake__|__readonly__\").split(\"|\"));\n    var identifierRe = \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\";\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"string.regexp\",\n        regex: \"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F]+\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }, {\n        token: [\"storage.type\", \"text\", \"entity.name.function\"],\n        regex: \"(function)(\\\\s+)(\" + identifierRe + \")\"\n      }, {\n        token: function (value) {\n          if (value == \"this\") return \"variable.language\";else if (value == \"function\") return \"storage.type\";else if (keywords.hasOwnProperty(value) || reserved.hasOwnProperty(value)) return \"keyword\";else if (buildinConstants.hasOwnProperty(value)) return \"constant.language\";else if (/^_?[A-Z][a-zA-Z0-9_]*$/.test(value)) return \"language.support.class\";else return \"identifier\";\n        },\n        regex: identifierRe\n      }, {\n        token: \"keyword.operator\",\n        regex: \"!|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|==|=|!=|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({<]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}>]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n  };\n\n  oop.inherits(JsxHighlightRules, TextHighlightRules);\n  exports.JsxHighlightRules = JsxHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingBraceOutdent = function () {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/jsx\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/jsx_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/behaviour/cstyle\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var JsxHighlightRules = require(\"./jsx_highlight_rules\").JsxHighlightRules;\n\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n  var CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\n\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  function Mode() {\n    this.HighlightRules = JsxHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n  }\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/jsx\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/jsx\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/node_modules/ace-builds/src-noconflict/mode-jsx.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","lang","JsxHighlightRules","keywords","arrayToMap","split","buildinConstants","reserved","identifierRe","value","hasOwnProperty","test","embedRules","Range","MatchingBraceOutdent","checkOutdent","line","input","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","CstyleBehaviour","CStyleFoldMode","HighlightRules","$outdent","$behaviour","foldingRules","lineCommentStart","blockComment","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","type","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar DocCommentHighlightRules = function() {\r\n    this.$rules = {\r\n        \"start\" : [ {\r\n            token : \"comment.doc.tag\",\r\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\r\n        }, \r\n        DocCommentHighlightRules.getTagRule(),\r\n        {\r\n            defaultToken : \"comment.doc\",\r\n            caseInsensitive: true\r\n        }]\r\n    };\r\n};\r\n\r\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\r\n\r\nDocCommentHighlightRules.getTagRule = function(start) {\r\n    return {\r\n        token : \"comment.doc.tag.storage.type\",\r\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\r\n    };\r\n};\r\n\r\nDocCommentHighlightRules.getStartRule = function(start) {\r\n    return {\r\n        token : \"comment.doc\", // doc comment\r\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\r\n        next  : start\r\n    };\r\n};\r\n\r\nDocCommentHighlightRules.getEndRule = function (start) {\r\n    return {\r\n        token : \"comment.doc\", // closing comment\r\n        regex : \"\\\\*\\\\/\",\r\n        next  : start\r\n    };\r\n};\r\n\r\n\r\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\r\n\r\n});\r\n\r\nace.define(\"ace/mode/jsx_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\nvar oop = require(\"../lib/oop\");\r\nvar lang = require(\"../lib/lang\");\r\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar JsxHighlightRules = function() {\r\n    var keywords = lang.arrayToMap(\r\n        (\"break|do|instanceof|typeof|case|else|new|var|catch|finally|return|void|continue|for|switch|default|while|function|this|\" +\r\n         \"if|throw|\" +\r\n         \"delete|in|try|\" +\r\n         \"class|extends|super|import|from|into|implements|interface|static|mixin|override|abstract|final|\" +\r\n         \"number|int|string|boolean|variant|\" +\r\n         \"log|assert\").split(\"|\")\r\n    );\r\n    \r\n    var buildinConstants = lang.arrayToMap(\r\n        (\"null|true|false|NaN|Infinity|__FILE__|__LINE__|undefined\").split(\"|\")\r\n    );\r\n    \r\n    var reserved = lang.arrayToMap(\r\n        (\"debugger|with|\" +\r\n         \"const|export|\" +\r\n         \"let|private|public|yield|protected|\" +\r\n         \"extern|native|as|operator|__fake__|__readonly__\").split(\"|\")\r\n    );\r\n    \r\n    var identifierRe = \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\";\r\n    \r\n    this.$rules = {\r\n        \"start\" : [\r\n            {\r\n                token : \"comment\",\r\n                regex : \"\\\\/\\\\/.*$\"\r\n            },\r\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\r\n            {\r\n                token : \"comment\", // multi line comment\r\n                regex : \"\\\\/\\\\*\",\r\n                next : \"comment\"\r\n            }, {\r\n                token : \"string.regexp\",\r\n                regex : \"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\r\n            }, {\r\n                token : \"string\", // single line\r\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\r\n            }, {\r\n                token : \"string\", // single line\r\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\r\n            }, {\r\n                token : \"constant.numeric\", // hex\r\n                regex : \"0[xX][0-9a-fA-F]+\\\\b\"\r\n            }, {\r\n                token : \"constant.numeric\", // float\r\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\r\n            }, {\r\n                token : \"constant.language.boolean\",\r\n                regex : \"(?:true|false)\\\\b\"\r\n            }, {\r\n                token : [\r\n                    \"storage.type\",\r\n                    \"text\",\r\n                    \"entity.name.function\"\r\n                ],\r\n                regex : \"(function)(\\\\s+)(\" + identifierRe + \")\"\r\n            }, {\r\n                token : function(value) {\r\n                    if (value == \"this\")\r\n                        return \"variable.language\";\r\n                    else if (value == \"function\")\r\n                        return \"storage.type\";\r\n                    else if (keywords.hasOwnProperty(value) || reserved.hasOwnProperty(value))\r\n                        return \"keyword\";\r\n                    else if (buildinConstants.hasOwnProperty(value))\r\n                        return \"constant.language\";\r\n                    else if (/^_?[A-Z][a-zA-Z0-9_]*$/.test(value))\r\n                        return \"language.support.class\";\r\n                    else\r\n                        return \"identifier\";\r\n                },\r\n                regex : identifierRe\r\n            }, {\r\n                token : \"keyword.operator\",\r\n                regex : \"!|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|==|=|!=|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\r\n            }, {\r\n                token : \"punctuation.operator\",\r\n                regex : \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"\r\n            }, {\r\n                token : \"paren.lparen\",\r\n                regex : \"[[({<]\"\r\n            }, {\r\n                token : \"paren.rparen\",\r\n                regex : \"[\\\\])}>]\"\r\n            }, {\r\n                token : \"text\",\r\n                regex : \"\\\\s+\"\r\n            }\r\n        ],\r\n        \"comment\" : [\r\n            {\r\n                token : \"comment\", // closing comment\r\n                regex : \"\\\\*\\\\/\",\r\n                next : \"start\"\r\n            }, {\r\n                defaultToken : \"comment\"\r\n            }\r\n        ]\r\n    };\r\n    \r\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\r\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\r\n};\r\n\r\noop.inherits(JsxHighlightRules, TextHighlightRules);\r\n\r\nexports.JsxHighlightRules = JsxHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar Range = require(\"../range\").Range;\r\n\r\nvar MatchingBraceOutdent = function() {};\r\n\r\n(function() {\r\n\r\n    this.checkOutdent = function(line, input) {\r\n        if (! /^\\s+$/.test(line))\r\n            return false;\r\n\r\n        return /^\\s*\\}/.test(input);\r\n    };\r\n\r\n    this.autoOutdent = function(doc, row) {\r\n        var line = doc.getLine(row);\r\n        var match = line.match(/^(\\s*\\})/);\r\n\r\n        if (!match) return 0;\r\n\r\n        var column = match[1].length;\r\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\r\n\r\n        if (!openBracePos || openBracePos.row == row) return 0;\r\n\r\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\r\n        doc.replace(new Range(row, 0, row, column-1), indent);\r\n    };\r\n\r\n    this.$getIndent = function(line) {\r\n        return line.match(/^\\s*/)[0];\r\n    };\r\n\r\n}).call(MatchingBraceOutdent.prototype);\r\n\r\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\r\n});\r\n\r\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar Range = require(\"../../range\").Range;\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\n\r\nvar FoldMode = exports.FoldMode = function(commentRegex) {\r\n    if (commentRegex) {\r\n        this.foldingStartMarker = new RegExp(\r\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\r\n        );\r\n        this.foldingStopMarker = new RegExp(\r\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\r\n        );\r\n    }\r\n};\r\noop.inherits(FoldMode, BaseFoldMode);\r\n\r\n(function() {\r\n    \r\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\r\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\r\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\r\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\r\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\r\n    this._getFoldWidgetBase = this.getFoldWidget;\r\n    this.getFoldWidget = function(session, foldStyle, row) {\r\n        var line = session.getLine(row);\r\n    \r\n        if (this.singleLineBlockCommentRe.test(line)) {\r\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\r\n                return \"\";\r\n        }\r\n    \r\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\r\n    \r\n        if (!fw && this.startRegionRe.test(line))\r\n            return \"start\"; // lineCommentRegionStart\r\n    \r\n        return fw;\r\n    };\r\n\r\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\r\n        var line = session.getLine(row);\r\n        \r\n        if (this.startRegionRe.test(line))\r\n            return this.getCommentRegionBlock(session, line, row);\r\n        \r\n        var match = line.match(this.foldingStartMarker);\r\n        if (match) {\r\n            var i = match.index;\r\n\r\n            if (match[1])\r\n                return this.openingBracketBlock(session, match[1], row, i);\r\n                \r\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\r\n            \r\n            if (range && !range.isMultiLine()) {\r\n                if (forceMultiline) {\r\n                    range = this.getSectionRange(session, row);\r\n                } else if (foldStyle != \"all\")\r\n                    range = null;\r\n            }\r\n            \r\n            return range;\r\n        }\r\n\r\n        if (foldStyle === \"markbegin\")\r\n            return;\r\n\r\n        var match = line.match(this.foldingStopMarker);\r\n        if (match) {\r\n            var i = match.index + match[0].length;\r\n\r\n            if (match[1])\r\n                return this.closingBracketBlock(session, match[1], row, i);\r\n\r\n            return session.getCommentFoldRange(row, i, -1);\r\n        }\r\n    };\r\n    \r\n    this.getSectionRange = function(session, row) {\r\n        var line = session.getLine(row);\r\n        var startIndent = line.search(/\\S/);\r\n        var startRow = row;\r\n        var startColumn = line.length;\r\n        row = row + 1;\r\n        var endRow = row;\r\n        var maxRow = session.getLength();\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var indent = line.search(/\\S/);\r\n            if (indent === -1)\r\n                continue;\r\n            if  (startIndent > indent)\r\n                break;\r\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\r\n            \r\n            if (subRange) {\r\n                if (subRange.start.row <= startRow) {\r\n                    break;\r\n                } else if (subRange.isMultiLine()) {\r\n                    row = subRange.end.row;\r\n                } else if (startIndent == indent) {\r\n                    break;\r\n                }\r\n            }\r\n            endRow = row;\r\n        }\r\n        \r\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\r\n    };\r\n    this.getCommentRegionBlock = function(session, line, row) {\r\n        var startColumn = line.search(/\\s*$/);\r\n        var maxRow = session.getLength();\r\n        var startRow = row;\r\n        \r\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\r\n        var depth = 1;\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var m = re.exec(line);\r\n            if (!m) continue;\r\n            if (m[1]) depth--;\r\n            else depth++;\r\n\r\n            if (!depth) break;\r\n        }\r\n\r\n        var endRow = row;\r\n        if (endRow > startRow) {\r\n            return new Range(startRow, startColumn, endRow, line.length);\r\n        }\r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n\r\nace.define(\"ace/mode/jsx\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/jsx_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar JsxHighlightRules = require(\"./jsx_highlight_rules\").JsxHighlightRules;\r\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\r\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\r\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\r\n\r\nfunction Mode() {\r\n    this.HighlightRules = JsxHighlightRules;\r\n    this.$outdent = new MatchingBraceOutdent();\r\n    this.$behaviour = new CstyleBehaviour();\r\n    this.foldingRules = new CStyleFoldMode();\r\n}\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n\r\n    this.lineCommentStart = \"//\";\r\n    this.blockComment = {start: \"/*\", end: \"*/\"};\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n\r\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\r\n        var tokens = tokenizedLine.tokens;\r\n\r\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\r\n            return indent;\r\n        }\r\n\r\n        if (state == \"start\") {\r\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\r\n            if (match) {\r\n                indent += tab;\r\n            }\r\n        }\r\n\r\n        return indent;\r\n    };\r\n\r\n    this.checkOutdent = function(state, line, input) {\r\n        return this.$outdent.checkOutdent(line, input);\r\n    };\r\n\r\n    this.autoOutdent = function(state, doc, row) {\r\n        this.$outdent.autoOutdent(doc, row);\r\n    };\r\n\r\n    this.$id = \"ace/mode/jsx\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});                (function() {\r\n                    ace.require([\"ace/mode/jsx\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "]},"metadata":{},"sourceType":"script"}