{"ast":null,"code":"var _jsxFileName = \"D:\\\\dhruv codes\\\\SyntaxMeets\\\\frontend\\\\syntaxmeets\\\\src\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport Editor from './components/Editor';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.pad = undefined;\n  }\n\n  componentDidMount() {\n    var Sketchpad = require('responsive-sketchpad'); // Initialize Sketchpad\n\n\n    var el = document.getElementById('sketchpad');\n    var pad = new Sketchpad(el, {\n      line: {\n        color: '#f44335',\n        size: 5\n      }\n    }); // Set line color\n\n    pad.setLineColor('#f44336'); // Set line size\n\n    pad.setLineSize(10); // // Undo\n    // pad.undo();\n    // // Redo\n    // pad.redo();\n    // // Clear canvas\n    // pad.clear();\n    // // Resize canvas\n    // pad.resize(100);\n    // // Make read only\n    // pad.setReadOnly(true);\n  }\n\n  clearcanvas() {\n    var el = document.getElementById('sketchpad');\n    var pad = new Sketchpad(el);\n    pad.clear();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Editor, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"sketchpad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.clearcanvas,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"clear\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/dhruv codes/SyntaxMeets/frontend/syntaxmeets/src/App.js"],"names":["React","Component","Fragment","Editor","App","pad","undefined","componentDidMount","Sketchpad","require","el","document","getElementById","line","color","size","setLineColor","setLineSize","clearcanvas","clear","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BI,GAF0B,GAEpBC,SAFoB;AAAA;;AAI1BC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,SAAS,GAAGC,OAAO,CAAC,sBAAD,CAAvB,CADkB,CAGlB;;;AACA,QAAIC,EAAE,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAT;AACA,QAAIP,GAAG,GAAG,IAAIG,SAAJ,CAAcE,EAAd,EAAkB;AAC1BG,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,SADH;AAEJC,QAAAA,IAAI,EAAE;AAFF;AADoB,KAAlB,CAAV,CALkB,CAYlB;;AACAV,IAAAA,GAAG,CAACW,YAAJ,CAAiB,SAAjB,EAbkB,CAelB;;AACAX,IAAAA,GAAG,CAACY,WAAJ,CAAgB,EAAhB,EAhBkB,CAkBlB;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,QAAIR,EAAE,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAT;AACA,QAAIP,GAAG,GAAG,IAAIG,SAAJ,CAAcE,EAAd,CAAV;AACAL,IAAAA,GAAG,CAACc,KAAJ;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,KAAKF,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF;AAOD;;AAnDyB;;AAsD5B,eAAed,GAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport Editor from './components/Editor'\n\n\nclass App extends Component {\n\n  pad = undefined;\n\n  componentDidMount() {\n    var Sketchpad = require('responsive-sketchpad');\n\n    // Initialize Sketchpad\n    var el = document.getElementById('sketchpad');\n    var pad = new Sketchpad(el, {\n      line: {\n        color: '#f44335',\n        size: 5\n      }\n    });\n\n    // Set line color\n    pad.setLineColor('#f44336');\n\n    // Set line size\n    pad.setLineSize(10);\n\n    // // Undo\n    // pad.undo();\n\n    // // Redo\n    // pad.redo();\n\n    // // Clear canvas\n    // pad.clear();\n\n    // // Resize canvas\n    // pad.resize(100);\n\n    // // Make read only\n    // pad.setReadOnly(true);\n  }\n\n  clearcanvas() {\n    var el = document.getElementById('sketchpad');\n    var pad = new Sketchpad(el);\n    pad.clear();\n  }\n  render() {\n    return (\n      <Fragment>\n        <Editor />\n        <div id=\"sketchpad\"></div>\n        <button onClick={this.clearcanvas}>clear</button>\n      </Fragment>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}