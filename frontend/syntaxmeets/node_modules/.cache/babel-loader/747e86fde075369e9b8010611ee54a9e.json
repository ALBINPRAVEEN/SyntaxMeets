{"ast":null,"code":"ace.define(\"ace/mode/elm_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var ElmHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": \"as|case|class|data|default|deriving|do|else|export|foreign|\" + \"hiding|jsevent|if|import|in|infix|infixl|infixr|instance|let|\" + \"module|newtype|of|open|then|type|where|_|port|\\u03BB\"\n    }, \"identifier\");\n    var escapeRe = /\\\\(\\d+|['\"\\\\&trnbvf])/;\n    var smallRe = /[a-z_]/.source;\n    var largeRe = /[A-Z]/.source;\n    var idRe = /[a-z_A-Z0-9']/.source;\n    this.$rules = {\n      start: [{\n        token: \"string.start\",\n        regex: '\"',\n        next: \"string\"\n      }, {\n        token: \"string.character\",\n        regex: \"'(?:\" + escapeRe.source + \"|.)'?\"\n      }, {\n        regex: /0(?:[xX][0-9A-Fa-f]+|[oO][0-7]+)|\\d+(\\.\\d+)?([eE][-+]?\\d*)?/,\n        token: \"constant.numeric\"\n      }, {\n        token: \"comment\",\n        regex: \"--.*\"\n      }, {\n        token: \"keyword\",\n        regex: /\\.\\.|\\||:|=|\\\\|\"|->|<-|\\u2192/\n      }, {\n        token: \"keyword.operator\",\n        regex: /[-!#$%&*+.\\/<=>?@\\\\^|~:\\u03BB\\u2192]+/\n      }, {\n        token: \"operator.punctuation\",\n        regex: /[,;`]/\n      }, {\n        regex: largeRe + idRe + \"+\\\\.?\",\n        token: function (value) {\n          if (value[value.length - 1] == \".\") return \"entity.name.function\";\n          return \"constant.language\";\n        }\n      }, {\n        regex: \"^\" + smallRe + idRe + \"+\",\n        token: function (value) {\n          return \"constant.language\";\n        }\n      }, {\n        token: keywordMapper,\n        regex: \"[\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]+\\\\b\"\n      }, {\n        regex: \"{-#?\",\n        token: \"comment.start\",\n        onMatch: function (value, currentState, stack) {\n          this.next = value.length == 2 ? \"blockComment\" : \"docComment\";\n          return this.token;\n        }\n      }, {\n        token: \"variable.language\",\n        regex: /\\[markdown\\|/,\n        next: \"markdown\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]/\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      }],\n      markdown: [{\n        regex: /\\|\\]/,\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      blockComment: [{\n        regex: \"{-\",\n        token: \"comment.start\",\n        push: \"blockComment\"\n      }, {\n        regex: \"-}\",\n        token: \"comment.end\",\n        next: \"pop\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      docComment: [{\n        regex: \"{-\",\n        token: \"comment.start\",\n        push: \"docComment\"\n      }, {\n        regex: \"-}\",\n        token: \"comment.end\",\n        next: \"pop\"\n      }, {\n        defaultToken: \"doc.comment\"\n      }],\n      string: [{\n        token: \"constant.language.escape\",\n        regex: escapeRe\n      }, {\n        token: \"text\",\n        regex: /\\\\(\\s|$)/,\n        next: \"stringGap\"\n      }, {\n        token: \"string.end\",\n        regex: '\"',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      stringGap: [{\n        token: \"text\",\n        regex: /\\\\/,\n        next: \"string\"\n      }, {\n        token: \"error\",\n        regex: \"\",\n        next: \"start\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(ElmHighlightRules, TextHighlightRules);\n  exports.ElmHighlightRules = ElmHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/elm\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/elm_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var HighlightRules = require(\"./elm_highlight_rules\").ElmHighlightRules;\n\n  var FoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = HighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = {\n      start: \"{-\",\n      end: \"-}\",\n      nestable: true\n    };\n    this.$id = \"ace/mode/elm\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/elm\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/node_modules/ace-builds/src-noconflict/mode-elm.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","ElmHighlightRules","keywordMapper","createKeywordMapper","escapeRe","smallRe","source","largeRe","idRe","$rules","start","token","regex","next","value","length","onMatch","currentState","stack","markdown","defaultToken","blockComment","push","docComment","string","stringGap","normalizeRules","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","replace","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","nestable","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/elm_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar ElmHighlightRules = function() {\r\n    var keywordMapper = this.createKeywordMapper({\r\n       \"keyword\": \"as|case|class|data|default|deriving|do|else|export|foreign|\" +\r\n            \"hiding|jsevent|if|import|in|infix|infixl|infixr|instance|let|\" +\r\n            \"module|newtype|of|open|then|type|where|_|port|\\u03BB\"\r\n    }, \"identifier\");\r\n    \r\n    var escapeRe = /\\\\(\\d+|['\"\\\\&trnbvf])/;\r\n    \r\n    var smallRe = /[a-z_]/.source;\r\n    var largeRe = /[A-Z]/.source;\r\n    var idRe = /[a-z_A-Z0-9']/.source;\r\n\r\n    this.$rules = {\r\n        start: [{\r\n            token: \"string.start\",\r\n            regex: '\"',\r\n            next: \"string\"\r\n        }, {\r\n            token: \"string.character\",\r\n            regex: \"'(?:\" + escapeRe.source + \"|.)'?\"\r\n        }, {\r\n            regex: /0(?:[xX][0-9A-Fa-f]+|[oO][0-7]+)|\\d+(\\.\\d+)?([eE][-+]?\\d*)?/,\r\n            token: \"constant.numeric\"\r\n        }, {\r\n            token: \"comment\",\r\n            regex: \"--.*\"\r\n        }, {\r\n            token : \"keyword\",\r\n            regex : /\\.\\.|\\||:|=|\\\\|\"|->|<-|\\u2192/\r\n        }, {\r\n            token : \"keyword.operator\",\r\n            regex : /[-!#$%&*+.\\/<=>?@\\\\^|~:\\u03BB\\u2192]+/\r\n        }, {\r\n            token : \"operator.punctuation\",\r\n            regex : /[,;`]/\r\n        }, {\r\n            regex : largeRe + idRe + \"+\\\\.?\",\r\n            token : function(value) {\r\n                if (value[value.length - 1] == \".\")\r\n                    return \"entity.name.function\"; \r\n                return \"constant.language\"; \r\n            }\r\n        }, {\r\n            regex : \"^\" + smallRe  + idRe + \"+\",\r\n            token : function(value) {\r\n                return \"constant.language\"; \r\n            }\r\n        }, {\r\n            token : keywordMapper,\r\n            regex : \"[\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]+\\\\b\"\r\n        }, {\r\n            regex: \"{-#?\",\r\n            token: \"comment.start\",\r\n            onMatch: function(value, currentState, stack) {\r\n                this.next = value.length == 2 ? \"blockComment\" : \"docComment\";\r\n                return this.token;\r\n            }\r\n        }, {\r\n            token: \"variable.language\",\r\n            regex: /\\[markdown\\|/,\r\n            next: \"markdown\"\r\n        }, {\r\n            token: \"paren.lparen\",\r\n            regex: /[\\[({]/ \r\n        }, {\r\n            token: \"paren.rparen\",\r\n            regex: /[\\])}]/\r\n        } ],\r\n        markdown: [{\r\n            regex: /\\|\\]/,\r\n            next: \"start\"\r\n        }, {\r\n            defaultToken : \"string\"\r\n        }],\r\n        blockComment: [{\r\n            regex: \"{-\",\r\n            token: \"comment.start\",\r\n            push: \"blockComment\"\r\n        }, {\r\n            regex: \"-}\",\r\n            token: \"comment.end\",\r\n            next: \"pop\"\r\n        }, {\r\n            defaultToken: \"comment\"\r\n        }],\r\n        docComment: [{\r\n            regex: \"{-\",\r\n            token: \"comment.start\",\r\n            push: \"docComment\"\r\n        }, {\r\n            regex: \"-}\",\r\n            token: \"comment.end\",\r\n            next: \"pop\" \r\n        }, {\r\n            defaultToken: \"doc.comment\"\r\n        }],\r\n        string: [{\r\n            token: \"constant.language.escape\",\r\n            regex: escapeRe\r\n        }, {\r\n            token: \"text\",\r\n            regex: /\\\\(\\s|$)/,\r\n            next: \"stringGap\"\r\n        }, {\r\n            token: \"string.end\",\r\n            regex: '\"',\r\n            next: \"start\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        stringGap: [{\r\n            token: \"text\",\r\n            regex: /\\\\/,\r\n            next: \"string\"\r\n        }, {\r\n            token: \"error\",\r\n            regex: \"\",\r\n            next: \"start\"\r\n        }]\r\n    };\r\n    \r\n    this.normalizeRules();\r\n};\r\n\r\noop.inherits(ElmHighlightRules, TextHighlightRules);\r\n\r\nexports.ElmHighlightRules = ElmHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar Range = require(\"../../range\").Range;\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\n\r\nvar FoldMode = exports.FoldMode = function(commentRegex) {\r\n    if (commentRegex) {\r\n        this.foldingStartMarker = new RegExp(\r\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\r\n        );\r\n        this.foldingStopMarker = new RegExp(\r\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\r\n        );\r\n    }\r\n};\r\noop.inherits(FoldMode, BaseFoldMode);\r\n\r\n(function() {\r\n    \r\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\r\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\r\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\r\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\r\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\r\n    this._getFoldWidgetBase = this.getFoldWidget;\r\n    this.getFoldWidget = function(session, foldStyle, row) {\r\n        var line = session.getLine(row);\r\n    \r\n        if (this.singleLineBlockCommentRe.test(line)) {\r\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\r\n                return \"\";\r\n        }\r\n    \r\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\r\n    \r\n        if (!fw && this.startRegionRe.test(line))\r\n            return \"start\"; // lineCommentRegionStart\r\n    \r\n        return fw;\r\n    };\r\n\r\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\r\n        var line = session.getLine(row);\r\n        \r\n        if (this.startRegionRe.test(line))\r\n            return this.getCommentRegionBlock(session, line, row);\r\n        \r\n        var match = line.match(this.foldingStartMarker);\r\n        if (match) {\r\n            var i = match.index;\r\n\r\n            if (match[1])\r\n                return this.openingBracketBlock(session, match[1], row, i);\r\n                \r\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\r\n            \r\n            if (range && !range.isMultiLine()) {\r\n                if (forceMultiline) {\r\n                    range = this.getSectionRange(session, row);\r\n                } else if (foldStyle != \"all\")\r\n                    range = null;\r\n            }\r\n            \r\n            return range;\r\n        }\r\n\r\n        if (foldStyle === \"markbegin\")\r\n            return;\r\n\r\n        var match = line.match(this.foldingStopMarker);\r\n        if (match) {\r\n            var i = match.index + match[0].length;\r\n\r\n            if (match[1])\r\n                return this.closingBracketBlock(session, match[1], row, i);\r\n\r\n            return session.getCommentFoldRange(row, i, -1);\r\n        }\r\n    };\r\n    \r\n    this.getSectionRange = function(session, row) {\r\n        var line = session.getLine(row);\r\n        var startIndent = line.search(/\\S/);\r\n        var startRow = row;\r\n        var startColumn = line.length;\r\n        row = row + 1;\r\n        var endRow = row;\r\n        var maxRow = session.getLength();\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var indent = line.search(/\\S/);\r\n            if (indent === -1)\r\n                continue;\r\n            if  (startIndent > indent)\r\n                break;\r\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\r\n            \r\n            if (subRange) {\r\n                if (subRange.start.row <= startRow) {\r\n                    break;\r\n                } else if (subRange.isMultiLine()) {\r\n                    row = subRange.end.row;\r\n                } else if (startIndent == indent) {\r\n                    break;\r\n                }\r\n            }\r\n            endRow = row;\r\n        }\r\n        \r\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\r\n    };\r\n    this.getCommentRegionBlock = function(session, line, row) {\r\n        var startColumn = line.search(/\\s*$/);\r\n        var maxRow = session.getLength();\r\n        var startRow = row;\r\n        \r\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\r\n        var depth = 1;\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var m = re.exec(line);\r\n            if (!m) continue;\r\n            if (m[1]) depth--;\r\n            else depth++;\r\n\r\n            if (!depth) break;\r\n        }\r\n\r\n        var endRow = row;\r\n        if (endRow > startRow) {\r\n            return new Range(startRow, startColumn, endRow, line.length);\r\n        }\r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n\r\nace.define(\"ace/mode/elm\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/elm_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar HighlightRules = require(\"./elm_highlight_rules\").ElmHighlightRules;\r\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = HighlightRules;\r\n    this.foldingRules = new FoldMode();\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n    this.lineCommentStart = \"--\";\r\n    this.blockComment = {start: \"{-\", end: \"-}\", nestable: true};\r\n    this.$id = \"ace/mode/elm\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});                (function() {\r\n                    ace.require([\"ace/mode/elm\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "]},"metadata":{},"sourceType":"script"}