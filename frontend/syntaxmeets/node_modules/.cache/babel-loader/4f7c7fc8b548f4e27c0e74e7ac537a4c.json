{"ast":null,"code":"ace.define(\"ace/mode/tex_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var lang = require(\"../lib/lang\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var TexHighlightRules = function (textClass) {\n    if (!textClass) textClass = \"text\";\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"%.*$\"\n      }, {\n        token: textClass,\n        // non-command\n        regex: \"\\\\\\\\[$&%#\\\\{\\\\}]\"\n      }, {\n        token: \"keyword\",\n        // command\n        regex: \"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\",\n        next: \"nospell\"\n      }, {\n        token: \"keyword\",\n        // command\n        regex: \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: textClass,\n        regex: \"\\\\s+\"\n      }],\n      \"nospell\": [{\n        token: \"comment\",\n        regex: \"%.*$\",\n        next: \"start\"\n      }, {\n        token: \"nospell.\" + textClass,\n        // non-command\n        regex: \"\\\\\\\\[$&%#\\\\{\\\\}]\"\n      }, {\n        token: \"keyword\",\n        // command\n        regex: \"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\"\n      }, {\n        token: \"keyword\",\n        // command\n        regex: \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\",\n        next: \"start\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"[\\\\])]\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"}\",\n        next: \"start\"\n      }, {\n        token: \"nospell.\" + textClass,\n        regex: \"\\\\s+\"\n      }, {\n        token: \"nospell.\" + textClass,\n        regex: \"\\\\w+\"\n      }]\n    };\n  };\n\n  oop.inherits(TexHighlightRules, TextHighlightRules);\n  exports.TexHighlightRules = TexHighlightRules;\n});\nace.define(\"ace/mode/r_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text_highlight_rules\", \"ace/mode/tex_highlight_rules\"], function (require, exports, module) {\n  var oop = require(\"../lib/oop\");\n\n  var lang = require(\"../lib/lang\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var TexHighlightRules = require(\"./tex_highlight_rules\").TexHighlightRules;\n\n  var RHighlightRules = function () {\n    var keywords = lang.arrayToMap(\"function|if|in|break|next|repeat|else|for|return|switch|while|try|tryCatch|stop|warning|require|library|attach|detach|source|setMethod|setGeneric|setGroupGeneric|setClass\".split(\"|\"));\n    var buildinConstants = lang.arrayToMap((\"NULL|NA|TRUE|FALSE|T|F|Inf|NaN|NA_integer_|NA_real_|NA_character_|\" + \"NA_complex_\").split(\"|\"));\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.sectionhead\",\n        regex: \"#+(?!').*(?:----|====|####)\\\\s*$\"\n      }, {\n        token: \"comment\",\n        regex: \"#+'\",\n        next: \"rd-start\"\n      }, {\n        token: \"comment\",\n        regex: \"#.*$\"\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: '[\"]',\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: \"[']\",\n        next: \"qstring\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F]+[Li]?\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // explicit integer\n        regex: \"\\\\d+L\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // number\n        regex: \"\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // number with leading decimal\n        regex: \"\\\\.\\\\d+(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\"\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:TRUE|FALSE|T|F)\\\\b\"\n      }, {\n        token: \"identifier\",\n        regex: \"`.*?`\"\n      }, {\n        onMatch: function (value) {\n          if (keywords[value]) return \"keyword\";else if (buildinConstants[value]) return \"constant.language\";else if (value == '...' || value.match(/^\\.\\.\\d+$/)) return \"variable.language\";else return \"identifier\";\n        },\n        regex: \"[a-zA-Z.][a-zA-Z0-9._]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"%%|>=|<=|==|!=|\\\\->|<\\\\-|\\\\|\\\\||&&|=|\\\\+|\\\\-|\\\\*|/|\\\\^|>|<|!|&|\\\\||~|\\\\$|:\"\n      }, {\n        token: \"keyword.operator\",\n        // infix operators\n        regex: \"%.*?%\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"qqstring\": [{\n        token: \"string\",\n        regex: '(?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?\"',\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: '.+'\n      }],\n      \"qstring\": [{\n        token: \"string\",\n        regex: \"(?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?'\",\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: '.+'\n      }]\n    };\n    var rdRules = new TexHighlightRules(\"comment\").getRules();\n\n    for (var i = 0; i < rdRules[\"start\"].length; i++) {\n      rdRules[\"start\"][i].token += \".virtual-comment\";\n    }\n\n    this.addRules(rdRules, \"rd-\");\n    this.$rules[\"rd-start\"].unshift({\n      token: \"text\",\n      regex: \"^\",\n      next: \"start\"\n    });\n    this.$rules[\"rd-start\"].unshift({\n      token: \"keyword\",\n      regex: \"@(?!@)[^ ]*\"\n    });\n    this.$rules[\"rd-start\"].unshift({\n      token: \"comment\",\n      regex: \"@@\"\n    });\n    this.$rules[\"rd-start\"].push({\n      token: \"comment\",\n      regex: \"[^%\\\\\\\\[({\\\\])}]+\"\n    });\n  };\n\n  oop.inherits(RHighlightRules, TextHighlightRules);\n  exports.RHighlightRules = RHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingBraceOutdent = function () {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/r\", [\"require\", \"exports\", \"module\", \"ace/unicode\", \"ace/range\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/text_highlight_rules\", \"ace/mode/r_highlight_rules\", \"ace/mode/matching_brace_outdent\"], function (require, exports, module) {\n  \"use strict\";\n\n  var unicode = require(\"../unicode\");\n\n  var Range = require(\"../range\").Range;\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var RHighlightRules = require(\"./r_highlight_rules\").RHighlightRules;\n\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n  var Mode = function () {\n    this.HighlightRules = RHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.tokenRe = new RegExp(\"^[\" + unicode.wordChars + \"._]+\", \"g\");\n    this.nonTokenRe = new RegExp(\"^(?:[^\" + unicode.wordChars + \"._]|\\s])+\", \"g\");\n    this.$id = \"ace/mode/r\";\n    this.snippetFileId = \"ace/snippets/r\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/r\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/node_modules/ace-builds/src-noconflict/mode-r.js"],"names":["ace","define","require","exports","module","oop","lang","TextHighlightRules","TexHighlightRules","textClass","$rules","token","regex","next","inherits","RHighlightRules","keywords","arrayToMap","split","buildinConstants","onMatch","value","match","rdRules","getRules","i","length","addRules","unshift","push","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","column","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","unicode","TextMode","Mode","HighlightRules","$outdent","$behaviour","$defaultBehaviour","lineCommentStart","tokenRe","RegExp","wordChars","nonTokenRe","$id","snippetFileId","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/tex_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar lang = require(\"../lib/lang\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar TexHighlightRules = function(textClass) {\r\n\r\n    if (!textClass)\r\n        textClass = \"text\";\r\n\r\n    this.$rules = {\r\n        \"start\" : [\r\n            {\r\n                token : \"comment\",\r\n                regex : \"%.*$\"\r\n            }, {\r\n                token : textClass, // non-command\r\n                regex : \"\\\\\\\\[$&%#\\\\{\\\\}]\"\r\n            }, {\r\n                token : \"keyword\", // command\r\n                regex : \"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\",\r\n               next : \"nospell\"\r\n            }, {\r\n                token : \"keyword\", // command\r\n                regex : \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\"\r\n            }, {\r\n               token : \"paren.keyword.operator\",\r\n                regex : \"[[({]\"\r\n            }, {\r\n               token : \"paren.keyword.operator\",\r\n                regex : \"[\\\\])}]\"\r\n            }, {\r\n                token : textClass,\r\n                regex : \"\\\\s+\"\r\n            }\r\n        ],\r\n        \"nospell\" : [\r\n           {\r\n               token : \"comment\",\r\n               regex : \"%.*$\",\r\n               next : \"start\"\r\n           }, {\r\n               token : \"nospell.\" + textClass, // non-command\r\n               regex : \"\\\\\\\\[$&%#\\\\{\\\\}]\"\r\n           }, {\r\n               token : \"keyword\", // command\r\n               regex : \"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\"\r\n           }, {\r\n               token : \"keyword\", // command\r\n               regex : \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\",\r\n               next : \"start\"\r\n           }, {\r\n               token : \"paren.keyword.operator\",\r\n               regex : \"[[({]\"\r\n           }, {\r\n               token : \"paren.keyword.operator\",\r\n               regex : \"[\\\\])]\"\r\n           }, {\r\n               token : \"paren.keyword.operator\",\r\n               regex : \"}\",\r\n               next : \"start\"\r\n           }, {\r\n               token : \"nospell.\" + textClass,\r\n               regex : \"\\\\s+\"\r\n           }, {\r\n               token : \"nospell.\" + textClass,\r\n               regex : \"\\\\w+\"\r\n           }\r\n        ]\r\n    };\r\n};\r\n\r\noop.inherits(TexHighlightRules, TextHighlightRules);\r\n\r\nexports.TexHighlightRules = TexHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/r_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\",\"ace/mode/tex_highlight_rules\"], function(require, exports, module)\r\n{\r\n\r\n   var oop = require(\"../lib/oop\");\r\n   var lang = require(\"../lib/lang\");\r\n   var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n   var TexHighlightRules = require(\"./tex_highlight_rules\").TexHighlightRules;\r\n\r\n   var RHighlightRules = function()\r\n   {\r\n\r\n      var keywords = lang.arrayToMap(\r\n            (\"function|if|in|break|next|repeat|else|for|return|switch|while|try|tryCatch|stop|warning|require|library|attach|detach|source|setMethod|setGeneric|setGroupGeneric|setClass\")\r\n                  .split(\"|\")\r\n            );\r\n\r\n      var buildinConstants = lang.arrayToMap(\r\n            (\"NULL|NA|TRUE|FALSE|T|F|Inf|NaN|NA_integer_|NA_real_|NA_character_|\" +\r\n             \"NA_complex_\").split(\"|\")\r\n            );\r\n\r\n      this.$rules = {\r\n         \"start\" : [\r\n            {\r\n               token : \"comment.sectionhead\",\r\n               regex : \"#+(?!').*(?:----|====|####)\\\\s*$\"\r\n            },\r\n            {\r\n               token : \"comment\",\r\n               regex : \"#+'\",\r\n               next : \"rd-start\"\r\n            },\r\n            {\r\n               token : \"comment\",\r\n               regex : \"#.*$\"\r\n            },\r\n            {\r\n               token : \"string\", // multi line string start\r\n               regex : '[\"]',\r\n               next : \"qqstring\"\r\n            },\r\n            {\r\n               token : \"string\", // multi line string start\r\n               regex : \"[']\",\r\n               next : \"qstring\"\r\n            },\r\n            {\r\n               token : \"constant.numeric\", // hex\r\n               regex : \"0[xX][0-9a-fA-F]+[Li]?\\\\b\"\r\n            },\r\n            {\r\n               token : \"constant.numeric\", // explicit integer\r\n               regex : \"\\\\d+L\\\\b\"\r\n            },\r\n            {\r\n               token : \"constant.numeric\", // number\r\n               regex : \"\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\"\r\n            },\r\n            {\r\n               token : \"constant.numeric\", // number with leading decimal\r\n               regex : \"\\\\.\\\\d+(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\"\r\n            },\r\n            {\r\n               token : \"constant.language.boolean\",\r\n               regex : \"(?:TRUE|FALSE|T|F)\\\\b\"\r\n            },\r\n            {\r\n               token : \"identifier\",\r\n               regex : \"`.*?`\"\r\n            },\r\n            {\r\n               onMatch : function(value) {\r\n                  if (keywords[value])\r\n                     return \"keyword\";\r\n                  else if (buildinConstants[value])\r\n                     return \"constant.language\";\r\n                  else if (value == '...' || value.match(/^\\.\\.\\d+$/))\r\n                     return \"variable.language\";\r\n                  else\r\n                     return \"identifier\";\r\n               },\r\n               regex : \"[a-zA-Z.][a-zA-Z0-9._]*\\\\b\"\r\n            },\r\n            {\r\n               token : \"keyword.operator\",\r\n               regex : \"%%|>=|<=|==|!=|\\\\->|<\\\\-|\\\\|\\\\||&&|=|\\\\+|\\\\-|\\\\*|/|\\\\^|>|<|!|&|\\\\||~|\\\\$|:\"\r\n            },\r\n            {\r\n               token : \"keyword.operator\", // infix operators\r\n               regex : \"%.*?%\"\r\n            },\r\n            {\r\n               token : \"paren.keyword.operator\",\r\n               regex : \"[[({]\"\r\n            },\r\n            {\r\n               token : \"paren.keyword.operator\",\r\n               regex : \"[\\\\])}]\"\r\n            },\r\n            {\r\n               token : \"text\",\r\n               regex : \"\\\\s+\"\r\n            }\r\n         ],\r\n         \"qqstring\" : [\r\n            {\r\n               token : \"string\",\r\n               regex : '(?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?\"',\r\n               next : \"start\"\r\n            },\r\n            {\r\n               token : \"string\",\r\n               regex : '.+'\r\n            }\r\n         ],\r\n         \"qstring\" : [\r\n            {\r\n               token : \"string\",\r\n               regex : \"(?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?'\",\r\n               next : \"start\"\r\n            },\r\n            {\r\n               token : \"string\",\r\n               regex : '.+'\r\n            }\r\n         ]\r\n      };\r\n\r\n      var rdRules = new TexHighlightRules(\"comment\").getRules();\r\n      for (var i = 0; i < rdRules[\"start\"].length; i++) {\r\n         rdRules[\"start\"][i].token += \".virtual-comment\";\r\n      }\r\n\r\n      this.addRules(rdRules, \"rd-\");\r\n      this.$rules[\"rd-start\"].unshift({\r\n          token: \"text\",\r\n          regex: \"^\",\r\n          next: \"start\"\r\n      });\r\n      this.$rules[\"rd-start\"].unshift({\r\n         token : \"keyword\",\r\n         regex : \"@(?!@)[^ ]*\"\r\n      });\r\n      this.$rules[\"rd-start\"].unshift({\r\n         token : \"comment\",\r\n         regex : \"@@\"\r\n      });\r\n      this.$rules[\"rd-start\"].push({\r\n         token : \"comment\",\r\n         regex : \"[^%\\\\\\\\[({\\\\])}]+\"\r\n      });\r\n   };\r\n\r\n   oop.inherits(RHighlightRules, TextHighlightRules);\r\n\r\n   exports.RHighlightRules = RHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar Range = require(\"../range\").Range;\r\n\r\nvar MatchingBraceOutdent = function() {};\r\n\r\n(function() {\r\n\r\n    this.checkOutdent = function(line, input) {\r\n        if (! /^\\s+$/.test(line))\r\n            return false;\r\n\r\n        return /^\\s*\\}/.test(input);\r\n    };\r\n\r\n    this.autoOutdent = function(doc, row) {\r\n        var line = doc.getLine(row);\r\n        var match = line.match(/^(\\s*\\})/);\r\n\r\n        if (!match) return 0;\r\n\r\n        var column = match[1].length;\r\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\r\n\r\n        if (!openBracePos || openBracePos.row == row) return 0;\r\n\r\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\r\n        doc.replace(new Range(row, 0, row, column-1), indent);\r\n    };\r\n\r\n    this.$getIndent = function(line) {\r\n        return line.match(/^\\s*/)[0];\r\n    };\r\n\r\n}).call(MatchingBraceOutdent.prototype);\r\n\r\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\r\n});\r\n\r\nace.define(\"ace/mode/r\",[\"require\",\"exports\",\"module\",\"ace/unicode\",\"ace/range\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/text_highlight_rules\",\"ace/mode/r_highlight_rules\",\"ace/mode/matching_brace_outdent\"], function(require, exports, module) {\r\n   \"use strict\";\r\n\r\n   var unicode = require(\"../unicode\");\r\n   var Range = require(\"../range\").Range;\r\n   var oop = require(\"../lib/oop\");\r\n   var TextMode = require(\"./text\").Mode;\r\n   var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n   var RHighlightRules = require(\"./r_highlight_rules\").RHighlightRules;\r\n   var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\r\n\r\n   var Mode = function(){\r\n      this.HighlightRules = RHighlightRules;\r\n      this.$outdent = new MatchingBraceOutdent();\r\n      this.$behaviour = this.$defaultBehaviour;\r\n   };\r\n   oop.inherits(Mode, TextMode);\r\n\r\n   (function() {\r\n      this.lineCommentStart = \"#\";\r\n      this.tokenRe = new RegExp(\"^[\" + unicode.wordChars + \"._]+\", \"g\");\r\n\r\n      this.nonTokenRe = new RegExp(\"^(?:[^\" + unicode.wordChars + \"._]|\\s])+\", \"g\");\r\n       this.$id = \"ace/mode/r\";\r\n       this.snippetFileId = \"ace/snippets/r\";\r\n   }).call(Mode.prototype);\r\n   exports.Mode = Mode;\r\n});                (function() {\r\n                    ace.require([\"ace/mode/r\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "]},"metadata":{},"sourceType":"script"}