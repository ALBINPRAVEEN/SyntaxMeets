{"ast":null,"code":"ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DocCommentHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: \"\\\\/\\\\*(?=\\\\*)\",\n      next: start\n    };\n  };\n\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/java_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var JavaHighlightRules = function () {\n    var keywords = \"abstract|continue|for|new|switch|\" + \"assert|default|goto|package|synchronized|\" + \"boolean|do|if|private|this|\" + \"break|double|implements|protected|throw|\" + \"byte|else|import|public|throws|\" + \"case|enum|instanceof|return|transient|\" + \"catch|extends|int|short|try|\" + \"char|final|interface|static|void|\" + \"class|finally|long|strictfp|volatile|\" + \"const|float|native|super|while|\" + \"var\";\n    var buildinConstants = \"null|Infinity|NaN|undefined\";\n    var langClasses = \"AbstractMethodError|AssertionError|ClassCircularityError|\" + \"ClassFormatError|Deprecated|EnumConstantNotPresentException|\" + \"ExceptionInInitializerError|IllegalAccessError|\" + \"IllegalThreadStateException|InstantiationError|InternalError|\" + \"NegativeArraySizeException|NoSuchFieldError|Override|Process|\" + \"ProcessBuilder|SecurityManager|StringIndexOutOfBoundsException|\" + \"SuppressWarnings|TypeNotPresentException|UnknownError|\" + \"UnsatisfiedLinkError|UnsupportedClassVersionError|VerifyError|\" + \"InstantiationException|IndexOutOfBoundsException|\" + \"ArrayIndexOutOfBoundsException|CloneNotSupportedException|\" + \"NoSuchFieldException|IllegalArgumentException|NumberFormatException|\" + \"SecurityException|Void|InheritableThreadLocal|IllegalStateException|\" + \"InterruptedException|NoSuchMethodException|IllegalAccessException|\" + \"UnsupportedOperationException|Enum|StrictMath|Package|Compiler|\" + \"Readable|Runtime|StringBuilder|Math|IncompatibleClassChangeError|\" + \"NoSuchMethodError|ThreadLocal|RuntimePermission|ArithmeticException|\" + \"NullPointerException|Long|Integer|Short|Byte|Double|Number|Float|\" + \"Character|Boolean|StackTraceElement|Appendable|StringBuffer|\" + \"Iterable|ThreadGroup|Runnable|Thread|IllegalMonitorStateException|\" + \"StackOverflowError|OutOfMemoryError|VirtualMachineError|\" + \"ArrayStoreException|ClassCastException|LinkageError|\" + \"NoClassDefFoundError|ClassNotFoundException|RuntimeException|\" + \"Exception|ThreadDeath|Error|Throwable|System|ClassLoader|\" + \"Cloneable|Class|CharSequence|Comparable|String|Object\";\n    var keywordMapper = this.createKeywordMapper({\n      \"variable.language\": \"this\",\n      \"keyword\": keywords,\n      \"constant.language\": buildinConstants,\n      \"support.function\": langClasses\n    }, \"identifier\");\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: /0(?:[xX][0-9a-fA-F][0-9a-fA-F_]*|[bB][01][01_]*)[LlSsDdFfYy]?\\b/\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: /[+-]?\\d[\\d_]*(?:(?:\\.[\\d_]*)?(?:[eE][+-]?[\\d_]+)?)?[LlSsDdFfYy]?\\b/\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }, {\n        regex: \"(open(?:\\\\s+))?module(?=\\\\s*\\\\w)\",\n        token: \"keyword\",\n        next: [{\n          regex: \"{\",\n          token: \"paren.lparen\",\n          next: [{\n            regex: \"}\",\n            token: \"paren.rparen\",\n            next: \"start\"\n          }, {\n            regex: \"\\\\b(requires|transitive|exports|opens|to|uses|provides|with)\\\\b\",\n            token: \"keyword\"\n          }]\n        }, {\n          token: \"text\",\n          regex: \"\\\\s+\"\n        }, {\n          token: \"identifier\",\n          regex: \"\\\\w+\"\n        }, {\n          token: \"punctuation.operator\",\n          regex: \".\"\n        }, {\n          token: \"text\",\n          regex: \"\\\\s+\"\n        }, {\n          regex: \"\",\n          // exit if there is anything else\n          next: \"start\"\n        }]\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n      }, {\n        token: \"lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n    this.normalizeRules();\n  };\n\n  oop.inherits(JavaHighlightRules, TextHighlightRules);\n  exports.JavaHighlightRules = JavaHighlightRules;\n});\nace.define(\"ace/mode/drools_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\", \"ace/mode/java_highlight_rules\", \"ace/mode/doc_comment_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var JavaHighlightRules = require(\"./java_highlight_rules\").JavaHighlightRules;\n\n  var DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n\n  var identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\n  var packageIdentifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][\\\\.a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\n\n  var DroolsHighlightRules = function () {\n    var keywords = \"date|effective|expires|lock|on|active|no|loop|auto|focus\" + \"|activation|group|agenda|ruleflow|duration|timer|calendars|refract|direct\" + \"|dialect|salience|enabled|attributes|extends|template\" + \"|function|contains|matches|eval|excludes|soundslike\" + \"|memberof|not|in|or|and|exists|forall|over|from|entry|point|accumulate|acc|collect\" + \"|action|reverse|result|end|init|instanceof|extends|super|boolean|char|byte|short\" + \"|int|long|float|double|this|void|class|new|case|final|if|else|for|while|do\" + \"|default|try|catch|finally|switch|synchronized|return|throw|break|continue|assert\" + \"|modify|static|public|protected|private|abstract|native|transient|volatile\" + \"|strictfp|throws|interface|enum|implements|type|window|trait|no-loop|str\";\n    var langClasses = \"AbstractMethodError|AssertionError|ClassCircularityError|\" + \"ClassFormatError|Deprecated|EnumConstantNotPresentException|\" + \"ExceptionInInitializerError|IllegalAccessError|\" + \"IllegalThreadStateException|InstantiationError|InternalError|\" + \"NegativeArraySizeException|NoSuchFieldError|Override|Process|\" + \"ProcessBuilder|SecurityManager|StringIndexOutOfBoundsException|\" + \"SuppressWarnings|TypeNotPresentException|UnknownError|\" + \"UnsatisfiedLinkError|UnsupportedClassVersionError|VerifyError|\" + \"InstantiationException|IndexOutOfBoundsException|\" + \"ArrayIndexOutOfBoundsException|CloneNotSupportedException|\" + \"NoSuchFieldException|IllegalArgumentException|NumberFormatException|\" + \"SecurityException|Void|InheritableThreadLocal|IllegalStateException|\" + \"InterruptedException|NoSuchMethodException|IllegalAccessException|\" + \"UnsupportedOperationException|Enum|StrictMath|Package|Compiler|\" + \"Readable|Runtime|StringBuilder|Math|IncompatibleClassChangeError|\" + \"NoSuchMethodError|ThreadLocal|RuntimePermission|ArithmeticException|\" + \"NullPointerException|Long|Integer|Short|Byte|Double|Number|Float|\" + \"Character|Boolean|StackTraceElement|Appendable|StringBuffer|\" + \"Iterable|ThreadGroup|Runnable|Thread|IllegalMonitorStateException|\" + \"StackOverflowError|OutOfMemoryError|VirtualMachineError|\" + \"ArrayStoreException|ClassCastException|LinkageError|\" + \"NoClassDefFoundError|ClassNotFoundException|RuntimeException|\" + \"Exception|ThreadDeath|Error|Throwable|System|ClassLoader|\" + \"Cloneable|Class|CharSequence|Comparable|String|Object\";\n    var keywordMapper = this.createKeywordMapper({\n      \"variable.language\": \"this\",\n      \"keyword\": keywords,\n      \"constant.language\": \"null\",\n      \"support.class\": langClasses,\n      \"support.function\": \"retract|update|modify|insert\"\n    }, \"identifier\");\n\n    var stringRules = function () {\n      return [{\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }];\n    };\n\n    var basicPreRules = function (blockCommentRules) {\n      return [{\n        token: \"comment\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        next: blockCommentRules\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F]+\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }];\n    };\n\n    var blockCommentRules = function (returnRule) {\n      return [{\n        token: \"comment.block\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: returnRule\n      }, {\n        defaultToken: \"comment.block\"\n      }];\n    };\n\n    var basicPostRules = function () {\n      return [{\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n      }, {\n        token: \"lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }];\n    };\n\n    this.$rules = {\n      \"start\": [].concat(basicPreRules(\"block.comment\"), [{\n        token: \"entity.name.type\",\n        regex: \"@[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(package)(\\\\s+)(\" + packageIdentifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(import)(\\\\s+)(function)(\\\\s+)(\" + packageIdentifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(import)(\\\\s+)(\" + packageIdentifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\", \"text\", \"variable\"],\n        regex: \"(global)(\\\\s+)(\" + packageIdentifierRe + \")(\\\\s+)(\" + identifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(declare)(\\\\s+)(trait)(\\\\s+)(\" + identifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(declare)(\\\\s+)(\" + identifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(extends)(\\\\s+)(\" + packageIdentifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: \"(rule)(\\\\s+)\",\n        next: \"asset.name\"\n      }], stringRules(), [{\n        token: [\"variable.other\", \"text\", \"text\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(:)\"\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: \"(query)(\\\\s+)\",\n        next: \"asset.name\"\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: \"(when)(\\\\s*)\"\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: \"(then)(\\\\s*)\",\n        next: \"java-start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]/\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      }], basicPostRules()),\n      \"block.comment\": blockCommentRules(\"start\"),\n      \"asset.name\": [{\n        token: \"entity.name\",\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"entity.name\",\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"entity.name\",\n        regex: identifierRe\n      }, {\n        regex: \"\",\n        token: \"empty\",\n        next: \"start\"\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n    this.embedRules(JavaHighlightRules, \"java-\", [{\n      token: \"support.function\",\n      regex: \"\\\\b(insert|modify|retract|update)\\\\b\"\n    }, {\n      token: \"keyword\",\n      regex: \"\\\\bend\\\\b\",\n      next: \"start\"\n    }]);\n  };\n\n  oop.inherits(DroolsHighlightRules, TextHighlightRules);\n  exports.DroolsHighlightRules = DroolsHighlightRules;\n});\nace.define(\"ace/mode/folding/drools\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\", \"ace/token_iterator\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var TokenIterator = require(\"../../token_iterator\").TokenIterator;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /\\b(rule|declare|query|when|then)\\b/;\n    this.foldingStopMarker = /\\bend\\b/;\n\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n\n        if (match[1]) {\n          var position = {\n            row: row,\n            column: line.length\n          };\n          var iterator = new TokenIterator(session, position.row, position.column);\n          var seek = \"end\";\n          var token = iterator.getCurrentToken();\n\n          if (token.value == \"when\") {\n            seek = \"then\";\n          }\n\n          while (token) {\n            if (token.value == seek) {\n              return Range.fromPoints(position, {\n                row: iterator.getCurrentTokenRow(),\n                column: iterator.getCurrentTokenColumn()\n              });\n            }\n\n            token = iterator.stepForward();\n          }\n        }\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/drools\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/drools_highlight_rules\", \"ace/mode/folding/drools\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var DroolsHighlightRules = require(\"./drools_highlight_rules\").DroolsHighlightRules;\n\n  var DroolsFoldMode = require(\"./folding/drools\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = DroolsHighlightRules;\n    this.foldingRules = new DroolsFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.$id = \"ace/mode/drools\";\n    this.snippetFileId = \"ace/snippets/drools\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/drools\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/node_modules/ace-builds/src-noconflict/mode-drools.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","JavaHighlightRules","keywords","buildinConstants","langClasses","keywordMapper","createKeywordMapper","embedRules","normalizeRules","identifierRe","packageIdentifierRe","DroolsHighlightRules","stringRules","basicPreRules","blockCommentRules","returnRule","basicPostRules","concat","Range","BaseFoldMode","FoldMode","TokenIterator","foldingStartMarker","foldingStopMarker","getFoldWidgetRange","session","foldStyle","row","line","getLine","match","i","index","position","column","length","iterator","seek","getCurrentToken","value","fromPoints","getCurrentTokenRow","getCurrentTokenColumn","stepForward","call","prototype","TextMode","Mode","DroolsFoldMode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","$id","snippetFileId","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar DocCommentHighlightRules = function() {\r\n    this.$rules = {\r\n        \"start\" : [ {\r\n            token : \"comment.doc.tag\",\r\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\r\n        }, \r\n        DocCommentHighlightRules.getTagRule(),\r\n        {\r\n            defaultToken : \"comment.doc\",\r\n            caseInsensitive: true\r\n        }]\r\n    };\r\n};\r\n\r\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\r\n\r\nDocCommentHighlightRules.getTagRule = function(start) {\r\n    return {\r\n        token : \"comment.doc.tag.storage.type\",\r\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\r\n    };\r\n};\r\n\r\nDocCommentHighlightRules.getStartRule = function(start) {\r\n    return {\r\n        token : \"comment.doc\", // doc comment\r\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\r\n        next  : start\r\n    };\r\n};\r\n\r\nDocCommentHighlightRules.getEndRule = function (start) {\r\n    return {\r\n        token : \"comment.doc\", // closing comment\r\n        regex : \"\\\\*\\\\/\",\r\n        next  : start\r\n    };\r\n};\r\n\r\n\r\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\r\n\r\n});\r\n\r\nace.define(\"ace/mode/java_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar JavaHighlightRules = function() {\r\n    var keywords = (\r\n    \"abstract|continue|for|new|switch|\" +\r\n    \"assert|default|goto|package|synchronized|\" +\r\n    \"boolean|do|if|private|this|\" +\r\n    \"break|double|implements|protected|throw|\" +\r\n    \"byte|else|import|public|throws|\" +\r\n    \"case|enum|instanceof|return|transient|\" +\r\n    \"catch|extends|int|short|try|\" +\r\n    \"char|final|interface|static|void|\" +\r\n    \"class|finally|long|strictfp|volatile|\" +\r\n    \"const|float|native|super|while|\" +\r\n    \"var\"\r\n    );\r\n\r\n    var buildinConstants = (\"null|Infinity|NaN|undefined\");\r\n\r\n\r\n    var langClasses = (\r\n        \"AbstractMethodError|AssertionError|ClassCircularityError|\"+\r\n        \"ClassFormatError|Deprecated|EnumConstantNotPresentException|\"+\r\n        \"ExceptionInInitializerError|IllegalAccessError|\"+\r\n        \"IllegalThreadStateException|InstantiationError|InternalError|\"+\r\n        \"NegativeArraySizeException|NoSuchFieldError|Override|Process|\"+\r\n        \"ProcessBuilder|SecurityManager|StringIndexOutOfBoundsException|\"+\r\n        \"SuppressWarnings|TypeNotPresentException|UnknownError|\"+\r\n        \"UnsatisfiedLinkError|UnsupportedClassVersionError|VerifyError|\"+\r\n        \"InstantiationException|IndexOutOfBoundsException|\"+\r\n        \"ArrayIndexOutOfBoundsException|CloneNotSupportedException|\"+\r\n        \"NoSuchFieldException|IllegalArgumentException|NumberFormatException|\"+\r\n        \"SecurityException|Void|InheritableThreadLocal|IllegalStateException|\"+\r\n        \"InterruptedException|NoSuchMethodException|IllegalAccessException|\"+\r\n        \"UnsupportedOperationException|Enum|StrictMath|Package|Compiler|\"+\r\n        \"Readable|Runtime|StringBuilder|Math|IncompatibleClassChangeError|\"+\r\n        \"NoSuchMethodError|ThreadLocal|RuntimePermission|ArithmeticException|\"+\r\n        \"NullPointerException|Long|Integer|Short|Byte|Double|Number|Float|\"+\r\n        \"Character|Boolean|StackTraceElement|Appendable|StringBuffer|\"+\r\n        \"Iterable|ThreadGroup|Runnable|Thread|IllegalMonitorStateException|\"+\r\n        \"StackOverflowError|OutOfMemoryError|VirtualMachineError|\"+\r\n        \"ArrayStoreException|ClassCastException|LinkageError|\"+\r\n        \"NoClassDefFoundError|ClassNotFoundException|RuntimeException|\"+\r\n        \"Exception|ThreadDeath|Error|Throwable|System|ClassLoader|\"+\r\n        \"Cloneable|Class|CharSequence|Comparable|String|Object\"\r\n    );\r\n\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"variable.language\": \"this\",\r\n        \"keyword\": keywords,\r\n        \"constant.language\": buildinConstants,\r\n        \"support.function\": langClasses\r\n    }, \"identifier\");\r\n\r\n    this.$rules = {\r\n        \"start\" : [\r\n            {\r\n                token : \"comment\",\r\n                regex : \"\\\\/\\\\/.*$\"\r\n            },\r\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\r\n            {\r\n                token : \"comment\", // multi line comment\r\n                regex : \"\\\\/\\\\*\",\r\n                next : \"comment\"\r\n            }, {\r\n                token : \"string\", // single line\r\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\r\n            }, {\r\n                token : \"string\", // single line\r\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\r\n            }, {\r\n                token : \"constant.numeric\", // hex\r\n                regex : /0(?:[xX][0-9a-fA-F][0-9a-fA-F_]*|[bB][01][01_]*)[LlSsDdFfYy]?\\b/\r\n            }, {\r\n                token : \"constant.numeric\", // float\r\n                regex : /[+-]?\\d[\\d_]*(?:(?:\\.[\\d_]*)?(?:[eE][+-]?[\\d_]+)?)?[LlSsDdFfYy]?\\b/\r\n            }, {\r\n                token : \"constant.language.boolean\",\r\n                regex : \"(?:true|false)\\\\b\"\r\n            }, {\r\n                regex: \"(open(?:\\\\s+))?module(?=\\\\s*\\\\w)\",\r\n                token: \"keyword\",\r\n                next: [{\r\n                    regex: \"{\",\r\n                    token: \"paren.lparen\",\r\n                    next: [{\r\n                        regex: \"}\",\r\n                        token: \"paren.rparen\",\r\n                        next: \"start\"\r\n                    }, {\r\n                        regex: \"\\\\b(requires|transitive|exports|opens|to|uses|provides|with)\\\\b\",\r\n                        token: \"keyword\" \r\n                    }]\r\n                }, {\r\n                    token : \"text\",\r\n                    regex : \"\\\\s+\"\r\n                }, {\r\n                    token : \"identifier\",\r\n                    regex : \"\\\\w+\"\r\n                }, {\r\n                    token : \"punctuation.operator\",\r\n                    regex : \".\"\r\n                }, {\r\n                    token : \"text\",\r\n                    regex : \"\\\\s+\"\r\n                }, {\r\n                    regex: \"\", // exit if there is anything else\r\n                    next: \"start\"\r\n                }]\r\n            }, {\r\n                token : keywordMapper,\r\n                regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\r\n            }, {\r\n                token : \"keyword.operator\",\r\n                regex : \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\r\n            }, {\r\n                token : \"lparen\",\r\n                regex : \"[[({]\"\r\n            }, {\r\n                token : \"rparen\",\r\n                regex : \"[\\\\])}]\"\r\n            }, {\r\n                token : \"text\",\r\n                regex : \"\\\\s+\"\r\n            }\r\n        ],\r\n        \"comment\" : [\r\n            {\r\n                token : \"comment\", // closing comment\r\n                regex : \"\\\\*\\\\/\",\r\n                next : \"start\"\r\n            }, {\r\n                defaultToken : \"comment\"\r\n            }\r\n        ]\r\n    };\r\n\r\n    \r\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\r\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\r\n    this.normalizeRules();\r\n};\r\n\r\noop.inherits(JavaHighlightRules, TextHighlightRules);\r\n\r\nexports.JavaHighlightRules = JavaHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/drools_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\",\"ace/mode/java_highlight_rules\",\"ace/mode/doc_comment_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\nvar JavaHighlightRules = require(\"./java_highlight_rules\").JavaHighlightRules;\r\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\r\n\r\nvar identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\r\nvar packageIdentifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][\\\\.a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\r\n\r\nvar DroolsHighlightRules = function() {\r\n\r\n    var keywords = (\"date|effective|expires|lock|on|active|no|loop|auto|focus\" +\r\n        \"|activation|group|agenda|ruleflow|duration|timer|calendars|refract|direct\" +\r\n        \"|dialect|salience|enabled|attributes|extends|template\" +\r\n        \"|function|contains|matches|eval|excludes|soundslike\" +\r\n        \"|memberof|not|in|or|and|exists|forall|over|from|entry|point|accumulate|acc|collect\" +\r\n        \"|action|reverse|result|end|init|instanceof|extends|super|boolean|char|byte|short\" +\r\n        \"|int|long|float|double|this|void|class|new|case|final|if|else|for|while|do\" +\r\n        \"|default|try|catch|finally|switch|synchronized|return|throw|break|continue|assert\" +\r\n        \"|modify|static|public|protected|private|abstract|native|transient|volatile\" +\r\n        \"|strictfp|throws|interface|enum|implements|type|window|trait|no-loop|str\"\r\n      );\r\n\r\n      var langClasses = (\r\n          \"AbstractMethodError|AssertionError|ClassCircularityError|\"+\r\n          \"ClassFormatError|Deprecated|EnumConstantNotPresentException|\"+\r\n          \"ExceptionInInitializerError|IllegalAccessError|\"+\r\n          \"IllegalThreadStateException|InstantiationError|InternalError|\"+\r\n          \"NegativeArraySizeException|NoSuchFieldError|Override|Process|\"+\r\n          \"ProcessBuilder|SecurityManager|StringIndexOutOfBoundsException|\"+\r\n          \"SuppressWarnings|TypeNotPresentException|UnknownError|\"+\r\n          \"UnsatisfiedLinkError|UnsupportedClassVersionError|VerifyError|\"+\r\n          \"InstantiationException|IndexOutOfBoundsException|\"+\r\n          \"ArrayIndexOutOfBoundsException|CloneNotSupportedException|\"+\r\n          \"NoSuchFieldException|IllegalArgumentException|NumberFormatException|\"+\r\n          \"SecurityException|Void|InheritableThreadLocal|IllegalStateException|\"+\r\n          \"InterruptedException|NoSuchMethodException|IllegalAccessException|\"+\r\n          \"UnsupportedOperationException|Enum|StrictMath|Package|Compiler|\"+\r\n          \"Readable|Runtime|StringBuilder|Math|IncompatibleClassChangeError|\"+\r\n          \"NoSuchMethodError|ThreadLocal|RuntimePermission|ArithmeticException|\"+\r\n          \"NullPointerException|Long|Integer|Short|Byte|Double|Number|Float|\"+\r\n          \"Character|Boolean|StackTraceElement|Appendable|StringBuffer|\"+\r\n          \"Iterable|ThreadGroup|Runnable|Thread|IllegalMonitorStateException|\"+\r\n          \"StackOverflowError|OutOfMemoryError|VirtualMachineError|\"+\r\n          \"ArrayStoreException|ClassCastException|LinkageError|\"+\r\n          \"NoClassDefFoundError|ClassNotFoundException|RuntimeException|\"+\r\n          \"Exception|ThreadDeath|Error|Throwable|System|ClassLoader|\"+\r\n          \"Cloneable|Class|CharSequence|Comparable|String|Object\"\r\n      );\r\n\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"variable.language\": \"this\",\r\n        \"keyword\": keywords,\r\n        \"constant.language\": \"null\",\r\n        \"support.class\" : langClasses,\r\n        \"support.function\" : \"retract|update|modify|insert\"\r\n    }, \"identifier\");\r\n\r\n    var stringRules = function() {\r\n      return [{\r\n        token : \"string\", // single line\r\n        regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\r\n      }, {\r\n        token : \"string\", // single line\r\n        regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\r\n      }];\r\n    };\r\n\r\n\r\n      var basicPreRules = function(blockCommentRules) {\r\n        return [{\r\n            token : \"comment\",\r\n            regex : \"\\\\/\\\\/.*$\"\r\n        },\r\n        DocCommentHighlightRules.getStartRule(\"doc-start\"),\r\n        {\r\n            token : \"comment\", // multi line comment\r\n            regex : \"\\\\/\\\\*\",\r\n            next : blockCommentRules\r\n        }, {\r\n            token : \"constant.numeric\", // hex\r\n            regex : \"0[xX][0-9a-fA-F]+\\\\b\"\r\n        }, {\r\n            token : \"constant.numeric\", // float\r\n            regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\r\n        }, {\r\n            token : \"constant.language.boolean\",\r\n            regex : \"(?:true|false)\\\\b\"\r\n          }];\r\n      };\r\n\r\n      var blockCommentRules = function(returnRule) {\r\n        return [\r\n            {\r\n                token : \"comment.block\", // closing comment\r\n                regex : \"\\\\*\\\\/\",\r\n                next : returnRule\r\n            }, {\r\n                defaultToken : \"comment.block\"\r\n            }\r\n        ];\r\n      };\r\n\r\n      var basicPostRules = function() {\r\n        return [{\r\n            token : keywordMapper,\r\n            regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\r\n        }, {\r\n            token : \"keyword.operator\",\r\n            regex : \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\r\n        }, {\r\n            token : \"lparen\",\r\n            regex : \"[[({]\"\r\n        }, {\r\n            token : \"rparen\",\r\n            regex : \"[\\\\])}]\"\r\n        }, {\r\n            token : \"text\",\r\n            regex : \"\\\\s+\"\r\n        }];\r\n      };\r\n\r\n\r\n    this.$rules = {\r\n        \"start\" : [].concat(basicPreRules(\"block.comment\"), [\r\n              {\r\n                token : \"entity.name.type\",\r\n                regex : \"@[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\r\n              }, {\r\n                token : [\"keyword\",\"text\",\"entity.name.type\"],\r\n                regex : \"(package)(\\\\s+)(\" + packageIdentifierRe +\")\"\r\n              }, {\r\n                token : [\"keyword\",\"text\",\"keyword\",\"text\",\"entity.name.type\"],\r\n                regex : \"(import)(\\\\s+)(function)(\\\\s+)(\" + packageIdentifierRe +\")\"\r\n              }, {\r\n                token : [\"keyword\",\"text\",\"entity.name.type\"],\r\n                regex : \"(import)(\\\\s+)(\" + packageIdentifierRe +\")\"\r\n              }, {\r\n                token : [\"keyword\",\"text\",\"entity.name.type\",\"text\",\"variable\"],\r\n                regex : \"(global)(\\\\s+)(\" + packageIdentifierRe +\")(\\\\s+)(\" + identifierRe +\")\"\r\n              }, {\r\n                token : [\"keyword\",\"text\",\"keyword\",\"text\",\"entity.name.type\"],\r\n                regex : \"(declare)(\\\\s+)(trait)(\\\\s+)(\" + identifierRe +\")\"\r\n              }, {\r\n                token : [\"keyword\",\"text\",\"entity.name.type\"],\r\n                regex : \"(declare)(\\\\s+)(\" + identifierRe +\")\"\r\n              }, {\r\n                token : [\"keyword\",\"text\",\"entity.name.type\"],\r\n                regex : \"(extends)(\\\\s+)(\" + packageIdentifierRe +\")\"\r\n              }, {\r\n                token : [\"keyword\",\"text\"],\r\n                regex : \"(rule)(\\\\s+)\",\r\n                next :  \"asset.name\"\r\n              }],\r\n              stringRules(),\r\n              [{\r\n                token : [\"variable.other\",\"text\",\"text\"],\r\n                regex : \"(\" + identifierRe + \")(\\\\s*)(:)\"\r\n              }, {\r\n                token : [\"keyword\",\"text\"],\r\n                regex : \"(query)(\\\\s+)\",\r\n                next :  \"asset.name\"\r\n              }, {\r\n                token : [\"keyword\",\"text\"],\r\n                regex : \"(when)(\\\\s*)\"\r\n              }, {\r\n                token : [\"keyword\",\"text\"],\r\n                regex : \"(then)(\\\\s*)\",\r\n                next :  \"java-start\"\r\n              }, {\r\n                  token : \"paren.lparen\",\r\n                  regex : /[\\[({]/\r\n              }, {\r\n                  token : \"paren.rparen\",\r\n                  regex : /[\\])}]/\r\n              }], basicPostRules()),\r\n        \"block.comment\" : blockCommentRules(\"start\"),\r\n        \"asset.name\" : [\r\n            {\r\n                token : \"entity.name\",\r\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\r\n            }, {\r\n                token : \"entity.name\",\r\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\r\n            }, {\r\n                token : \"entity.name\",\r\n                regex : identifierRe\r\n            }, {\r\n                regex: \"\",\r\n                token: \"empty\",\r\n                next: \"start\"\r\n            }]\r\n    };\r\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\r\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\r\n\r\n    this.embedRules(JavaHighlightRules, \"java-\", [\r\n      {\r\n       token : \"support.function\",\r\n       regex: \"\\\\b(insert|modify|retract|update)\\\\b\"\r\n     }, {\r\n       token : \"keyword\",\r\n       regex: \"\\\\bend\\\\b\",\r\n       next  : \"start\"\r\n    }]);\r\n\r\n};\r\n\r\noop.inherits(DroolsHighlightRules, TextHighlightRules);\r\n\r\nexports.DroolsHighlightRules = DroolsHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/folding/drools\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\",\"ace/token_iterator\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar Range = require(\"../../range\").Range;\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\r\n\r\nvar FoldMode = exports.FoldMode = function() {};\r\noop.inherits(FoldMode, BaseFoldMode);\r\n\r\n(function() {\r\n    this.foldingStartMarker = /\\b(rule|declare|query|when|then)\\b/; \r\n    this.foldingStopMarker = /\\bend\\b/;\r\n\r\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\r\n        var line = session.getLine(row);\r\n        var match = line.match(this.foldingStartMarker);\r\n        if (match) {\r\n            var i = match.index;\r\n\r\n            if (match[1]) {\r\n                var position = {row: row, column: line.length};\r\n                var iterator = new TokenIterator(session, position.row, position.column);\r\n                var seek = \"end\";\r\n                var token = iterator.getCurrentToken();\r\n                if (token.value == \"when\") {\r\n                    seek = \"then\";\r\n                }\r\n                while (token) {\r\n                    if (token.value == seek) { \r\n                        return Range.fromPoints(position ,{\r\n                            row: iterator.getCurrentTokenRow(),\r\n                            column: iterator.getCurrentTokenColumn()\r\n                        });\r\n                    }\r\n                    token = iterator.stepForward();\r\n                }\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n\r\nace.define(\"ace/mode/drools\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/drools_highlight_rules\",\"ace/mode/folding/drools\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar DroolsHighlightRules = require(\"./drools_highlight_rules\").DroolsHighlightRules;\r\nvar DroolsFoldMode = require(\"./folding/drools\").FoldMode;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = DroolsHighlightRules;\r\n    this.foldingRules = new DroolsFoldMode();\r\n    this.$behaviour = this.$defaultBehaviour;\r\n\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n    this.lineCommentStart = \"//\";\r\n    this.$id = \"ace/mode/drools\";\r\n    this.snippetFileId = \"ace/snippets/drools\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n\r\n});                (function() {\r\n                    ace.require([\"ace/mode/drools\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "]},"metadata":{},"sourceType":"script"}