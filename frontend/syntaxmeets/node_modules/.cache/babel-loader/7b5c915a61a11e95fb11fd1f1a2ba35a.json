{"ast":null,"code":"ace.define(\"ace/mode/cirru_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var CirruHighlightRules = function () {\n    this.$rules = {\n      start: [{\n        token: 'constant.numeric',\n        regex: /[\\d\\.]+/\n      }, {\n        token: 'comment.line.double-dash',\n        regex: /--/,\n        next: 'comment'\n      }, {\n        token: 'storage.modifier',\n        regex: /\\(/\n      }, {\n        token: 'storage.modifier',\n        regex: /,/,\n        next: 'line'\n      }, {\n        token: 'support.function',\n        regex: /[^\\(\\)\"\\s{}\\[\\]]+/,\n        next: 'line'\n      }, {\n        token: 'string.quoted.double',\n        regex: /\"/,\n        next: 'string'\n      }, {\n        token: 'storage.modifier',\n        regex: /\\)/\n      }],\n      comment: [{\n        token: 'comment.line.double-dash',\n        regex: / +[^\\n]+/,\n        next: 'start'\n      }],\n      string: [{\n        token: 'string.quoted.double',\n        regex: /\"/,\n        next: 'line'\n      }, {\n        token: 'constant.character.escape',\n        regex: /\\\\/,\n        next: 'escape'\n      }, {\n        token: 'string.quoted.double',\n        regex: /[^\\\\\"]+/\n      }],\n      escape: [{\n        token: 'constant.character.escape',\n        regex: /./,\n        next: 'string'\n      }],\n      line: [{\n        token: 'constant.numeric',\n        regex: /[\\d\\.]+/\n      }, {\n        token: 'markup.raw',\n        regex: /^\\s*/,\n        next: 'start'\n      }, {\n        token: 'storage.modifier',\n        regex: /\\$/,\n        next: 'start'\n      }, {\n        token: 'variable.parameter',\n        regex: /[^\\(\\)\"\\s{}\\[\\]]+/\n      }, {\n        token: 'storage.modifier',\n        regex: /\\(/,\n        next: 'start'\n      }, {\n        token: 'storage.modifier',\n        regex: /\\)/\n      }, {\n        token: 'markup.raw',\n        regex: /^ */,\n        next: 'start'\n      }, {\n        token: 'string.quoted.double',\n        regex: /\"/,\n        next: 'string'\n      }]\n    };\n  };\n\n  oop.inherits(CirruHighlightRules, TextHighlightRules);\n  exports.CirruHighlightRules = CirruHighlightRules;\n});\nace.define(\"ace/mode/folding/coffee\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var Range = require(\"../../range\").Range;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var range = this.indentationBlock(session, row);\n      if (range) return range;\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      if (startLevel == -1 || line[startLevel] != \"#\") return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var level = line.search(re);\n        if (level == -1) continue;\n        if (line[level] != \"#\") break;\n        endRow = row;\n      }\n\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n\n      if (prevIndent != -1 && prevIndent < indent) session.foldWidgets[row - 1] = \"start\";else session.foldWidgets[row - 1] = \"\";\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/cirru\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/cirru_highlight_rules\", \"ace/mode/folding/coffee\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var CirruHighlightRules = require(\"./cirru_highlight_rules\").CirruHighlightRules;\n\n  var CoffeeFoldMode = require(\"./folding/coffee\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = CirruHighlightRules;\n    this.foldingRules = new CoffeeFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.$id = \"ace/mode/cirru\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/cirru\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/node_modules/ace-builds/src-noconflict/mode-cirru.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","CirruHighlightRules","$rules","start","token","regex","next","comment","string","escape","line","inherits","BaseFoldMode","FoldMode","Range","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextMode","Mode","CoffeeFoldMode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","$id","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/cirru_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\nvar CirruHighlightRules = function() {\r\n    this.$rules = {\r\n        start: [{\r\n            token: 'constant.numeric',\r\n            regex: /[\\d\\.]+/\r\n        }, {\r\n            token: 'comment.line.double-dash',\r\n            regex: /--/,\r\n            next: 'comment'\r\n        }, {\r\n            token: 'storage.modifier',\r\n            regex: /\\(/\r\n        }, {\r\n            token: 'storage.modifier',\r\n            regex: /,/,\r\n            next: 'line'\r\n        }, {\r\n            token: 'support.function',\r\n            regex: /[^\\(\\)\"\\s{}\\[\\]]+/,\r\n            next: 'line'\r\n        }, {\r\n            token: 'string.quoted.double',\r\n            regex: /\"/,\r\n            next: 'string'\r\n        }, {\r\n            token: 'storage.modifier',\r\n            regex: /\\)/\r\n        }],\r\n        comment: [{\r\n            token: 'comment.line.double-dash',\r\n            regex: / +[^\\n]+/,\r\n            next: 'start'\r\n        }],\r\n        string: [{\r\n            token: 'string.quoted.double',\r\n            regex: /\"/,\r\n            next: 'line'\r\n        }, {\r\n            token: 'constant.character.escape',\r\n            regex: /\\\\/,\r\n            next: 'escape'\r\n        }, {\r\n            token: 'string.quoted.double',\r\n            regex: /[^\\\\\"]+/\r\n        }],\r\n        escape: [{\r\n            token: 'constant.character.escape',\r\n            regex: /./,\r\n            next: 'string'\r\n        }],\r\n        line: [{\r\n            token: 'constant.numeric',\r\n            regex: /[\\d\\.]+/\r\n        }, {\r\n            token: 'markup.raw',\r\n            regex: /^\\s*/,\r\n            next: 'start'\r\n        }, {\r\n            token: 'storage.modifier',\r\n            regex: /\\$/,\r\n            next: 'start'\r\n        }, {\r\n            token: 'variable.parameter',\r\n            regex: /[^\\(\\)\"\\s{}\\[\\]]+/\r\n        }, {\r\n            token: 'storage.modifier',\r\n            regex: /\\(/,\r\n            next: 'start'\r\n        }, {\r\n            token: 'storage.modifier',\r\n            regex: /\\)/\r\n        }, {\r\n            token: 'markup.raw',\r\n            regex: /^ */,\r\n            next: 'start'\r\n        }, {\r\n            token: 'string.quoted.double',\r\n            regex: /\"/,\r\n            next: 'string'\r\n        }]\r\n    };\r\n\r\n};\r\n\r\noop.inherits(CirruHighlightRules, TextHighlightRules);\r\n\r\nexports.CirruHighlightRules = CirruHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\nvar Range = require(\"../../range\").Range;\r\n\r\nvar FoldMode = exports.FoldMode = function() {};\r\noop.inherits(FoldMode, BaseFoldMode);\r\n\r\n(function() {\r\n\r\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\r\n        var range = this.indentationBlock(session, row);\r\n        if (range)\r\n            return range;\r\n\r\n        var re = /\\S/;\r\n        var line = session.getLine(row);\r\n        var startLevel = line.search(re);\r\n        if (startLevel == -1 || line[startLevel] != \"#\")\r\n            return;\r\n\r\n        var startColumn = line.length;\r\n        var maxRow = session.getLength();\r\n        var startRow = row;\r\n        var endRow = row;\r\n\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var level = line.search(re);\r\n\r\n            if (level == -1)\r\n                continue;\r\n\r\n            if (line[level] != \"#\")\r\n                break;\r\n\r\n            endRow = row;\r\n        }\r\n\r\n        if (endRow > startRow) {\r\n            var endColumn = session.getLine(endRow).length;\r\n            return new Range(startRow, startColumn, endRow, endColumn);\r\n        }\r\n    };\r\n    this.getFoldWidget = function(session, foldStyle, row) {\r\n        var line = session.getLine(row);\r\n        var indent = line.search(/\\S/);\r\n        var next = session.getLine(row + 1);\r\n        var prev = session.getLine(row - 1);\r\n        var prevIndent = prev.search(/\\S/);\r\n        var nextIndent = next.search(/\\S/);\r\n\r\n        if (indent == -1) {\r\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\r\n            return \"\";\r\n        }\r\n        if (prevIndent == -1) {\r\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\r\n                session.foldWidgets[row - 1] = \"\";\r\n                session.foldWidgets[row + 1] = \"\";\r\n                return \"start\";\r\n            }\r\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\r\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\r\n                session.foldWidgets[row - 1] = \"start\";\r\n                session.foldWidgets[row + 1] = \"\";\r\n                return \"\";\r\n            }\r\n        }\r\n\r\n        if (prevIndent!= -1 && prevIndent < indent)\r\n            session.foldWidgets[row - 1] = \"start\";\r\n        else\r\n            session.foldWidgets[row - 1] = \"\";\r\n\r\n        if (indent < nextIndent)\r\n            return \"start\";\r\n        else\r\n            return \"\";\r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n\r\nace.define(\"ace/mode/cirru\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/cirru_highlight_rules\",\"ace/mode/folding/coffee\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar CirruHighlightRules = require(\"./cirru_highlight_rules\").CirruHighlightRules;\r\nvar CoffeeFoldMode = require(\"./folding/coffee\").FoldMode;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = CirruHighlightRules;\r\n    this.foldingRules = new CoffeeFoldMode();\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n    this.lineCommentStart = \"--\";\r\n    this.$id = \"ace/mode/cirru\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});                (function() {\r\n                    ace.require([\"ace/mode/cirru\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "]},"metadata":{},"sourceType":"script"}