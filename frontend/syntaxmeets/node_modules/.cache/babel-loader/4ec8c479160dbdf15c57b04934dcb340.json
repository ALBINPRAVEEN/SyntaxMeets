{"ast":null,"code":"var _jsxFileName = \"D:\\\\dhruv codes\\\\SyntaxMeets\\\\frontend\\\\syntaxmeets\\\\src\\\\components\\\\Editor.js\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport AceEditor from \"../src/ace\";\nimport \"ace-builds/src-min-noconflict/ext-searchbox\";\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-jsx\";\nconst languages = [\"javascript\", \"java\", \"python\", \"xml\", \"ruby\", \"sass\", \"markdown\", \"mysql\", \"json\", \"html\", \"handlebars\", \"golang\", \"csharp\", \"elixir\", \"typescript\", \"css\"];\nconst themes = [\"monokai\", \"github\", \"tomorrow\", \"kuroir\", \"twilight\", \"xcode\", \"textmate\", \"solarized_dark\", \"solarized_light\", \"terminal\"];\nlanguages.forEach(lang => {\n  require(`ace-builds/src-noconflict/mode-${lang}`);\n\n  require(`ace-builds/src-noconflict/snippets/${lang}`);\n});\nthemes.forEach(theme => require(`ace-builds/src-noconflict/theme-${theme}`));\n/*eslint-disable no-alert, no-console */\n\nconst defaultValue = `function onLoad(editor) {\n  console.log(\"i've loaded\");\n}`;\n\nclass Editor extends Component {\n  onLoad() {\n    console.log(\"i've loaded\");\n  }\n\n  onChange(newValue) {\n    console.log(\"change\", newValue);\n    this.setState({\n      value: newValue\n    });\n  }\n\n  onSelectionChange(newValue, event) {\n    console.log(\"select-change\", newValue);\n    console.log(\"select-change-event\", event);\n  }\n\n  onCursorChange(newValue, event) {\n    console.log(\"cursor-change\", newValue);\n    console.log(\"cursor-change-event\", event);\n  }\n\n  onValidate(annotations) {\n    console.log(\"onValidate\", annotations);\n  }\n\n  setPlaceholder(e) {\n    this.setState({\n      placeholder: e.target.value\n    });\n  }\n\n  setTheme(e) {\n    this.setState({\n      theme: e.target.value\n    });\n  }\n\n  setMode(e) {\n    this.setState({\n      mode: e.target.value\n    });\n  }\n\n  setBoolean(name, value) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  setFontSize(e) {\n    this.setState({\n      fontSize: parseInt(e.target.value, 10)\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: defaultValue,\n      placeholder: \"Placeholder Text\",\n      theme: \"monokai\",\n      mode: \"javascript\",\n      enableBasicAutocompletion: false,\n      enableLiveAutocompletion: false,\n      fontSize: 14,\n      showGutter: true,\n      showPrintMargin: true,\n      highlightActiveLine: true,\n      enableSnippets: false,\n      showLineNumbers: true\n    };\n    this.setPlaceholder = this.setPlaceholder.bind(this);\n    this.setTheme = this.setTheme.bind(this);\n    this.setMode = this.setMode.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.setFontSize = this.setFontSize.bind(this);\n    this.setBoolean = this.setBoolean.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, \"Mode:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"mode\",\n      onChange: this.setMode,\n      value: this.state.mode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, languages.map(lang => /*#__PURE__*/React.createElement(\"option\", {\n      key: lang,\n      value: lang,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 41\n      }\n    }, lang)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, \"Theme:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"Theme\",\n      onChange: this.setTheme,\n      value: this.state.theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    }, themes.map(lang => /*#__PURE__*/React.createElement(\"option\", {\n      key: lang,\n      value: lang,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 41\n      }\n    }, lang)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, \"Font Size:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"Font Size\",\n      onChange: this.setFontSize,\n      value: this.state.fontSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 33\n      }\n    }, [14, 16, 18, 20, 24, 28, 32, 40].map(lang => /*#__PURE__*/React.createElement(\"option\", {\n      key: lang,\n      value: lang,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 41\n      }\n    }, lang)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, \"Placeholder:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      onChange: this.setPlaceholder,\n      value: this.state.placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.enableBasicAutocompletion,\n      onChange: e => this.setBoolean(\"enableBasicAutocompletion\", e.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 33\n      }\n    }), \"Enable Basic Autocomplete\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.enableLiveAutocompletion,\n      onChange: e => this.setBoolean(\"enableLiveAutocompletion\", e.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }), \"Enable Live Autocomplete\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.showGutter,\n      onChange: e => this.setBoolean(\"showGutter\", e.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 33\n      }\n    }), \"Show Gutter\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.showPrintMargin,\n      onChange: e => this.setBoolean(\"showPrintMargin\", e.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 33\n      }\n    }), \"Show Print Margin\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.highlightActiveLine,\n      onChange: e => this.setBoolean(\"highlightActiveLine\", e.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 33\n      }\n    }), \"Highlight Active Line\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.enableSnippets,\n      onChange: e => this.setBoolean(\"enableSnippets\", e.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 33\n      }\n    }), \"Enable Snippets\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.showLineNumbers,\n      onChange: e => this.setBoolean(\"showLineNumbers\", e.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 33\n      }\n    }), \"Show Line Numbers\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"examples column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }\n    }, \"Editor\"), /*#__PURE__*/React.createElement(AceEditor, {\n      placeholder: this.state.placeholder,\n      mode: this.state.mode,\n      theme: this.state.theme,\n      name: \"blah2\",\n      onLoad: this.onLoad,\n      onChange: this.onChange,\n      onSelectionChange: this.onSelectionChange,\n      onCursorChange: this.onCursorChange,\n      onValidate: this.onValidate,\n      value: this.state.value,\n      fontSize: this.state.fontSize,\n      showPrintMargin: this.state.showPrintMargin,\n      showGutter: this.state.showGutter,\n      highlightActiveLine: this.state.highlightActiveLine,\n      setOptions: {\n        useWorker: false,\n        enableBasicAutocompletion: this.state.enableBasicAutocompletion,\n        enableLiveAutocompletion: this.state.enableLiveAutocompletion,\n        enableSnippets: this.state.enableSnippets,\n        showLineNumbers: this.state.showLineNumbers,\n        tabSize: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }\n    }, \"Code\"), /*#__PURE__*/React.createElement(AceEditor, {\n      mode: \"jsx\",\n      theme: \"monokai\",\n      readOnly: true,\n      value: `<AceEditor\n  placeholder=\"${this.state.placeholder}\"\n  mode=\"${this.state.mode}\"\n  theme=\"${this.state.theme}\"\n  name=\"blah2\"\n  onLoad={this.onLoad}\n  onChange={this.onChange}\n  fontSize={${this.state.fontSize}}\n  showPrintMargin={${this.state.showPrintMargin}}\n  showGutter={${this.state.showGutter}}\n  highlightActiveLine={${this.state.highlightActiveLine}}\n  value={\\`${this.state.value}\\`}\n  setOptions={{\n  enableBasicAutocompletion: ${this.state.enableBasicAutocompletion},\n  enableLiveAutocompletion: ${this.state.enableLiveAutocompletion},\n  enableSnippets: ${this.state.enableSnippets},\n  showLineNumbers: ${this.state.showLineNumbers},\n  tabSize: 2,\n  }}/>\n            `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Editor;","map":{"version":3,"sources":["D:/dhruv codes/SyntaxMeets/frontend/syntaxmeets/src/components/Editor.js"],"names":["React","Component","render","AceEditor","languages","themes","forEach","lang","require","theme","defaultValue","Editor","onLoad","console","log","onChange","newValue","setState","value","onSelectionChange","event","onCursorChange","onValidate","annotations","setPlaceholder","e","placeholder","target","setTheme","setMode","mode","setBoolean","name","setFontSize","fontSize","parseInt","constructor","props","state","enableBasicAutocompletion","enableLiveAutocompletion","showGutter","showPrintMargin","highlightActiveLine","enableSnippets","showLineNumbers","bind","map","checked","useWorker","tabSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport AceEditor from \"../src/ace\";\r\nimport \"ace-builds/src-min-noconflict/ext-searchbox\";\r\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/mode-jsx\";\r\n\r\nconst languages = [\r\n    \"javascript\",\r\n    \"java\",\r\n    \"python\",\r\n    \"xml\",\r\n    \"ruby\",\r\n    \"sass\",\r\n    \"markdown\",\r\n    \"mysql\",\r\n    \"json\",\r\n    \"html\",\r\n    \"handlebars\",\r\n    \"golang\",\r\n    \"csharp\",\r\n    \"elixir\",\r\n    \"typescript\",\r\n    \"css\"\r\n];\r\n\r\nconst themes = [\r\n    \"monokai\",\r\n    \"github\",\r\n    \"tomorrow\",\r\n    \"kuroir\",\r\n    \"twilight\",\r\n    \"xcode\",\r\n    \"textmate\",\r\n    \"solarized_dark\",\r\n    \"solarized_light\",\r\n    \"terminal\"\r\n];\r\n\r\nlanguages.forEach(lang => {\r\n    require(`ace-builds/src-noconflict/mode-${lang}`);\r\n    require(`ace-builds/src-noconflict/snippets/${lang}`);\r\n});\r\n\r\nthemes.forEach(theme => require(`ace-builds/src-noconflict/theme-${theme}`));\r\n/*eslint-disable no-alert, no-console */\r\n\r\n\r\nconst defaultValue = `function onLoad(editor) {\r\n  console.log(\"i've loaded\");\r\n}`;\r\nclass Editor extends Component {\r\n    onLoad() {\r\n        console.log(\"i've loaded\");\r\n    }\r\n    onChange(newValue) {\r\n        console.log(\"change\", newValue);\r\n        this.setState({\r\n            value: newValue\r\n        });\r\n    }\r\n\r\n    onSelectionChange(newValue, event) {\r\n        console.log(\"select-change\", newValue);\r\n        console.log(\"select-change-event\", event);\r\n    }\r\n\r\n    onCursorChange(newValue, event) {\r\n        console.log(\"cursor-change\", newValue);\r\n        console.log(\"cursor-change-event\", event);\r\n    }\r\n\r\n    onValidate(annotations) {\r\n        console.log(\"onValidate\", annotations);\r\n    }\r\n\r\n    setPlaceholder(e) {\r\n        this.setState({\r\n            placeholder: e.target.value\r\n        });\r\n    }\r\n    setTheme(e) {\r\n        this.setState({\r\n            theme: e.target.value\r\n        });\r\n    }\r\n    setMode(e) {\r\n        this.setState({\r\n            mode: e.target.value\r\n        });\r\n    }\r\n    setBoolean(name, value) {\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    setFontSize(e) {\r\n        this.setState({\r\n            fontSize: parseInt(e.target.value, 10)\r\n        });\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: defaultValue,\r\n            placeholder: \"Placeholder Text\",\r\n            theme: \"monokai\",\r\n            mode: \"javascript\",\r\n            enableBasicAutocompletion: false,\r\n            enableLiveAutocompletion: false,\r\n            fontSize: 14,\r\n            showGutter: true,\r\n            showPrintMargin: true,\r\n            highlightActiveLine: true,\r\n            enableSnippets: false,\r\n            showLineNumbers: true\r\n        };\r\n        this.setPlaceholder = this.setPlaceholder.bind(this);\r\n        this.setTheme = this.setTheme.bind(this);\r\n        this.setMode = this.setMode.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.setFontSize = this.setFontSize.bind(this);\r\n        this.setBoolean = this.setBoolean.bind(this);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"columns\">\r\n                <div className=\"column\">\r\n                    <div className=\"field\">\r\n                        <label>Mode:</label>\r\n                        <p className=\"control\">\r\n                            <span className=\"select\">\r\n                                <select\r\n                                    name=\"mode\"\r\n                                    onChange={this.setMode}\r\n                                    value={this.state.mode}\r\n                                >\r\n                                    {languages.map(lang => (\r\n                                        <option key={lang} value={lang}>\r\n                                            {lang}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label>Theme:</label>\r\n                        <p className=\"control\">\r\n                            <span className=\"select\">\r\n                                <select\r\n                                    name=\"Theme\"\r\n                                    onChange={this.setTheme}\r\n                                    value={this.state.theme}\r\n                                >\r\n                                    {themes.map(lang => (\r\n                                        <option key={lang} value={lang}>\r\n                                            {lang}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label>Font Size:</label>\r\n                        <p className=\"control\">\r\n                            <span className=\"select\">\r\n                                <select\r\n                                    name=\"Font Size\"\r\n                                    onChange={this.setFontSize}\r\n                                    value={this.state.fontSize}\r\n                                >\r\n                                    {[14, 16, 18, 20, 24, 28, 32, 40].map(lang => (\r\n                                        <option key={lang} value={lang}>\r\n                                            {lang}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label>Placeholder:</label>\r\n                        <p className=\"control\">\r\n                            <input\r\n                                className=\"input\"\r\n                                type=\"text\"\r\n                                onChange={this.setPlaceholder}\r\n                                value={this.state.placeholder}\r\n                            />\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <label className=\"checkbox\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={this.state.enableBasicAutocompletion}\r\n                                    onChange={e =>\r\n                                        this.setBoolean(\r\n                                            \"enableBasicAutocompletion\",\r\n                                            e.target.checked\r\n                                        )\r\n                                    }\r\n                                />\r\n                Enable Basic Autocomplete\r\n              </label>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <label className=\"checkbox\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={this.state.enableLiveAutocompletion}\r\n                                    onChange={e =>\r\n                                        this.setBoolean(\r\n                                            \"enableLiveAutocompletion\",\r\n                                            e.target.checked\r\n                                        )\r\n                                    }\r\n                                />\r\n                Enable Live Autocomplete\r\n              </label>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <label className=\"checkbox\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={this.state.showGutter}\r\n                                    onChange={e =>\r\n                                        this.setBoolean(\"showGutter\", e.target.checked)\r\n                                    }\r\n                                />\r\n                Show Gutter\r\n              </label>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <label className=\"checkbox\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={this.state.showPrintMargin}\r\n                                    onChange={e =>\r\n                                        this.setBoolean(\"showPrintMargin\", e.target.checked)\r\n                                    }\r\n                                />\r\n                Show Print Margin\r\n              </label>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <label className=\"checkbox\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={this.state.highlightActiveLine}\r\n                                    onChange={e =>\r\n                                        this.setBoolean(\"highlightActiveLine\", e.target.checked)\r\n                                    }\r\n                                />\r\n                Highlight Active Line\r\n              </label>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <label className=\"checkbox\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={this.state.enableSnippets}\r\n                                    onChange={e =>\r\n                                        this.setBoolean(\"enableSnippets\", e.target.checked)\r\n                                    }\r\n                                />\r\n                Enable Snippets\r\n              </label>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <label className=\"checkbox\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={this.state.showLineNumbers}\r\n                                    onChange={e =>\r\n                                        this.setBoolean(\"showLineNumbers\", e.target.checked)\r\n                                    }\r\n                                />\r\n                Show Line Numbers\r\n              </label>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"examples column\">\r\n                    <h2>Editor</h2>\r\n                    <AceEditor\r\n                        placeholder={this.state.placeholder}\r\n                        mode={this.state.mode}\r\n                        theme={this.state.theme}\r\n                        name=\"blah2\"\r\n                        onLoad={this.onLoad}\r\n                        onChange={this.onChange}\r\n                        onSelectionChange={this.onSelectionChange}\r\n                        onCursorChange={this.onCursorChange}\r\n                        onValidate={this.onValidate}\r\n                        value={this.state.value}\r\n                        fontSize={this.state.fontSize}\r\n                        showPrintMargin={this.state.showPrintMargin}\r\n                        showGutter={this.state.showGutter}\r\n                        highlightActiveLine={this.state.highlightActiveLine}\r\n                        setOptions={{\r\n                            useWorker: false,\r\n                            enableBasicAutocompletion: this.state.enableBasicAutocompletion,\r\n                            enableLiveAutocompletion: this.state.enableLiveAutocompletion,\r\n                            enableSnippets: this.state.enableSnippets,\r\n                            showLineNumbers: this.state.showLineNumbers,\r\n                            tabSize: 2\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"column\">\r\n                    <h2>Code</h2>\r\n                    <AceEditor\r\n                        mode=\"jsx\"\r\n                        theme=\"monokai\"\r\n                        readOnly={true}\r\n                        value={`<AceEditor\r\n  placeholder=\"${this.state.placeholder}\"\r\n  mode=\"${this.state.mode}\"\r\n  theme=\"${this.state.theme}\"\r\n  name=\"blah2\"\r\n  onLoad={this.onLoad}\r\n  onChange={this.onChange}\r\n  fontSize={${this.state.fontSize}}\r\n  showPrintMargin={${this.state.showPrintMargin}}\r\n  showGutter={${this.state.showGutter}}\r\n  highlightActiveLine={${this.state.highlightActiveLine}}\r\n  value={\\`${this.state.value}\\`}\r\n  setOptions={{\r\n  enableBasicAutocompletion: ${this.state.enableBasicAutocompletion},\r\n  enableLiveAutocompletion: ${this.state.enableLiveAutocompletion},\r\n  enableSnippets: ${this.state.enableSnippets},\r\n  showLineNumbers: ${this.state.showLineNumbers},\r\n  tabSize: 2,\r\n  }}/>\r\n            `}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Editor"]},"metadata":{},"sourceType":"module"}