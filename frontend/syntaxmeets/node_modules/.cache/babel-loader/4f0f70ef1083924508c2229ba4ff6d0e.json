{"ast":null,"code":"ace.define(\"ace/mode/pascal_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var PascalHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword.control\": \"absolute|abstract|all|and|and_then|array|as|asm|attribute|begin|bindable|case|class\" + \"|const|constructor|destructor|div|do|do|else|end|except|export|exports|external|far|file|finalization\" + \"|finally|for|forward|goto|if|implementation|import|in|inherited|initialization|interface|interrupt|is\" + \"|label|library|mod|module|name|near|nil|not|object|of|only|operator|or|or_else|otherwise|packed|pow|private\" + \"|program|property|protected|public|published|qualified|record|repeat|resident|restricted|segment|set|shl|shr\" + \"|then|to|try|type|unit|until|uses|value|var|view|virtual|while|with|xor\"\n    }, \"identifier\", true);\n    this.$rules = {\n      start: [{\n        caseInsensitive: true,\n        token: ['variable', \"text\", 'storage.type.prototype', 'entity.name.function.prototype'],\n        regex: '\\\\b(function|procedure)(\\\\s+)(\\\\w+)(\\\\.\\\\w+)?(?=(?:\\\\(.*?\\\\))?;\\\\s*(?:attribute|forward|external))'\n      }, {\n        caseInsensitive: true,\n        token: ['variable', \"text\", 'storage.type.function', 'entity.name.function'],\n        regex: '\\\\b(function|procedure)(\\\\s+)(\\\\w+)(\\\\.\\\\w+)?'\n      }, {\n        caseInsensitive: true,\n        token: keywordMapper,\n        regex: /\\b[a-z_]+\\b/\n      }, {\n        token: 'constant.numeric',\n        regex: '\\\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\\\.?[0-9]*)|(\\\\.[0-9]+))((e|E)(\\\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b'\n      }, {\n        token: 'punctuation.definition.comment',\n        regex: '--.*$'\n      }, {\n        token: 'punctuation.definition.comment',\n        regex: '//.*$'\n      }, {\n        token: 'punctuation.definition.comment',\n        regex: '\\\\(\\\\*',\n        push: [{\n          token: 'punctuation.definition.comment',\n          regex: '\\\\*\\\\)',\n          next: 'pop'\n        }, {\n          defaultToken: 'comment.block.one'\n        }]\n      }, {\n        token: 'punctuation.definition.comment',\n        regex: '\\\\{',\n        push: [{\n          token: 'punctuation.definition.comment',\n          regex: '\\\\}',\n          next: 'pop'\n        }, {\n          defaultToken: 'comment.block.two'\n        }]\n      }, {\n        token: 'punctuation.definition.string.begin',\n        regex: '\"',\n        push: [{\n          token: 'constant.character.escape',\n          regex: '\\\\\\\\.'\n        }, {\n          token: 'punctuation.definition.string.end',\n          regex: '\"',\n          next: 'pop'\n        }, {\n          defaultToken: 'string.quoted.double'\n        }]\n      }, {\n        token: 'punctuation.definition.string.begin',\n        regex: '\\'',\n        push: [{\n          token: 'constant.character.escape.apostrophe',\n          regex: '\\'\\''\n        }, {\n          token: 'punctuation.definition.string.end',\n          regex: '\\'',\n          next: 'pop'\n        }, {\n          defaultToken: 'string.quoted.single'\n        }]\n      }, {\n        token: 'keyword.operator',\n        regex: '[+\\\\-;,/*%]|:=|='\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(PascalHighlightRules, TextHighlightRules);\n  exports.PascalHighlightRules = PascalHighlightRules;\n});\nace.define(\"ace/mode/folding/coffee\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var Range = require(\"../../range\").Range;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var range = this.indentationBlock(session, row);\n      if (range) return range;\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      if (startLevel == -1 || line[startLevel] != \"#\") return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var level = line.search(re);\n        if (level == -1) continue;\n        if (line[level] != \"#\") break;\n        endRow = row;\n      }\n\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n\n      if (prevIndent != -1 && prevIndent < indent) session.foldWidgets[row - 1] = \"start\";else session.foldWidgets[row - 1] = \"\";\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/pascal\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/pascal_highlight_rules\", \"ace/mode/folding/coffee\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var PascalHighlightRules = require(\"./pascal_highlight_rules\").PascalHighlightRules;\n\n  var FoldMode = require(\"./folding/coffee\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = PascalHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = [\"--\", \"//\"];\n    this.blockComment = [{\n      start: \"(*\",\n      end: \"*)\"\n    }, {\n      start: \"{\",\n      end: \"}\"\n    }];\n    this.$id = \"ace/mode/pascal\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/pascal\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/node_modules/ace-builds/src-noconflict/mode-pascal.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","PascalHighlightRules","keywordMapper","createKeywordMapper","$rules","start","caseInsensitive","token","regex","push","next","defaultToken","normalizeRules","inherits","BaseFoldMode","FoldMode","Range","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","end","$id","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/pascal_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar PascalHighlightRules = function() {\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"keyword.control\": \"absolute|abstract|all|and|and_then|array|as|asm|attribute|begin|bindable|case|class\" +\r\n            \"|const|constructor|destructor|div|do|do|else|end|except|export|exports|external|far|file|finalization\" +\r\n            \"|finally|for|forward|goto|if|implementation|import|in|inherited|initialization|interface|interrupt|is\" +\r\n            \"|label|library|mod|module|name|near|nil|not|object|of|only|operator|or|or_else|otherwise|packed|pow|private\" +\r\n            \"|program|property|protected|public|published|qualified|record|repeat|resident|restricted|segment|set|shl|shr\" +\r\n            \"|then|to|try|type|unit|until|uses|value|var|view|virtual|while|with|xor\"\r\n    }, \"identifier\", true);\r\n\r\n    this.$rules = {\r\n        start: [{\r\n                caseInsensitive: true,\r\n                token: ['variable', \"text\",\r\n                    'storage.type.prototype',\r\n                    'entity.name.function.prototype'\r\n                ],\r\n                regex: '\\\\b(function|procedure)(\\\\s+)(\\\\w+)(\\\\.\\\\w+)?(?=(?:\\\\(.*?\\\\))?;\\\\s*(?:attribute|forward|external))'\r\n            }, {\r\n                caseInsensitive: true,\r\n                token: ['variable', \"text\", 'storage.type.function', 'entity.name.function'],\r\n                regex: '\\\\b(function|procedure)(\\\\s+)(\\\\w+)(\\\\.\\\\w+)?'\r\n            }, {\r\n                caseInsensitive: true,\r\n                token: keywordMapper,\r\n                regex: /\\b[a-z_]+\\b/\r\n            }, {\r\n                token: 'constant.numeric',\r\n                regex: '\\\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\\\.?[0-9]*)|(\\\\.[0-9]+))((e|E)(\\\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b'\r\n            }, {\r\n                token: 'punctuation.definition.comment',\r\n                regex: '--.*$'\r\n            }, {\r\n                token: 'punctuation.definition.comment',\r\n                regex: '//.*$'\r\n            }, {\r\n                token: 'punctuation.definition.comment',\r\n                regex: '\\\\(\\\\*',\r\n                push: [{\r\n                        token: 'punctuation.definition.comment',\r\n                        regex: '\\\\*\\\\)',\r\n                        next: 'pop'\r\n                    },\r\n                    { defaultToken: 'comment.block.one' }\r\n                ]\r\n            }, {\r\n                token: 'punctuation.definition.comment',\r\n                regex: '\\\\{',\r\n                push: [{\r\n                        token: 'punctuation.definition.comment',\r\n                        regex: '\\\\}',\r\n                        next: 'pop'\r\n                    },\r\n                    { defaultToken: 'comment.block.two' }\r\n                ]\r\n            }, {\r\n                token: 'punctuation.definition.string.begin',\r\n                regex: '\"',\r\n                push: [{ token: 'constant.character.escape', regex: '\\\\\\\\.' },\r\n                    {\r\n                        token: 'punctuation.definition.string.end',\r\n                        regex: '\"',\r\n                        next: 'pop'\r\n                    },\r\n                    { defaultToken: 'string.quoted.double' }\r\n                ]\r\n            }, {\r\n                token: 'punctuation.definition.string.begin',\r\n                regex: '\\'',\r\n                push: [{\r\n                        token: 'constant.character.escape.apostrophe',\r\n                        regex: '\\'\\''\r\n                    },\r\n                    {\r\n                        token: 'punctuation.definition.string.end',\r\n                        regex: '\\'',\r\n                        next: 'pop'\r\n                    },\r\n                    { defaultToken: 'string.quoted.single' }\r\n                ]\r\n            }, {\r\n                token: 'keyword.operator',\r\n                regex: '[+\\\\-;,/*%]|:=|='\r\n            }\r\n        ]\r\n    };\r\n\r\n    this.normalizeRules();\r\n};\r\n\r\noop.inherits(PascalHighlightRules, TextHighlightRules);\r\n\r\nexports.PascalHighlightRules = PascalHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\nvar Range = require(\"../../range\").Range;\r\n\r\nvar FoldMode = exports.FoldMode = function() {};\r\noop.inherits(FoldMode, BaseFoldMode);\r\n\r\n(function() {\r\n\r\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\r\n        var range = this.indentationBlock(session, row);\r\n        if (range)\r\n            return range;\r\n\r\n        var re = /\\S/;\r\n        var line = session.getLine(row);\r\n        var startLevel = line.search(re);\r\n        if (startLevel == -1 || line[startLevel] != \"#\")\r\n            return;\r\n\r\n        var startColumn = line.length;\r\n        var maxRow = session.getLength();\r\n        var startRow = row;\r\n        var endRow = row;\r\n\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var level = line.search(re);\r\n\r\n            if (level == -1)\r\n                continue;\r\n\r\n            if (line[level] != \"#\")\r\n                break;\r\n\r\n            endRow = row;\r\n        }\r\n\r\n        if (endRow > startRow) {\r\n            var endColumn = session.getLine(endRow).length;\r\n            return new Range(startRow, startColumn, endRow, endColumn);\r\n        }\r\n    };\r\n    this.getFoldWidget = function(session, foldStyle, row) {\r\n        var line = session.getLine(row);\r\n        var indent = line.search(/\\S/);\r\n        var next = session.getLine(row + 1);\r\n        var prev = session.getLine(row - 1);\r\n        var prevIndent = prev.search(/\\S/);\r\n        var nextIndent = next.search(/\\S/);\r\n\r\n        if (indent == -1) {\r\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\r\n            return \"\";\r\n        }\r\n        if (prevIndent == -1) {\r\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\r\n                session.foldWidgets[row - 1] = \"\";\r\n                session.foldWidgets[row + 1] = \"\";\r\n                return \"start\";\r\n            }\r\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\r\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\r\n                session.foldWidgets[row - 1] = \"start\";\r\n                session.foldWidgets[row + 1] = \"\";\r\n                return \"\";\r\n            }\r\n        }\r\n\r\n        if (prevIndent!= -1 && prevIndent < indent)\r\n            session.foldWidgets[row - 1] = \"start\";\r\n        else\r\n            session.foldWidgets[row - 1] = \"\";\r\n\r\n        if (indent < nextIndent)\r\n            return \"start\";\r\n        else\r\n            return \"\";\r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n\r\nace.define(\"ace/mode/pascal\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/pascal_highlight_rules\",\"ace/mode/folding/coffee\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar PascalHighlightRules = require(\"./pascal_highlight_rules\").PascalHighlightRules;\r\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = PascalHighlightRules;\r\n    this.foldingRules = new FoldMode();\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n       \r\n    this.lineCommentStart = [\"--\", \"//\"];\r\n    this.blockComment = [\r\n        {start: \"(*\", end: \"*)\"},\r\n        {start: \"{\", end: \"}\"}\r\n    ];\r\n    \r\n    this.$id = \"ace/mode/pascal\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});                (function() {\r\n                    ace.require([\"ace/mode/pascal\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "]},"metadata":{},"sourceType":"script"}