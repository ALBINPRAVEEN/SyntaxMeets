{"ast":null,"code":"ace.define(\"ace/snippets/php\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  exports.snippetText = \"snippet ec\\n\\\r\n\techo ${1};\\n\\\r\nsnippet ns\\n\\\r\n\tnamespace ${1:Foo\\\\Bar\\\\Baz};\\n\\\r\n\t${2}\\n\\\r\nsnippet use\\n\\\r\n\tuse ${1:Foo\\\\Bar\\\\Baz};\\n\\\r\n\t${2}\\n\\\r\nsnippet c\\n\\\r\n\t${1:abstract }class ${2:$FILENAME}\\n\\\r\n\t{\\n\\\r\n\t\t${3}\\n\\\r\n\t}\\n\\\r\nsnippet i\\n\\\r\n\tinterface ${1:$FILENAME}\\n\\\r\n\t{\\n\\\r\n\t\t${2}\\n\\\r\n\t}\\n\\\r\nsnippet t.\\n\\\r\n\t$this->${1}\\n\\\r\nsnippet f\\n\\\r\n\tfunction ${1:foo}(${2:array }${3:$bar})\\n\\\r\n\t{\\n\\\r\n\t\t${4}\\n\\\r\n\t}\\n\\\r\n# method\\n\\\r\nsnippet m\\n\\\r\n\t${1:abstract }${2:protected}${3: static} function ${4:foo}(${5:array }${6:$bar})\\n\\\r\n\t{\\n\\\r\n\t\t${7}\\n\\\r\n\t}\\n\\\r\n# setter method\\n\\\r\nsnippet sm\\n\\\r\n\t/**\\n\\\r\n\t * Sets the value of ${1:foo}\\n\\\r\n\t *\\n\\\r\n\t * @param ${2:$1} $$1 ${3:description}\\n\\\r\n\t *\\n\\\r\n\t * @return ${4:$FILENAME}\\n\\\r\n\t */\\n\\\r\n\t${5:public} function set${6:$2}(${7:$2 }$$1)\\n\\\r\n\t{\\n\\\r\n\t\t$this->${8:$1} = $$1;\\n\\\r\n\t\treturn $this;\\n\\\r\n\t}${9}\\n\\\r\n# getter method\\n\\\r\nsnippet gm\\n\\\r\n\t/**\\n\\\r\n\t * Gets the value of ${1:foo}\\n\\\r\n\t *\\n\\\r\n\t * @return ${2:$1}\\n\\\r\n\t */\\n\\\r\n\t${3:public} function get${4:$2}()\\n\\\r\n\t{\\n\\\r\n\t\treturn $this->${5:$1};\\n\\\r\n\t}${6}\\n\\\r\n#setter\\n\\\r\nsnippet $s\\n\\\r\n\t${1:$foo}->set${2:Bar}(${3});\\n\\\r\n#getter\\n\\\r\nsnippet $g\\n\\\r\n\t${1:$foo}->get${2:Bar}();\\n\\\r\n\\n\\\r\n# Tertiary conditional\\n\\\r\nsnippet =?:\\n\\\r\n\t$${1:foo} = ${2:true} ? ${3:a} : ${4};\\n\\\r\nsnippet ?:\\n\\\r\n\t${1:true} ? ${2:a} : ${3}\\n\\\r\n\\n\\\r\nsnippet C\\n\\\r\n\t$_COOKIE['${1:variable}']${2}\\n\\\r\nsnippet E\\n\\\r\n\t$_ENV['${1:variable}']${2}\\n\\\r\nsnippet F\\n\\\r\n\t$_FILES['${1:variable}']${2}\\n\\\r\nsnippet G\\n\\\r\n\t$_GET['${1:variable}']${2}\\n\\\r\nsnippet P\\n\\\r\n\t$_POST['${1:variable}']${2}\\n\\\r\nsnippet R\\n\\\r\n\t$_REQUEST['${1:variable}']${2}\\n\\\r\nsnippet S\\n\\\r\n\t$_SERVER['${1:variable}']${2}\\n\\\r\nsnippet SS\\n\\\r\n\t$_SESSION['${1:variable}']${2}\\n\\\r\n\\n\\\r\n# the following are old ones\\n\\\r\nsnippet inc\\n\\\r\n\tinclude '${1:file}';${2}\\n\\\r\nsnippet inc1\\n\\\r\n\tinclude_once '${1:file}';${2}\\n\\\r\nsnippet req\\n\\\r\n\trequire '${1:file}';${2}\\n\\\r\nsnippet req1\\n\\\r\n\trequire_once '${1:file}';${2}\\n\\\r\n# Start Docblock\\n\\\r\nsnippet /*\\n\\\r\n\t/**\\n\\\r\n\t * ${1}\\n\\\r\n\t */\\n\\\r\n# Class - post doc\\n\\\r\nsnippet doc_cp\\n\\\r\n\t/**\\n\\\r\n\t * ${1:undocumented class}\\n\\\r\n\t *\\n\\\r\n\t * @package ${2:default}\\n\\\r\n\t * @subpackage ${3:default}\\n\\\r\n\t * @author ${4:`g:snips_author`}\\n\\\r\n\t */${5}\\n\\\r\n# Class Variable - post doc\\n\\\r\nsnippet doc_vp\\n\\\r\n\t/**\\n\\\r\n\t * ${1:undocumented class variable}\\n\\\r\n\t *\\n\\\r\n\t * @var ${2:string}\\n\\\r\n\t */${3}\\n\\\r\n# Class Variable\\n\\\r\nsnippet doc_v\\n\\\r\n\t/**\\n\\\r\n\t * ${3:undocumented class variable}\\n\\\r\n\t *\\n\\\r\n\t * @var ${4:string}\\n\\\r\n\t */\\n\\\r\n\t${1:var} $${2};${5}\\n\\\r\n# Class\\n\\\r\nsnippet doc_c\\n\\\r\n\t/**\\n\\\r\n\t * ${3:undocumented class}\\n\\\r\n\t *\\n\\\r\n\t * @package ${4:default}\\n\\\r\n\t * @subpackage ${5:default}\\n\\\r\n\t * @author ${6:`g:snips_author`}\\n\\\r\n\t */\\n\\\r\n\t${1:}class ${2:}\\n\\\r\n\t{\\n\\\r\n\t\t${7}\\n\\\r\n\t} // END $1class $2\\n\\\r\n# Constant Definition - post doc\\n\\\r\nsnippet doc_dp\\n\\\r\n\t/**\\n\\\r\n\t * ${1:undocumented constant}\\n\\\r\n\t */${2}\\n\\\r\n# Constant Definition\\n\\\r\nsnippet doc_d\\n\\\r\n\t/**\\n\\\r\n\t * ${3:undocumented constant}\\n\\\r\n\t */\\n\\\r\n\tdefine(${1}, ${2});${4}\\n\\\r\n# Function - post doc\\n\\\r\nsnippet doc_fp\\n\\\r\n\t/**\\n\\\r\n\t * ${1:undocumented function}\\n\\\r\n\t *\\n\\\r\n\t * @return ${2:void}\\n\\\r\n\t * @author ${3:`g:snips_author`}\\n\\\r\n\t */${4}\\n\\\r\n# Function signature\\n\\\r\nsnippet doc_s\\n\\\r\n\t/**\\n\\\r\n\t * ${4:undocumented function}\\n\\\r\n\t *\\n\\\r\n\t * @return ${5:void}\\n\\\r\n\t * @author ${6:`g:snips_author`}\\n\\\r\n\t */\\n\\\r\n\t${1}function ${2}(${3});${7}\\n\\\r\n# Function\\n\\\r\nsnippet doc_f\\n\\\r\n\t/**\\n\\\r\n\t * ${4:undocumented function}\\n\\\r\n\t *\\n\\\r\n\t * @return ${5:void}\\n\\\r\n\t * @author ${6:`g:snips_author`}\\n\\\r\n\t */\\n\\\r\n\t${1}function ${2}(${3})\\n\\\r\n\t{${7}\\n\\\r\n\t}\\n\\\r\n# Header\\n\\\r\nsnippet doc_h\\n\\\r\n\t/**\\n\\\r\n\t * ${1}\\n\\\r\n\t *\\n\\\r\n\t * @author ${2:`g:snips_author`}\\n\\\r\n\t * @version ${3:$Id$}\\n\\\r\n\t * @copyright ${4:$2}, `strftime('%d %B, %Y')`\\n\\\r\n\t * @package ${5:default}\\n\\\r\n\t */\\n\\\r\n\\n\\\r\n# Interface\\n\\\r\nsnippet interface\\n\\\r\n\t/**\\n\\\r\n\t * ${2:undocumented class}\\n\\\r\n\t *\\n\\\r\n\t * @package ${3:default}\\n\\\r\n\t * @author ${4:`g:snips_author`}\\n\\\r\n\t */\\n\\\r\n\tinterface ${1:$FILENAME}\\n\\\r\n\t{\\n\\\r\n\t\t${5}\\n\\\r\n\t}\\n\\\r\n# class ...\\n\\\r\nsnippet class\\n\\\r\n\t/**\\n\\\r\n\t * ${1}\\n\\\r\n\t */\\n\\\r\n\tclass ${2:$FILENAME}\\n\\\r\n\t{\\n\\\r\n\t\t${3}\\n\\\r\n\t\t/**\\n\\\r\n\t\t * ${4}\\n\\\r\n\t\t */\\n\\\r\n\t\t${5:public} function ${6:__construct}(${7:argument})\\n\\\r\n\t\t{\\n\\\r\n\t\t\t${8:// code...}\\n\\\r\n\t\t}\\n\\\r\n\t}\\n\\\r\n# define(...)\\n\\\r\nsnippet def\\n\\\r\n\tdefine('${1}'${2});${3}\\n\\\r\n# defined(...)\\n\\\r\nsnippet def?\\n\\\r\n\t${1}defined('${2}')${3}\\n\\\r\nsnippet wh\\n\\\r\n\twhile (${1:/* condition */}) {\\n\\\r\n\t\t${2:// code...}\\n\\\r\n\t}\\n\\\r\n# do ... while\\n\\\r\nsnippet do\\n\\\r\n\tdo {\\n\\\r\n\t\t${2:// code... }\\n\\\r\n\t} while (${1:/* condition */});\\n\\\r\nsnippet if\\n\\\r\n\tif (${1:/* condition */}) {\\n\\\r\n\t\t${2:// code...}\\n\\\r\n\t}\\n\\\r\nsnippet ife\\n\\\r\n\tif (${1:/* condition */}) {\\n\\\r\n\t\t${2:// code...}\\n\\\r\n\t} else {\\n\\\r\n\t\t${3:// code...}\\n\\\r\n\t}\\n\\\r\n\t${4}\\n\\\r\nsnippet else\\n\\\r\n\telse {\\n\\\r\n\t\t${1:// code...}\\n\\\r\n\t}\\n\\\r\nsnippet elseif\\n\\\r\n\telseif (${1:/* condition */}) {\\n\\\r\n\t\t${2:// code...}\\n\\\r\n\t}\\n\\\r\nsnippet switch\\n\\\r\n\tswitch ($${1:variable}) {\\n\\\r\n\t\tcase '${2:value}':\\n\\\r\n\t\t\t${3:// code...}\\n\\\r\n\t\t\tbreak;\\n\\\r\n\t\t${5}\\n\\\r\n\t\tdefault:\\n\\\r\n\t\t\t${4:// code...}\\n\\\r\n\t\t\tbreak;\\n\\\r\n\t}\\n\\\r\nsnippet case\\n\\\r\n\tcase '${1:value}':\\n\\\r\n\t\t${2:// code...}\\n\\\r\n\t\tbreak;${3}\\n\\\r\nsnippet for\\n\\\r\n\tfor ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {\\n\\\r\n\t\t${4: // code...}\\n\\\r\n\t}\\n\\\r\nsnippet foreach\\n\\\r\n\tforeach ($${1:variable} as $${2:value}) {\\n\\\r\n\t\t${3:// code...}\\n\\\r\n\t}\\n\\\r\nsnippet foreachk\\n\\\r\n\tforeach ($${1:variable} as $${2:key} => $${3:value}) {\\n\\\r\n\t\t${4:// code...}\\n\\\r\n\t}\\n\\\r\n# $... = array (...)\\n\\\r\nsnippet array\\n\\\r\n\t$${1:arrayName} = array('${2}' => ${3});${4}\\n\\\r\nsnippet try\\n\\\r\n\ttry {\\n\\\r\n\t\t${2}\\n\\\r\n\t} catch (${1:Exception} $e) {\\n\\\r\n\t}\\n\\\r\n# lambda with closure\\n\\\r\nsnippet lambda\\n\\\r\n\t${1:static }function (${2:args}) use (${3:&$x, $y /*put vars in scope (closure) */}) {\\n\\\r\n\t\t${4}\\n\\\r\n\t};\\n\\\r\n# pre_dump();\\n\\\r\nsnippet pd\\n\\\r\n\techo '<pre>'; var_dump(${1}); echo '</pre>';\\n\\\r\n# pre_dump(); die();\\n\\\r\nsnippet pdd\\n\\\r\n\techo '<pre>'; var_dump(${1}); echo '</pre>'; die(${2:});\\n\\\r\nsnippet vd\\n\\\r\n\tvar_dump(${1});\\n\\\r\nsnippet vdd\\n\\\r\n\tvar_dump(${1}); die(${2:});\\n\\\r\nsnippet http_redirect\\n\\\r\n\theader (\\\"HTTP/1.1 301 Moved Permanently\\\");\\n\\\r\n\theader (\\\"Location: \\\".URL);\\n\\\r\n\texit();\\n\\\r\n# Getters & Setters\\n\\\r\nsnippet gs\\n\\\r\n\t/**\\n\\\r\n\t * Gets the value of ${1:foo}\\n\\\r\n\t *\\n\\\r\n\t * @return ${2:$1}\\n\\\r\n\t */\\n\\\r\n\tpublic function get${3:$2}()\\n\\\r\n\t{\\n\\\r\n\t\treturn $this->${4:$1};\\n\\\r\n\t}\\n\\\r\n\\n\\\r\n\t/**\\n\\\r\n\t * Sets the value of $1\\n\\\r\n\t *\\n\\\r\n\t * @param $2 $$1 ${5:description}\\n\\\r\n\t *\\n\\\r\n\t * @return ${6:$FILENAME}\\n\\\r\n\t */\\n\\\r\n\tpublic function set$3(${7:$2 }$$1)\\n\\\r\n\t{\\n\\\r\n\t\t$this->$4 = $$1;\\n\\\r\n\t\treturn $this;\\n\\\r\n\t}${8}\\n\\\r\n# anotation, get, and set, useful for doctrine\\n\\\r\nsnippet ags\\n\\\r\n\t/**\\n\\\r\n\t * ${1:description}\\n\\\r\n\t *\\n\\\r\n\t * @${7}\\n\\\r\n\t */\\n\\\r\n\t${2:protected} $${3:foo};\\n\\\r\n\\n\\\r\n\tpublic function get${4:$3}()\\n\\\r\n\t{\\n\\\r\n\t\treturn $this->$3;\\n\\\r\n\t}\\n\\\r\n\\n\\\r\n\tpublic function set$4(${5:$4 }$${6:$3})\\n\\\r\n\t{\\n\\\r\n\t\t$this->$3 = $$6;\\n\\\r\n\t\treturn $this;\\n\\\r\n\t}\\n\\\r\nsnippet rett\\n\\\r\n\treturn true;\\n\\\r\nsnippet retf\\n\\\r\n\treturn false;\\n\\\r\nscope html\\n\\\r\nsnippet <?\\n\\\r\n\t<?php\\n\\\r\n\\n\\\r\n\t${1}\\n\\\r\nsnippet <?e\\n\\\r\n\t<?php echo ${1} ?>\\n\\\r\n# this one is for php5.4\\n\\\r\nsnippet <?=\\n\\\r\n\t<?=${1}?>\\n\\\r\nsnippet ifil\\n\\\r\n\t<?php if (${1:/* condition */}): ?>\\n\\\r\n\t\t${2:<!-- code... -->}\\n\\\r\n\t<?php endif; ?>\\n\\\r\nsnippet ifeil\\n\\\r\n\t<?php if (${1:/* condition */}): ?>\\n\\\r\n\t\t${2:<!-- html... -->}\\n\\\r\n\t<?php else: ?>\\n\\\r\n\t\t${3:<!-- html... -->}\\n\\\r\n\t<?php endif; ?>\\n\\\r\n\t${4}\\n\\\r\nsnippet foreachil\\n\\\r\n\t<?php foreach ($${1:variable} as $${2:value}): ?>\\n\\\r\n\t\t${3:<!-- html... -->}\\n\\\r\n\t<?php endforeach; ?>\\n\\\r\nsnippet foreachkil\\n\\\r\n\t<?php foreach ($${1:variable} as $${2:key} => $${3:value}): ?>\\n\\\r\n\t\t${4:<!-- html... -->}\\n\\\r\n\t<?php endforeach; ?>\\n\\\r\nscope html-tag\\n\\\r\nsnippet ifil\\\\n\\\\\\n\\\r\n\t<?php if (${1:true}): ?>${2:code}<?php endif; ?>\\n\\\r\nsnippet ifeil\\\\n\\\\\\n\\\r\n\t<?php if (${1:true}): ?>${2:code}<?php else: ?>${3:code}<?php endif; ?>${4}\\n\\\r\n\";\n  exports.scope = \"php\";\n});\n\n(function () {\n  ace.require([\"ace/snippets/php\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/node_modules/ace-builds/src-noconflict/snippets/php.js"],"names":["ace","define","require","exports","module","snippetText","scope","m"],"mappings":"AAAAA,GAAG,CAACC,MAAJ,CAAW,kBAAX,EAA8B,CAAC,SAAD,EAAW,SAAX,EAAqB,QAArB,CAA9B,EAA8D,UAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AACjG;;AAEAD,EAAAA,OAAO,CAACE,WAAR,GAAsB;AACtgYAF,EAAAA,OAAO,CAACG,KAAR,GAAgB,KAAhB;AAEC,CArYD;;AAqYmB,CAAC,YAAW;AACXN,EAAAA,GAAG,CAACE,OAAJ,CAAY,CAAC,kBAAD,CAAZ,EAAkC,UAASK,CAAT,EAAY;AAC1C,QAAI,OAAOH,MAAP,IAAiB,QAAjB,IAA6B,OAAOD,OAAP,IAAkB,QAA/C,IAA2DC,MAA/D,EAAuE;AACnEA,MAAAA,MAAM,CAACD,OAAP,GAAiBI,CAAjB;AACH;AACJ,GAJD;AAKH,CANE","sourcesContent":["ace.define(\"ace/snippets/php\",[\"require\",\"exports\",\"module\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nexports.snippetText = \"snippet ec\\n\\\r\n\techo ${1};\\n\\\r\nsnippet ns\\n\\\r\n\tnamespace ${1:Foo\\\\Bar\\\\Baz};\\n\\\r\n\t${2}\\n\\\r\nsnippet use\\n\\\r\n\tuse ${1:Foo\\\\Bar\\\\Baz};\\n\\\r\n\t${2}\\n\\\r\nsnippet c\\n\\\r\n\t${1:abstract }class ${2:$FILENAME}\\n\\\r\n\t{\\n\\\r\n\t\t${3}\\n\\\r\n\t}\\n\\\r\nsnippet i\\n\\\r\n\tinterface ${1:$FILENAME}\\n\\\r\n\t{\\n\\\r\n\t\t${2}\\n\\\r\n\t}\\n\\\r\nsnippet t.\\n\\\r\n\t$this->${1}\\n\\\r\nsnippet f\\n\\\r\n\tfunction ${1:foo}(${2:array }${3:$bar})\\n\\\r\n\t{\\n\\\r\n\t\t${4}\\n\\\r\n\t}\\n\\\r\n# method\\n\\\r\nsnippet m\\n\\\r\n\t${1:abstract }${2:protected}${3: static} function ${4:foo}(${5:array }${6:$bar})\\n\\\r\n\t{\\n\\\r\n\t\t${7}\\n\\\r\n\t}\\n\\\r\n# setter method\\n\\\r\nsnippet sm\\n\\\r\n\t/**\\n\\\r\n\t * Sets the value of ${1:foo}\\n\\\r\n\t *\\n\\\r\n\t * @param ${2:$1} $$1 ${3:description}\\n\\\r\n\t *\\n\\\r\n\t * @return ${4:$FILENAME}\\n\\\r\n\t */\\n\\\r\n\t${5:public} function set${6:$2}(${7:$2 }$$1)\\n\\\r\n\t{\\n\\\r\n\t\t$this->${8:$1} = $$1;\\n\\\r\n\t\treturn $this;\\n\\\r\n\t}${9}\\n\\\r\n# getter method\\n\\\r\nsnippet gm\\n\\\r\n\t/**\\n\\\r\n\t * Gets the value of ${1:foo}\\n\\\r\n\t *\\n\\\r\n\t * @return ${2:$1}\\n\\\r\n\t */\\n\\\r\n\t${3:public} function get${4:$2}()\\n\\\r\n\t{\\n\\\r\n\t\treturn $this->${5:$1};\\n\\\r\n\t}${6}\\n\\\r\n#setter\\n\\\r\nsnippet $s\\n\\\r\n\t${1:$foo}->set${2:Bar}(${3});\\n\\\r\n#getter\\n\\\r\nsnippet $g\\n\\\r\n\t${1:$foo}->get${2:Bar}();\\n\\\r\n\\n\\\r\n# Tertiary conditional\\n\\\r\nsnippet =?:\\n\\\r\n\t$${1:foo} = ${2:true} ? ${3:a} : ${4};\\n\\\r\nsnippet ?:\\n\\\r\n\t${1:true} ? ${2:a} : ${3}\\n\\\r\n\\n\\\r\nsnippet C\\n\\\r\n\t$_COOKIE['${1:variable}']${2}\\n\\\r\nsnippet E\\n\\\r\n\t$_ENV['${1:variable}']${2}\\n\\\r\nsnippet F\\n\\\r\n\t$_FILES['${1:variable}']${2}\\n\\\r\nsnippet G\\n\\\r\n\t$_GET['${1:variable}']${2}\\n\\\r\nsnippet P\\n\\\r\n\t$_POST['${1:variable}']${2}\\n\\\r\nsnippet R\\n\\\r\n\t$_REQUEST['${1:variable}']${2}\\n\\\r\nsnippet S\\n\\\r\n\t$_SERVER['${1:variable}']${2}\\n\\\r\nsnippet SS\\n\\\r\n\t$_SESSION['${1:variable}']${2}\\n\\\r\n\\n\\\r\n# the following are old ones\\n\\\r\nsnippet inc\\n\\\r\n\tinclude '${1:file}';${2}\\n\\\r\nsnippet inc1\\n\\\r\n\tinclude_once '${1:file}';${2}\\n\\\r\nsnippet req\\n\\\r\n\trequire '${1:file}';${2}\\n\\\r\nsnippet req1\\n\\\r\n\trequire_once '${1:file}';${2}\\n\\\r\n# Start Docblock\\n\\\r\nsnippet /*\\n\\\r\n\t/**\\n\\\r\n\t * ${1}\\n\\\r\n\t */\\n\\\r\n# Class - post doc\\n\\\r\nsnippet doc_cp\\n\\\r\n\t/**\\n\\\r\n\t * ${1:undocumented class}\\n\\\r\n\t *\\n\\\r\n\t * @package ${2:default}\\n\\\r\n\t * @subpackage ${3:default}\\n\\\r\n\t * @author ${4:`g:snips_author`}\\n\\\r\n\t */${5}\\n\\\r\n# Class Variable - post doc\\n\\\r\nsnippet doc_vp\\n\\\r\n\t/**\\n\\\r\n\t * ${1:undocumented class variable}\\n\\\r\n\t *\\n\\\r\n\t * @var ${2:string}\\n\\\r\n\t */${3}\\n\\\r\n# Class Variable\\n\\\r\nsnippet doc_v\\n\\\r\n\t/**\\n\\\r\n\t * ${3:undocumented class variable}\\n\\\r\n\t *\\n\\\r\n\t * @var ${4:string}\\n\\\r\n\t */\\n\\\r\n\t${1:var} $${2};${5}\\n\\\r\n# Class\\n\\\r\nsnippet doc_c\\n\\\r\n\t/**\\n\\\r\n\t * ${3:undocumented class}\\n\\\r\n\t *\\n\\\r\n\t * @package ${4:default}\\n\\\r\n\t * @subpackage ${5:default}\\n\\\r\n\t * @author ${6:`g:snips_author`}\\n\\\r\n\t */\\n\\\r\n\t${1:}class ${2:}\\n\\\r\n\t{\\n\\\r\n\t\t${7}\\n\\\r\n\t} // END $1class $2\\n\\\r\n# Constant Definition - post doc\\n\\\r\nsnippet doc_dp\\n\\\r\n\t/**\\n\\\r\n\t * ${1:undocumented constant}\\n\\\r\n\t */${2}\\n\\\r\n# Constant Definition\\n\\\r\nsnippet doc_d\\n\\\r\n\t/**\\n\\\r\n\t * ${3:undocumented constant}\\n\\\r\n\t */\\n\\\r\n\tdefine(${1}, ${2});${4}\\n\\\r\n# Function - post doc\\n\\\r\nsnippet doc_fp\\n\\\r\n\t/**\\n\\\r\n\t * ${1:undocumented function}\\n\\\r\n\t *\\n\\\r\n\t * @return ${2:void}\\n\\\r\n\t * @author ${3:`g:snips_author`}\\n\\\r\n\t */${4}\\n\\\r\n# Function signature\\n\\\r\nsnippet doc_s\\n\\\r\n\t/**\\n\\\r\n\t * ${4:undocumented function}\\n\\\r\n\t *\\n\\\r\n\t * @return ${5:void}\\n\\\r\n\t * @author ${6:`g:snips_author`}\\n\\\r\n\t */\\n\\\r\n\t${1}function ${2}(${3});${7}\\n\\\r\n# Function\\n\\\r\nsnippet doc_f\\n\\\r\n\t/**\\n\\\r\n\t * ${4:undocumented function}\\n\\\r\n\t *\\n\\\r\n\t * @return ${5:void}\\n\\\r\n\t * @author ${6:`g:snips_author`}\\n\\\r\n\t */\\n\\\r\n\t${1}function ${2}(${3})\\n\\\r\n\t{${7}\\n\\\r\n\t}\\n\\\r\n# Header\\n\\\r\nsnippet doc_h\\n\\\r\n\t/**\\n\\\r\n\t * ${1}\\n\\\r\n\t *\\n\\\r\n\t * @author ${2:`g:snips_author`}\\n\\\r\n\t * @version ${3:$Id$}\\n\\\r\n\t * @copyright ${4:$2}, `strftime('%d %B, %Y')`\\n\\\r\n\t * @package ${5:default}\\n\\\r\n\t */\\n\\\r\n\\n\\\r\n# Interface\\n\\\r\nsnippet interface\\n\\\r\n\t/**\\n\\\r\n\t * ${2:undocumented class}\\n\\\r\n\t *\\n\\\r\n\t * @package ${3:default}\\n\\\r\n\t * @author ${4:`g:snips_author`}\\n\\\r\n\t */\\n\\\r\n\tinterface ${1:$FILENAME}\\n\\\r\n\t{\\n\\\r\n\t\t${5}\\n\\\r\n\t}\\n\\\r\n# class ...\\n\\\r\nsnippet class\\n\\\r\n\t/**\\n\\\r\n\t * ${1}\\n\\\r\n\t */\\n\\\r\n\tclass ${2:$FILENAME}\\n\\\r\n\t{\\n\\\r\n\t\t${3}\\n\\\r\n\t\t/**\\n\\\r\n\t\t * ${4}\\n\\\r\n\t\t */\\n\\\r\n\t\t${5:public} function ${6:__construct}(${7:argument})\\n\\\r\n\t\t{\\n\\\r\n\t\t\t${8:// code...}\\n\\\r\n\t\t}\\n\\\r\n\t}\\n\\\r\n# define(...)\\n\\\r\nsnippet def\\n\\\r\n\tdefine('${1}'${2});${3}\\n\\\r\n# defined(...)\\n\\\r\nsnippet def?\\n\\\r\n\t${1}defined('${2}')${3}\\n\\\r\nsnippet wh\\n\\\r\n\twhile (${1:/* condition */}) {\\n\\\r\n\t\t${2:// code...}\\n\\\r\n\t}\\n\\\r\n# do ... while\\n\\\r\nsnippet do\\n\\\r\n\tdo {\\n\\\r\n\t\t${2:// code... }\\n\\\r\n\t} while (${1:/* condition */});\\n\\\r\nsnippet if\\n\\\r\n\tif (${1:/* condition */}) {\\n\\\r\n\t\t${2:// code...}\\n\\\r\n\t}\\n\\\r\nsnippet ife\\n\\\r\n\tif (${1:/* condition */}) {\\n\\\r\n\t\t${2:// code...}\\n\\\r\n\t} else {\\n\\\r\n\t\t${3:// code...}\\n\\\r\n\t}\\n\\\r\n\t${4}\\n\\\r\nsnippet else\\n\\\r\n\telse {\\n\\\r\n\t\t${1:// code...}\\n\\\r\n\t}\\n\\\r\nsnippet elseif\\n\\\r\n\telseif (${1:/* condition */}) {\\n\\\r\n\t\t${2:// code...}\\n\\\r\n\t}\\n\\\r\nsnippet switch\\n\\\r\n\tswitch ($${1:variable}) {\\n\\\r\n\t\tcase '${2:value}':\\n\\\r\n\t\t\t${3:// code...}\\n\\\r\n\t\t\tbreak;\\n\\\r\n\t\t${5}\\n\\\r\n\t\tdefault:\\n\\\r\n\t\t\t${4:// code...}\\n\\\r\n\t\t\tbreak;\\n\\\r\n\t}\\n\\\r\nsnippet case\\n\\\r\n\tcase '${1:value}':\\n\\\r\n\t\t${2:// code...}\\n\\\r\n\t\tbreak;${3}\\n\\\r\nsnippet for\\n\\\r\n\tfor ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {\\n\\\r\n\t\t${4: // code...}\\n\\\r\n\t}\\n\\\r\nsnippet foreach\\n\\\r\n\tforeach ($${1:variable} as $${2:value}) {\\n\\\r\n\t\t${3:// code...}\\n\\\r\n\t}\\n\\\r\nsnippet foreachk\\n\\\r\n\tforeach ($${1:variable} as $${2:key} => $${3:value}) {\\n\\\r\n\t\t${4:// code...}\\n\\\r\n\t}\\n\\\r\n# $... = array (...)\\n\\\r\nsnippet array\\n\\\r\n\t$${1:arrayName} = array('${2}' => ${3});${4}\\n\\\r\nsnippet try\\n\\\r\n\ttry {\\n\\\r\n\t\t${2}\\n\\\r\n\t} catch (${1:Exception} $e) {\\n\\\r\n\t}\\n\\\r\n# lambda with closure\\n\\\r\nsnippet lambda\\n\\\r\n\t${1:static }function (${2:args}) use (${3:&$x, $y /*put vars in scope (closure) */}) {\\n\\\r\n\t\t${4}\\n\\\r\n\t};\\n\\\r\n# pre_dump();\\n\\\r\nsnippet pd\\n\\\r\n\techo '<pre>'; var_dump(${1}); echo '</pre>';\\n\\\r\n# pre_dump(); die();\\n\\\r\nsnippet pdd\\n\\\r\n\techo '<pre>'; var_dump(${1}); echo '</pre>'; die(${2:});\\n\\\r\nsnippet vd\\n\\\r\n\tvar_dump(${1});\\n\\\r\nsnippet vdd\\n\\\r\n\tvar_dump(${1}); die(${2:});\\n\\\r\nsnippet http_redirect\\n\\\r\n\theader (\\\"HTTP/1.1 301 Moved Permanently\\\");\\n\\\r\n\theader (\\\"Location: \\\".URL);\\n\\\r\n\texit();\\n\\\r\n# Getters & Setters\\n\\\r\nsnippet gs\\n\\\r\n\t/**\\n\\\r\n\t * Gets the value of ${1:foo}\\n\\\r\n\t *\\n\\\r\n\t * @return ${2:$1}\\n\\\r\n\t */\\n\\\r\n\tpublic function get${3:$2}()\\n\\\r\n\t{\\n\\\r\n\t\treturn $this->${4:$1};\\n\\\r\n\t}\\n\\\r\n\\n\\\r\n\t/**\\n\\\r\n\t * Sets the value of $1\\n\\\r\n\t *\\n\\\r\n\t * @param $2 $$1 ${5:description}\\n\\\r\n\t *\\n\\\r\n\t * @return ${6:$FILENAME}\\n\\\r\n\t */\\n\\\r\n\tpublic function set$3(${7:$2 }$$1)\\n\\\r\n\t{\\n\\\r\n\t\t$this->$4 = $$1;\\n\\\r\n\t\treturn $this;\\n\\\r\n\t}${8}\\n\\\r\n# anotation, get, and set, useful for doctrine\\n\\\r\nsnippet ags\\n\\\r\n\t/**\\n\\\r\n\t * ${1:description}\\n\\\r\n\t *\\n\\\r\n\t * @${7}\\n\\\r\n\t */\\n\\\r\n\t${2:protected} $${3:foo};\\n\\\r\n\\n\\\r\n\tpublic function get${4:$3}()\\n\\\r\n\t{\\n\\\r\n\t\treturn $this->$3;\\n\\\r\n\t}\\n\\\r\n\\n\\\r\n\tpublic function set$4(${5:$4 }$${6:$3})\\n\\\r\n\t{\\n\\\r\n\t\t$this->$3 = $$6;\\n\\\r\n\t\treturn $this;\\n\\\r\n\t}\\n\\\r\nsnippet rett\\n\\\r\n\treturn true;\\n\\\r\nsnippet retf\\n\\\r\n\treturn false;\\n\\\r\nscope html\\n\\\r\nsnippet <?\\n\\\r\n\t<?php\\n\\\r\n\\n\\\r\n\t${1}\\n\\\r\nsnippet <?e\\n\\\r\n\t<?php echo ${1} ?>\\n\\\r\n# this one is for php5.4\\n\\\r\nsnippet <?=\\n\\\r\n\t<?=${1}?>\\n\\\r\nsnippet ifil\\n\\\r\n\t<?php if (${1:/* condition */}): ?>\\n\\\r\n\t\t${2:<!-- code... -->}\\n\\\r\n\t<?php endif; ?>\\n\\\r\nsnippet ifeil\\n\\\r\n\t<?php if (${1:/* condition */}): ?>\\n\\\r\n\t\t${2:<!-- html... -->}\\n\\\r\n\t<?php else: ?>\\n\\\r\n\t\t${3:<!-- html... -->}\\n\\\r\n\t<?php endif; ?>\\n\\\r\n\t${4}\\n\\\r\nsnippet foreachil\\n\\\r\n\t<?php foreach ($${1:variable} as $${2:value}): ?>\\n\\\r\n\t\t${3:<!-- html... -->}\\n\\\r\n\t<?php endforeach; ?>\\n\\\r\nsnippet foreachkil\\n\\\r\n\t<?php foreach ($${1:variable} as $${2:key} => $${3:value}): ?>\\n\\\r\n\t\t${4:<!-- html... -->}\\n\\\r\n\t<?php endforeach; ?>\\n\\\r\nscope html-tag\\n\\\r\nsnippet ifil\\\\n\\\\\\n\\\r\n\t<?php if (${1:true}): ?>${2:code}<?php endif; ?>\\n\\\r\nsnippet ifeil\\\\n\\\\\\n\\\r\n\t<?php if (${1:true}): ?>${2:code}<?php else: ?>${3:code}<?php endif; ?>${4}\\n\\\r\n\";\r\nexports.scope = \"php\";\r\n\r\n});                (function() {\r\n                    ace.require([\"ace/snippets/php\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "]},"metadata":{},"sourceType":"script"}