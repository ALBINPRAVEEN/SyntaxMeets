{"ast":null,"code":"ace.define(\"ace/mode/lua_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var LuaHighlightRules = function () {\n    var keywords = \"break|do|else|elseif|end|for|function|if|in|local|repeat|\" + \"return|then|until|while|or|and|not\";\n    var builtinConstants = \"true|false|nil|_G|_VERSION\";\n    var functions = \"string|xpcall|package|tostring|print|os|unpack|require|\" + \"getfenv|setmetatable|next|assert|tonumber|io|rawequal|\" + \"collectgarbage|getmetatable|module|rawset|math|debug|\" + \"pcall|table|newproxy|type|coroutine|_G|select|gcinfo|\" + \"pairs|rawget|loadstring|ipairs|_VERSION|dofile|setfenv|\" + \"load|error|loadfile|\" + \"sub|upper|len|gfind|rep|find|match|char|dump|gmatch|\" + \"reverse|byte|format|gsub|lower|preload|loadlib|loaded|\" + \"loaders|cpath|config|path|seeall|exit|setlocale|date|\" + \"getenv|difftime|remove|time|clock|tmpname|rename|execute|\" + \"lines|write|close|flush|open|output|type|read|stderr|\" + \"stdin|input|stdout|popen|tmpfile|log|max|acos|huge|\" + \"ldexp|pi|cos|tanh|pow|deg|tan|cosh|sinh|random|randomseed|\" + \"frexp|ceil|floor|rad|abs|sqrt|modf|asin|min|mod|fmod|log10|\" + \"atan2|exp|sin|atan|getupvalue|debug|sethook|getmetatable|\" + \"gethook|setmetatable|setlocal|traceback|setfenv|getinfo|\" + \"setupvalue|getlocal|getregistry|getfenv|setn|insert|getn|\" + \"foreachi|maxn|foreach|concat|sort|remove|resume|yield|\" + \"status|wrap|create|running|\" + \"__add|__sub|__mod|__unm|__concat|__lt|__index|__call|__gc|__metatable|\" + \"__mul|__div|__pow|__len|__eq|__le|__newindex|__tostring|__mode|__tonumber\";\n    var stdLibaries = \"string|package|os|io|math|debug|table|coroutine\";\n    var deprecatedIn5152 = \"setn|foreach|foreachi|gcinfo|log10|maxn\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": keywords,\n      \"support.function\": functions,\n      \"keyword.deprecated\": deprecatedIn5152,\n      \"constant.library\": stdLibaries,\n      \"constant.language\": builtinConstants,\n      \"variable.language\": \"self\"\n    }, \"identifier\");\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + hexInteger + \")\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var floatNumber = \"(?:\" + pointFloat + \")\";\n    this.$rules = {\n      \"start\": [{\n        stateName: \"bracketedComment\",\n        onMatch: function (value, currentState, stack) {\n          stack.unshift(this.next, value.length - 2, currentState);\n          return \"comment\";\n        },\n        regex: /\\-\\-\\[=*\\[/,\n        next: [{\n          onMatch: function (value, currentState, stack) {\n            if (value.length == stack[1]) {\n              stack.shift();\n              stack.shift();\n              this.next = stack.shift();\n            } else {\n              this.next = \"\";\n            }\n\n            return \"comment\";\n          },\n          regex: /\\]=*\\]/,\n          next: \"start\"\n        }, {\n          defaultToken: \"comment\"\n        }]\n      }, {\n        token: \"comment\",\n        regex: \"\\\\-\\\\-.*$\"\n      }, {\n        stateName: \"bracketedString\",\n        onMatch: function (value, currentState, stack) {\n          stack.unshift(this.next, value.length, currentState);\n          return \"string.start\";\n        },\n        regex: /\\[=*\\[/,\n        next: [{\n          onMatch: function (value, currentState, stack) {\n            if (value.length == stack[1]) {\n              stack.shift();\n              stack.shift();\n              this.next = stack.shift();\n            } else {\n              this.next = \"\";\n            }\n\n            return \"string.end\";\n          },\n          regex: /\\]=*\\]/,\n          next: \"start\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string\",\n        // \" string\n        regex: '\"(?:[^\\\\\\\\]|\\\\\\\\.)*?\"'\n      }, {\n        token: \"string\",\n        // ' string\n        regex: \"'(?:[^\\\\\\\\]|\\\\\\\\.)*?'\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: floatNumber\n      }, {\n        token: \"constant.numeric\",\n        // integer\n        regex: integer + \"\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+|\\\\-|\\\\*|\\\\/|%|\\\\#|\\\\^|~|<|>|<=|=>|==|~=|=|\\\\:|\\\\.\\\\.\\\\.|\\\\.\\\\.\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(\\\\{]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]\\\\)\\\\}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+|\\\\w+\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(LuaHighlightRules, TextHighlightRules);\n  exports.LuaHighlightRules = LuaHighlightRules;\n});\nace.define(\"ace/mode/folding/lua\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\", \"ace/token_iterator\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var Range = require(\"../../range\").Range;\n\n  var TokenIterator = require(\"../../token_iterator\").TokenIterator;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /\\b(function|then|do|repeat)\\b|{\\s*$|(\\[=*\\[)/;\n    this.foldingStopMarker = /\\bend\\b|^\\s*}|\\]=*\\]/;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var isStart = this.foldingStartMarker.test(line);\n      var isEnd = this.foldingStopMarker.test(line);\n\n      if (isStart && !isEnd) {\n        var match = line.match(this.foldingStartMarker);\n        if (match[1] == \"then\" && /\\belseif\\b/.test(line)) return;\n\n        if (match[1]) {\n          if (session.getTokenAt(row, match.index + 1).type === \"keyword\") return \"start\";\n        } else if (match[2]) {\n          var type = session.bgTokenizer.getState(row) || \"\";\n          if (type[0] == \"bracketedComment\" || type[0] == \"bracketedString\") return \"start\";\n        } else {\n          return \"start\";\n        }\n      }\n\n      if (foldStyle != \"markbeginend\" || !isEnd || isStart && isEnd) return \"\";\n      var match = line.match(this.foldingStopMarker);\n\n      if (match[0] === \"end\") {\n        if (session.getTokenAt(row, match.index + 1).type === \"keyword\") return \"end\";\n      } else if (match[0][0] === \"]\") {\n        var type = session.bgTokenizer.getState(row - 1) || \"\";\n        if (type[0] == \"bracketedComment\" || type[0] == \"bracketedString\") return \"end\";\n      } else return \"end\";\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.doc.getLine(row);\n      var match = this.foldingStartMarker.exec(line);\n\n      if (match) {\n        if (match[1]) return this.luaBlock(session, row, match.index + 1);\n        if (match[2]) return session.getCommentFoldRange(row, match.index + 1);\n        return this.openingBracketBlock(session, \"{\", row, match.index);\n      }\n\n      var match = this.foldingStopMarker.exec(line);\n\n      if (match) {\n        if (match[0] === \"end\") {\n          if (session.getTokenAt(row, match.index + 1).type === \"keyword\") return this.luaBlock(session, row, match.index + 1);\n        }\n\n        if (match[0][0] === \"]\") return session.getCommentFoldRange(row, match.index + 1);\n        return this.closingBracketBlock(session, \"}\", row, match.index + match[0].length);\n      }\n    };\n\n    this.luaBlock = function (session, row, column, tokenRange) {\n      var stream = new TokenIterator(session, row, column);\n      var indentKeywords = {\n        \"function\": 1,\n        \"do\": 1,\n        \"then\": 1,\n        \"elseif\": -1,\n        \"end\": -1,\n        \"repeat\": 1,\n        \"until\": -1\n      };\n      var token = stream.getCurrentToken();\n      if (!token || token.type != \"keyword\") return;\n      var val = token.value;\n      var stack = [val];\n      var dir = indentKeywords[val];\n      if (!dir) return;\n      var startColumn = dir === -1 ? stream.getCurrentTokenColumn() : session.getLine(row).length;\n      var startRow = row;\n      stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n\n      while (token = stream.step()) {\n        if (token.type !== \"keyword\") continue;\n        var level = dir * indentKeywords[token.value];\n\n        if (level > 0) {\n          stack.unshift(token.value);\n        } else if (level <= 0) {\n          stack.shift();\n          if (!stack.length && token.value != \"elseif\") break;\n          if (level === 0) stack.unshift(token.value);\n        }\n      }\n\n      if (!token) return null;\n      if (tokenRange) return stream.getCurrentTokenRange();\n      var row = stream.getCurrentTokenRow();\n      if (dir === -1) return new Range(row, session.getLine(row).length, startRow, startColumn);else return new Range(startRow, startColumn, row, stream.getCurrentTokenColumn());\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/lua\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/lua_highlight_rules\", \"ace/mode/folding/lua\", \"ace/range\", \"ace/worker/worker_client\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var LuaHighlightRules = require(\"./lua_highlight_rules\").LuaHighlightRules;\n\n  var LuaFoldMode = require(\"./folding/lua\").FoldMode;\n\n  var Range = require(\"../range\").Range;\n\n  var WorkerClient = require(\"../worker/worker_client\").WorkerClient;\n\n  var Mode = function () {\n    this.HighlightRules = LuaHighlightRules;\n    this.foldingRules = new LuaFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = {\n      start: \"--[\",\n      end: \"]--\"\n    };\n    var indentKeywords = {\n      \"function\": 1,\n      \"then\": 1,\n      \"do\": 1,\n      \"else\": 1,\n      \"elseif\": 1,\n      \"repeat\": 1,\n      \"end\": -1,\n      \"until\": -1\n    };\n    var outdentKeywords = [\"else\", \"elseif\", \"end\", \"until\"];\n\n    function getNetIndentLevel(tokens) {\n      var level = 0;\n\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n\n        if (token.type == \"keyword\") {\n          if (token.value in indentKeywords) {\n            level += indentKeywords[token.value];\n          }\n        } else if (token.type == \"paren.lparen\") {\n          level += token.value.length;\n        } else if (token.type == \"paren.rparen\") {\n          level -= token.value.length;\n        }\n      }\n\n      if (level < 0) {\n        return -1;\n      } else if (level > 0) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var level = 0;\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n\n      if (state == \"start\") {\n        level = getNetIndentLevel(tokens);\n      }\n\n      if (level > 0) {\n        return indent + tab;\n      } else if (level < 0 && indent.substr(indent.length - tab.length) == tab) {\n        if (!this.checkOutdent(state, line, \"\\n\")) {\n          return indent.substr(0, indent.length - tab.length);\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      if (input != \"\\n\" && input != \"\\r\" && input != \"\\r\\n\") return false;\n      if (line.match(/^\\s*[\\)\\}\\]]$/)) return true;\n      var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n      if (!tokens || !tokens.length) return false;\n      return tokens[0].type == \"keyword\" && outdentKeywords.indexOf(tokens[0].value) != -1;\n    };\n\n    this.getMatching = function (session, row, column) {\n      if (row == undefined) {\n        var pos = session.selection.lead;\n        column = pos.column;\n        row = pos.row;\n      }\n\n      var startToken = session.getTokenAt(row, column);\n      if (startToken && startToken.value in indentKeywords) return this.foldingRules.luaBlock(session, row, column, true);\n    };\n\n    this.autoOutdent = function (state, session, row) {\n      var line = session.getLine(row);\n      var column = line.match(/^\\s*/)[0].length;\n      if (!column || !row) return;\n      var startRange = this.getMatching(session, row, column + 1);\n      if (!startRange || startRange.start.row == row) return;\n      var indent = this.$getIndent(session.getLine(startRange.start.row));\n\n      if (indent.length != column) {\n        session.replace(new Range(row, 0, row, column), indent);\n        session.outdentRows(new Range(row + 1, 0, row + 1, 0));\n      }\n    };\n\n    this.createWorker = function (session) {\n      var worker = new WorkerClient([\"ace\"], \"ace/mode/lua_worker\", \"Worker\");\n      worker.attachToDocument(session.getDocument());\n      worker.on(\"annotate\", function (e) {\n        session.setAnnotations(e.data);\n      });\n      worker.on(\"terminate\", function () {\n        session.clearAnnotations();\n      });\n      return worker;\n    };\n\n    this.$id = \"ace/mode/lua\";\n    this.snippetFileId = \"ace/snippets/lua\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/lua\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/node_modules/ace-builds/src-noconflict/mode-lua.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","LuaHighlightRules","keywords","builtinConstants","functions","stdLibaries","deprecatedIn5152","keywordMapper","createKeywordMapper","decimalInteger","hexInteger","integer","fraction","intPart","pointFloat","floatNumber","$rules","stateName","onMatch","value","currentState","stack","unshift","next","length","regex","shift","defaultToken","token","normalizeRules","inherits","BaseFoldMode","FoldMode","Range","TokenIterator","foldingStartMarker","foldingStopMarker","getFoldWidget","session","foldStyle","row","line","getLine","isStart","test","isEnd","match","getTokenAt","index","type","bgTokenizer","getState","getFoldWidgetRange","doc","exec","luaBlock","getCommentFoldRange","openingBracketBlock","closingBracketBlock","column","tokenRange","stream","indentKeywords","getCurrentToken","val","dir","startColumn","getCurrentTokenColumn","startRow","step","stepBackward","stepForward","level","getCurrentTokenRange","getCurrentTokenRow","call","prototype","TextMode","Mode","LuaFoldMode","WorkerClient","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","start","end","outdentKeywords","getNetIndentLevel","tokens","i","getNextLineIndent","state","tab","indent","$getIndent","tokenizedLine","getTokenizer","getLineTokens","substr","checkOutdent","input","trim","indexOf","getMatching","undefined","pos","selection","lead","startToken","autoOutdent","startRange","replace","outdentRows","createWorker","worker","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id","snippetFileId","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/lua_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar LuaHighlightRules = function() {\r\n\r\n    var keywords = (\r\n        \"break|do|else|elseif|end|for|function|if|in|local|repeat|\"+\r\n         \"return|then|until|while|or|and|not\"\r\n    );\r\n\r\n    var builtinConstants = (\"true|false|nil|_G|_VERSION\");\r\n\r\n    var functions = (\r\n        \"string|xpcall|package|tostring|print|os|unpack|require|\"+\r\n        \"getfenv|setmetatable|next|assert|tonumber|io|rawequal|\"+\r\n        \"collectgarbage|getmetatable|module|rawset|math|debug|\"+\r\n        \"pcall|table|newproxy|type|coroutine|_G|select|gcinfo|\"+\r\n        \"pairs|rawget|loadstring|ipairs|_VERSION|dofile|setfenv|\"+\r\n        \"load|error|loadfile|\"+\r\n\r\n        \"sub|upper|len|gfind|rep|find|match|char|dump|gmatch|\"+\r\n        \"reverse|byte|format|gsub|lower|preload|loadlib|loaded|\"+\r\n        \"loaders|cpath|config|path|seeall|exit|setlocale|date|\"+\r\n        \"getenv|difftime|remove|time|clock|tmpname|rename|execute|\"+\r\n        \"lines|write|close|flush|open|output|type|read|stderr|\"+\r\n        \"stdin|input|stdout|popen|tmpfile|log|max|acos|huge|\"+\r\n        \"ldexp|pi|cos|tanh|pow|deg|tan|cosh|sinh|random|randomseed|\"+\r\n        \"frexp|ceil|floor|rad|abs|sqrt|modf|asin|min|mod|fmod|log10|\"+\r\n        \"atan2|exp|sin|atan|getupvalue|debug|sethook|getmetatable|\"+\r\n        \"gethook|setmetatable|setlocal|traceback|setfenv|getinfo|\"+\r\n        \"setupvalue|getlocal|getregistry|getfenv|setn|insert|getn|\"+\r\n        \"foreachi|maxn|foreach|concat|sort|remove|resume|yield|\"+\r\n        \"status|wrap|create|running|\"+\r\n        \"__add|__sub|__mod|__unm|__concat|__lt|__index|__call|__gc|__metatable|\"+\r\n         \"__mul|__div|__pow|__len|__eq|__le|__newindex|__tostring|__mode|__tonumber\"\r\n    );\r\n\r\n    var stdLibaries = (\"string|package|os|io|math|debug|table|coroutine\");\r\n\r\n    var deprecatedIn5152 = (\"setn|foreach|foreachi|gcinfo|log10|maxn\");\r\n\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"keyword\": keywords,\r\n        \"support.function\": functions,\r\n        \"keyword.deprecated\": deprecatedIn5152,\r\n        \"constant.library\": stdLibaries,\r\n        \"constant.language\": builtinConstants,\r\n        \"variable.language\": \"self\"\r\n    }, \"identifier\");\r\n\r\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\r\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\r\n    var integer = \"(?:\" + decimalInteger + \"|\" + hexInteger + \")\";\r\n\r\n    var fraction = \"(?:\\\\.\\\\d+)\";\r\n    var intPart = \"(?:\\\\d+)\";\r\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\r\n    var floatNumber = \"(?:\" + pointFloat + \")\";\r\n\r\n    this.$rules = {\r\n        \"start\" : [{\r\n            stateName: \"bracketedComment\",\r\n            onMatch : function(value, currentState, stack){\r\n                stack.unshift(this.next, value.length - 2, currentState);\r\n                return \"comment\";\r\n            },\r\n            regex : /\\-\\-\\[=*\\[/,\r\n            next  : [\r\n                {\r\n                    onMatch : function(value, currentState, stack) {\r\n                        if (value.length == stack[1]) {\r\n                            stack.shift();\r\n                            stack.shift();\r\n                            this.next = stack.shift();\r\n                        } else {\r\n                            this.next = \"\";\r\n                        }\r\n                        return \"comment\";\r\n                    },\r\n                    regex : /\\]=*\\]/,\r\n                    next  : \"start\"\r\n                }, {\r\n                    defaultToken : \"comment\"\r\n                }\r\n            ]\r\n        },\r\n\r\n        {\r\n            token : \"comment\",\r\n            regex : \"\\\\-\\\\-.*$\"\r\n        },\r\n        {\r\n            stateName: \"bracketedString\",\r\n            onMatch : function(value, currentState, stack){\r\n                stack.unshift(this.next, value.length, currentState);\r\n                return \"string.start\";\r\n            },\r\n            regex : /\\[=*\\[/,\r\n            next  : [\r\n                {\r\n                    onMatch : function(value, currentState, stack) {\r\n                        if (value.length == stack[1]) {\r\n                            stack.shift();\r\n                            stack.shift();\r\n                            this.next = stack.shift();\r\n                        } else {\r\n                            this.next = \"\";\r\n                        }\r\n                        return \"string.end\";\r\n                    },\r\n                    \r\n                    regex : /\\]=*\\]/,\r\n                    next  : \"start\"\r\n                }, {\r\n                    defaultToken : \"string\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            token : \"string\",           // \" string\r\n            regex : '\"(?:[^\\\\\\\\]|\\\\\\\\.)*?\"'\r\n        }, {\r\n            token : \"string\",           // ' string\r\n            regex : \"'(?:[^\\\\\\\\]|\\\\\\\\.)*?'\"\r\n        }, {\r\n            token : \"constant.numeric\", // float\r\n            regex : floatNumber\r\n        }, {\r\n            token : \"constant.numeric\", // integer\r\n            regex : integer + \"\\\\b\"\r\n        }, {\r\n            token : keywordMapper,\r\n            regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\r\n        }, {\r\n            token : \"keyword.operator\",\r\n            regex : \"\\\\+|\\\\-|\\\\*|\\\\/|%|\\\\#|\\\\^|~|<|>|<=|=>|==|~=|=|\\\\:|\\\\.\\\\.\\\\.|\\\\.\\\\.\"\r\n        }, {\r\n            token : \"paren.lparen\",\r\n            regex : \"[\\\\[\\\\(\\\\{]\"\r\n        }, {\r\n            token : \"paren.rparen\",\r\n            regex : \"[\\\\]\\\\)\\\\}]\"\r\n        }, {\r\n            token : \"text\",\r\n            regex : \"\\\\s+|\\\\w+\"\r\n        } ]\r\n    };\r\n    \r\n    this.normalizeRules();\r\n};\r\n\r\noop.inherits(LuaHighlightRules, TextHighlightRules);\r\n\r\nexports.LuaHighlightRules = LuaHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/folding/lua\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\",\"ace/token_iterator\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\nvar Range = require(\"../../range\").Range;\r\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\r\n\r\n\r\nvar FoldMode = exports.FoldMode = function() {};\r\n\r\noop.inherits(FoldMode, BaseFoldMode);\r\n\r\n(function() {\r\n\r\n    this.foldingStartMarker = /\\b(function|then|do|repeat)\\b|{\\s*$|(\\[=*\\[)/;\r\n    this.foldingStopMarker = /\\bend\\b|^\\s*}|\\]=*\\]/;\r\n\r\n    this.getFoldWidget = function(session, foldStyle, row) {\r\n        var line = session.getLine(row);\r\n        var isStart = this.foldingStartMarker.test(line);\r\n        var isEnd = this.foldingStopMarker.test(line);\r\n\r\n        if (isStart && !isEnd) {\r\n            var match = line.match(this.foldingStartMarker);\r\n            if (match[1] == \"then\" && /\\belseif\\b/.test(line))\r\n                return;\r\n            if (match[1]) {\r\n                if (session.getTokenAt(row, match.index + 1).type === \"keyword\")\r\n                    return \"start\";\r\n            } else if (match[2]) {\r\n                var type = session.bgTokenizer.getState(row) || \"\";\r\n                if (type[0] == \"bracketedComment\" || type[0] == \"bracketedString\")\r\n                    return \"start\";\r\n            } else {\r\n                return \"start\";\r\n            }\r\n        }\r\n        if (foldStyle != \"markbeginend\" || !isEnd || isStart && isEnd)\r\n            return \"\";\r\n\r\n        var match = line.match(this.foldingStopMarker);\r\n        if (match[0] === \"end\") {\r\n            if (session.getTokenAt(row, match.index + 1).type === \"keyword\")\r\n                return \"end\";\r\n        } else if (match[0][0] === \"]\") {\r\n            var type = session.bgTokenizer.getState(row - 1) || \"\";\r\n            if (type[0] == \"bracketedComment\" || type[0] == \"bracketedString\")\r\n                return \"end\";\r\n        } else\r\n            return \"end\";\r\n    };\r\n\r\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\r\n        var line = session.doc.getLine(row);\r\n        var match = this.foldingStartMarker.exec(line);\r\n        if (match) {\r\n            if (match[1])\r\n                return this.luaBlock(session, row, match.index + 1);\r\n\r\n            if (match[2])\r\n                return session.getCommentFoldRange(row, match.index + 1);\r\n\r\n            return this.openingBracketBlock(session, \"{\", row, match.index);\r\n        }\r\n\r\n        var match = this.foldingStopMarker.exec(line);\r\n        if (match) {\r\n            if (match[0] === \"end\") {\r\n                if (session.getTokenAt(row, match.index + 1).type === \"keyword\")\r\n                    return this.luaBlock(session, row, match.index + 1);\r\n            }\r\n\r\n            if (match[0][0] === \"]\")\r\n                return session.getCommentFoldRange(row, match.index + 1);\r\n\r\n            return this.closingBracketBlock(session, \"}\", row, match.index + match[0].length);\r\n        }\r\n    };\r\n\r\n    this.luaBlock = function(session, row, column, tokenRange) {\r\n        var stream = new TokenIterator(session, row, column);\r\n        var indentKeywords = {\r\n            \"function\": 1,\r\n            \"do\": 1,\r\n            \"then\": 1,\r\n            \"elseif\": -1,\r\n            \"end\": -1,\r\n            \"repeat\": 1,\r\n            \"until\": -1\r\n        };\r\n\r\n        var token = stream.getCurrentToken();\r\n        if (!token || token.type != \"keyword\")\r\n            return;\r\n\r\n        var val = token.value;\r\n        var stack = [val];\r\n        var dir = indentKeywords[val];\r\n\r\n        if (!dir)\r\n            return;\r\n\r\n        var startColumn = dir === -1 ? stream.getCurrentTokenColumn() : session.getLine(row).length;\r\n        var startRow = row;\r\n\r\n        stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\r\n        while(token = stream.step()) {\r\n            if (token.type !== \"keyword\")\r\n                continue;\r\n            var level = dir * indentKeywords[token.value];\r\n\r\n            if (level > 0) {\r\n                stack.unshift(token.value);\r\n            } else if (level <= 0) {\r\n                stack.shift();\r\n                if (!stack.length && token.value != \"elseif\")\r\n                    break;\r\n                if (level === 0)\r\n                    stack.unshift(token.value);\r\n            }\r\n        }\r\n\r\n        if (!token)\r\n            return null;\r\n\r\n        if (tokenRange)\r\n            return stream.getCurrentTokenRange();\r\n\r\n        var row = stream.getCurrentTokenRow();\r\n        if (dir === -1)\r\n            return new Range(row, session.getLine(row).length, startRow, startColumn);\r\n        else\r\n            return new Range(startRow, startColumn, row, stream.getCurrentTokenColumn());\r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n\r\nace.define(\"ace/mode/lua\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/lua_highlight_rules\",\"ace/mode/folding/lua\",\"ace/range\",\"ace/worker/worker_client\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar LuaHighlightRules = require(\"./lua_highlight_rules\").LuaHighlightRules;\r\nvar LuaFoldMode = require(\"./folding/lua\").FoldMode;\r\nvar Range = require(\"../range\").Range;\r\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = LuaHighlightRules;\r\n    \r\n    this.foldingRules = new LuaFoldMode();\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n   \r\n    this.lineCommentStart = \"--\";\r\n    this.blockComment = {start: \"--[\", end: \"]--\"};\r\n    \r\n    var indentKeywords = {\r\n        \"function\": 1,\r\n        \"then\": 1,\r\n        \"do\": 1,\r\n        \"else\": 1,\r\n        \"elseif\": 1,\r\n        \"repeat\": 1,\r\n        \"end\": -1,\r\n        \"until\": -1\r\n    };\r\n    var outdentKeywords = [\r\n        \"else\",\r\n        \"elseif\",\r\n        \"end\",\r\n        \"until\"\r\n    ];\r\n\r\n    function getNetIndentLevel(tokens) {\r\n        var level = 0;\r\n        for (var i = 0; i < tokens.length; i++) {\r\n            var token = tokens[i];\r\n            if (token.type == \"keyword\") {\r\n                if (token.value in indentKeywords) {\r\n                    level += indentKeywords[token.value];\r\n                }\r\n            } else if (token.type == \"paren.lparen\") {\r\n                level += token.value.length;\r\n            } else if (token.type == \"paren.rparen\") {\r\n                level -= token.value.length;\r\n            }\r\n        }\r\n        if (level < 0) {\r\n            return -1;\r\n        } else if (level > 0) {\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n        var level = 0;\r\n\r\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\r\n        var tokens = tokenizedLine.tokens;\r\n\r\n        if (state == \"start\") {\r\n            level = getNetIndentLevel(tokens);\r\n        }\r\n        if (level > 0) {\r\n            return indent + tab;\r\n        } else if (level < 0 && indent.substr(indent.length - tab.length) == tab) {\r\n            if (!this.checkOutdent(state, line, \"\\n\")) {\r\n                return indent.substr(0, indent.length - tab.length);\r\n            }\r\n        }\r\n        return indent;\r\n    };\r\n\r\n    this.checkOutdent = function(state, line, input) {\r\n        if (input != \"\\n\" && input != \"\\r\" && input != \"\\r\\n\")\r\n            return false;\r\n\r\n        if (line.match(/^\\s*[\\)\\}\\]]$/))\r\n            return true;\r\n\r\n        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\r\n\r\n        if (!tokens || !tokens.length)\r\n            return false;\r\n\r\n        return (tokens[0].type == \"keyword\" && outdentKeywords.indexOf(tokens[0].value) != -1);\r\n    };\r\n\r\n    this.getMatching = function(session, row, column) {\r\n        if (row == undefined) {\r\n            var pos = session.selection.lead;\r\n            column = pos.column;\r\n            row = pos.row;\r\n        }\r\n\r\n        var startToken = session.getTokenAt(row, column);\r\n        if (startToken && startToken.value in indentKeywords)\r\n            return this.foldingRules.luaBlock(session, row, column, true);\r\n    };\r\n\r\n    this.autoOutdent = function(state, session, row) {\r\n        var line = session.getLine(row);\r\n        var column = line.match(/^\\s*/)[0].length;\r\n        if (!column || !row) return;\r\n\r\n        var startRange = this.getMatching(session, row, column + 1);\r\n        if (!startRange || startRange.start.row == row)\r\n             return;\r\n        var indent = this.$getIndent(session.getLine(startRange.start.row));\r\n        if (indent.length != column) {\r\n            session.replace(new Range(row, 0, row, column), indent);\r\n            session.outdentRows(new Range(row + 1, 0, row + 1, 0));\r\n        }\r\n    };\r\n\r\n    this.createWorker = function(session) {\r\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/lua_worker\", \"Worker\");\r\n        worker.attachToDocument(session.getDocument());\r\n        \r\n        worker.on(\"annotate\", function(e) {\r\n            session.setAnnotations(e.data);\r\n        });\r\n        \r\n        worker.on(\"terminate\", function() {\r\n            session.clearAnnotations();\r\n        });\r\n        \r\n        return worker;\r\n    };\r\n\r\n    this.$id = \"ace/mode/lua\";\r\n    this.snippetFileId = \"ace/snippets/lua\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});                (function() {\r\n                    ace.require([\"ace/mode/lua\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "]},"metadata":{},"sourceType":"script"}