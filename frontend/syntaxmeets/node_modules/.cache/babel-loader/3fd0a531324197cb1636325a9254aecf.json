{"ast":null,"code":"ace.define(\"ace/mode/toml_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var TomlHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n      \"constant.language.boolean\": \"true|false\"\n    }, \"identifier\");\n    var identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\\\\b\";\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.toml\",\n        regex: /#.*$/\n      }, {\n        token: \"string\",\n        regex: '\"(?=.)',\n        next: \"qqstring\"\n      }, {\n        token: [\"variable.keygroup.toml\"],\n        regex: \"(?:^\\\\s*)(\\\\[\\\\[([^\\\\]]+)\\\\]\\\\])\"\n      }, {\n        token: [\"variable.keygroup.toml\"],\n        regex: \"(?:^\\\\s*)(\\\\[([^\\\\]]+)\\\\])\"\n      }, {\n        token: keywordMapper,\n        regex: identifierRe\n      }, {\n        token: \"support.date.toml\",\n        regex: \"\\\\d{4}-\\\\d{2}-\\\\d{2}(T)\\\\d{2}:\\\\d{2}:\\\\d{2}(Z)\"\n      }, {\n        token: \"constant.numeric.toml\",\n        regex: \"-?\\\\d+(\\\\.?\\\\d+)?\"\n      }],\n      \"qqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qqstring\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: '\\\\\\\\[0tnr\"\\\\\\\\]'\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }]\n    };\n  };\n\n  oop.inherits(TomlHighlightRules, TextHighlightRules);\n  exports.TomlHighlightRules = TomlHighlightRules;\n});\nace.define(\"ace/mode/folding/ini\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /^\\s*\\[([^\\])]*)]\\s*(?:$|[;#])/;\n\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var re = this.foldingStartMarker;\n      var line = session.getLine(row);\n      var m = line.match(re);\n      if (!m) return;\n      var startName = m[1] + \".\";\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        if (/^\\s*$/.test(line)) continue;\n        m = line.match(re);\n        if (m && m[1].lastIndexOf(startName, 0) !== 0) break;\n        endRow = row;\n      }\n\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/toml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/toml_highlight_rules\", \"ace/mode/folding/ini\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var TomlHighlightRules = require(\"./toml_highlight_rules\").TomlHighlightRules;\n\n  var FoldMode = require(\"./folding/ini\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = TomlHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/toml\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/toml\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Users/akash/Desktop/Project/React/SyntaxMeets/frontend/syntaxmeets/node_modules/ace-builds/src-noconflict/mode-toml.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","TomlHighlightRules","keywordMapper","createKeywordMapper","identifierRe","$rules","token","regex","next","defaultToken","inherits","Range","BaseFoldMode","FoldMode","foldingStartMarker","getFoldWidgetRange","session","foldStyle","row","re","line","getLine","m","match","startName","startColumn","length","maxRow","getLength","startRow","endRow","test","lastIndexOf","endColumn","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/toml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar TomlHighlightRules = function() {\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"constant.language.boolean\": \"true|false\"\r\n    }, \"identifier\");\r\n\r\n    var identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\\\\b\";\r\n\r\n    this.$rules = {\r\n    \"start\": [\r\n        {\r\n            token: \"comment.toml\",\r\n            regex: /#.*$/\r\n        },\r\n        {\r\n            token : \"string\",\r\n            regex : '\"(?=.)',\r\n            next  : \"qqstring\"\r\n        },\r\n        {\r\n            token: [\"variable.keygroup.toml\"],\r\n            regex: \"(?:^\\\\s*)(\\\\[\\\\[([^\\\\]]+)\\\\]\\\\])\"\r\n        },\r\n        {\r\n            token: [\"variable.keygroup.toml\"],\r\n            regex: \"(?:^\\\\s*)(\\\\[([^\\\\]]+)\\\\])\"\r\n        },\r\n        {\r\n            token : keywordMapper,\r\n            regex : identifierRe\r\n        },\r\n        {\r\n           token : \"support.date.toml\",\r\n           regex: \"\\\\d{4}-\\\\d{2}-\\\\d{2}(T)\\\\d{2}:\\\\d{2}:\\\\d{2}(Z)\"\r\n        },\r\n        {\r\n           token: \"constant.numeric.toml\",\r\n           regex: \"-?\\\\d+(\\\\.?\\\\d+)?\"\r\n        }\r\n    ],\r\n    \"qqstring\" : [\r\n        {\r\n            token : \"string\",\r\n            regex : \"\\\\\\\\$\",\r\n            next  : \"qqstring\"\r\n        },\r\n        {\r\n            token : \"constant.language.escape\",\r\n            regex : '\\\\\\\\[0tnr\"\\\\\\\\]'\r\n        },\r\n        {\r\n            token : \"string\",\r\n            regex : '\"|$',\r\n            next  : \"start\"\r\n        },\r\n        {\r\n            defaultToken: \"string\"\r\n        }\r\n    ]\r\n    };\r\n\r\n};\r\n\r\noop.inherits(TomlHighlightRules, TextHighlightRules);\r\n\r\nexports.TomlHighlightRules = TomlHighlightRules;\r\n});\r\n\r\nace.define(\"ace/mode/folding/ini\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar Range = require(\"../../range\").Range;\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\n\r\nvar FoldMode = exports.FoldMode = function() {\r\n};\r\noop.inherits(FoldMode, BaseFoldMode);\r\n\r\n(function() {\r\n\r\n    this.foldingStartMarker = /^\\s*\\[([^\\])]*)]\\s*(?:$|[;#])/;\r\n\r\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\r\n        var re = this.foldingStartMarker;\r\n        var line = session.getLine(row);\r\n        \r\n        var m = line.match(re);\r\n        \r\n        if (!m) return;\r\n        \r\n        var startName = m[1] + \".\";\r\n        \r\n        var startColumn = line.length;\r\n        var maxRow = session.getLength();\r\n        var startRow = row;\r\n        var endRow = row;\r\n\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            if (/^\\s*$/.test(line))\r\n                continue;\r\n            m = line.match(re);\r\n            if (m && m[1].lastIndexOf(startName, 0) !== 0)\r\n                break;\r\n\r\n            endRow = row;\r\n        }\r\n\r\n        if (endRow > startRow) {\r\n            var endColumn = session.getLine(endRow).length;\r\n            return new Range(startRow, startColumn, endRow, endColumn);\r\n        }\r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n\r\nace.define(\"ace/mode/toml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/toml_highlight_rules\",\"ace/mode/folding/ini\"], function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar TomlHighlightRules = require(\"./toml_highlight_rules\").TomlHighlightRules;\r\nvar FoldMode = require(\"./folding/ini\").FoldMode;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = TomlHighlightRules;\r\n    this.foldingRules = new FoldMode();\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n    this.lineCommentStart = \"#\";\r\n    this.$id = \"ace/mode/toml\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});                (function() {\r\n                    ace.require([\"ace/mode/toml\"], function(m) {\r\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\r\n                            module.exports = m;\r\n                        }\r\n                    });\r\n                })();\r\n            "]},"metadata":{},"sourceType":"script"}